# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc dfe7d6439b107313eb2d5810fd99d8e5002c0911b27526d84f1136473405b8ce # shrinks to (ty, val) = (ProductType { elements: [] }, ProductValue { elements: [] })
cc 506db914ca1cdfa0f788f728d3f190402b24f6b158bfbf02b7128ec2a2c97062 # shrinks to (ty, val) = (ProductType { elements: [ProductTypeElement { name: None, algebraic_type: Product(ProductType { elements: [ProductTypeElement { name: None, algebraic_type: Builtin(I8) }, ProductTypeElement { name: None, algebraic_type: Builtin(U8) }] }) }, ProductTypeElement { name: None, algebraic_type: Builtin(I8) }] }, ProductValue { elements: [Product(ProductValue { elements: [I8(0), U8(0)] }), I8(0)] })
cc 62a433be11cbcb6a7d87e484a4fe50fcc83159571378777ee6ac6ff19d92f740 # shrinks to (ty, val) = (ProductType { elements: [ProductTypeElement { name: None, algebraic_type: Builtin(String) }] }, ProductValue { elements: [String(" ")] })
cc 7db525c6fd4b0404947db0964859afdf1f5b6a42a353ec2cb3b1185b7f7456ec # shrinks to (ty, val) = (ProductType { elements: [ProductTypeElement { name: None, algebraic_type: Builtin(F32) }, ProductTypeElement { name: None, algebraic_type: Builtin(String) }] }, ProductValue { elements: [F32(Total(0.0)), String("a")] })
cc 1f295db61a02ac3378f5ffcceb084637d2391bcc1758af6fb2df8355a713e998 # shrinks to (ty, val) = (ProductType { elements: [ProductTypeElement { name: None, algebraic_type: Product(ProductType { elements: [ProductTypeElement { name: None, algebraic_type: Builtin(U8) }, ProductTypeElement { name: None, algebraic_type: Builtin(U32) }, ProductTypeElement { name: None, algebraic_type: Builtin(U8) }, ProductTypeElement { name: None, algebraic_type: Builtin(I32) }, ProductTypeElement { name: None, algebraic_type: Builtin(F64) }, ProductTypeElement { name: None, algebraic_type: Builtin(I32) }, ProductTypeElement { name: None, algebraic_type: Builtin(I8) }, ProductTypeElement { name: None, algebraic_type: Builtin(Bool) }, ProductTypeElement { name: None, algebraic_type: Builtin(U128) }, ProductTypeElement { name: None, algebraic_type: Builtin(I64) }, ProductTypeElement { name: None, algebraic_type: Builtin(I32) }, ProductTypeElement { name: None, algebraic_type: Builtin(I64) }] }) }, ProductTypeElement { name: None, algebraic_type: Builtin(Array(ArrayType { elem_ty: Product(ProductType { elements: [] }) })) }, ProductTypeElement { name: None, algebraic_type: Builtin(I128) }, ProductTypeElement { name: None, algebraic_type: Product(ProductType { elements: [ProductTypeElement { name: None, algebraic_type: Builtin(U8) }, ProductTypeElement { name: None, algebraic_type: Builtin(I32) }, ProductTypeElement { name: None, algebraic_type: Builtin(U32) }, ProductTypeElement { name: None, algebraic_type: Builtin(F64) }, ProductTypeElement { name: None, algebraic_type: Builtin(I32) }, ProductTypeElement { name: None, algebraic_type: Product(ProductType { elements: [] }) }, ProductTypeElement { name: None, algebraic_type: Builtin(U128) }, ProductTypeElement { name: None, algebraic_type: Builtin(I128) }, ProductTypeElement { name: None, algebraic_type: Builtin(F32) }] }) }, ProductTypeElement { name: None, algebraic_type: Builtin(Array(ArrayType { elem_ty: Builtin(Bool) })) }, ProductTypeElement { name: None, algebraic_type: Builtin(Map(MapType { key_ty: Builtin(I32), ty: Builtin(F64) })) }, ProductTypeElement { name: None, algebraic_type: Builtin(Map(MapType { key_ty: Builtin(String), ty: Product(ProductType { elements: [] }) })) }, ProductTypeElement { name: None, algebraic_type: Product(ProductType { elements: [] }) }, ProductTypeElement { name: None, algebraic_type: Builtin(String) }, ProductTypeElement { name: None, algebraic_type: Builtin(Map(MapType { key_ty: Builtin(I64), ty: Builtin(I8) })) }] }, ProductValue { elements: [Product(ProductValue { elements: [U8(11), U32(2704794471), U8(8), I32(560143777), F64(Total(-9.491689542097868e133)), I32(985486457), I8(-29), Bool(true), U128(86863927427475495075905443157762268537), I64(-8445479071889615496), I32(-1170195986), I64(6816263725212890698)] }), Array([ProductValue { elements: [] }, ProductValue { elements: [] }, ProductValue { elements: [] }, ProductValue { elements: [] }, ProductValue { elements: [] }, ProductValue { elements: [] }, ProductValue { elements: [] }, ProductValue { elements: [] }, ProductValue { elements: [] }]), I128(-128354251946811180649547031748393312830), Product(ProductValue { elements: [U8(15), I32(-368395546), U32(2838077641), F64(Total(1.2470445399331832e247)), I32(2008554396), Product(ProductValue { elements: [] }), U128(61997091902348291924599987290041086259), I128(-133941015622227481390314668001705570040), F32(Total(0.15960509))] }), Array([false]), Map({I32(-2059030289): F64(Total(-1.6078720198488e-228)), I32(-1525181441): F64(Total(1.710242945029728e-144)), I32(-1052673626): F64(Total(-3.440596620446167e-309)), I32(-1003357692): F64(Total(2.6586000314438054e194)), I32(-486984568): F64(Total(-5.102821862861034e-213)), I32(-301908528): F64(Total(-5.4166271500898735e240)), I32(-167581317): F64(Total(-3.8367297211220085e287)), I32(21583530): F64(Total(-0.0)), I32(405655173): F64(Total(9.047781752663224e-285)), I32(729921068): F64(Total(-1.8324261076055166e-308)), I32(1027660437): F64(Total(-2.1714048524014455e-308)), I32(1446645815): F64(Total(-2.6032637839486984e-299))}), Map({String(""): Product(ProductValue { elements: [] }), String("&?:P‡∂Æ-a√©ñæï‡¶∏¬•:êΩ¥ë∞ár:·ø≤xSÔøΩ~"): Product(ProductValue { elements: [] }), String("*ñø∞<·ùà"): Product(ProductValue { elements: [] }), String("<7=‡™û*yêãß=`T»∫\u{11a09}v6&'\\<@`$‡¶Ü:/W'."): Product(ProductValue { elements: [] }), String("?\u{b4d}ñ≠≠û∏ï·•î¬æ\"·™óF\"/.»∫‡ªëùïÜ\"‡Æö‡®á¬•Z&U69~"): Product(ProductValue { elements: [] }), String("L<%/{üõ§.<¬•ûπâ·æ∂"): Product(ProductValue { elements: [] }), String("uê°øB—®{ëàéû±ªÿè‡∂Ç/6j‚∫ì.Kê§óêèîO<<r"): Product(ProductValue { elements: [] }), String("»∫üï¥XöøΩ&%a&ìëÖüâÖ√Ök`ûìñDSMx'êßÖ*¬•ëäà\"üîÆûÖé"): Product(ProductValue { elements: [] }), String("ê≤¶`=q<—®üõµ{=:&]K7&?ëäçÔ¨ª'h.\"$$"): Product(ProductValue { elements: [] }), String("ûπèëßáÔøΩ=√≠ëñ™i.Ô∏ó:ê§≤%\"@'Bh<êñêêã¥5H»∫`$—®\\*&"): Product(ProductValue { elements: [] }), String("±∂¥Í©äb"): Product(ProductValue { elements: [] })}), Product(ProductValue { elements: [] }), String("'‚Çúê†à±∑∂*!ê´õd‚∑ò\u{e0169}ñæó"), Map({I64(-9030290742665700267): I8(-13), I64(-6470697391802226383): I8(-127), I64(-2634204048655862644): I8(40), I64(-2107696645757475826): I8(85), I64(-732265304332738185): I8(45), I64(1147016759885247030): I8(111), I64(3599640790078676137): I8(-63), I64(4789426107927977142): I8(-71), I64(6297834554178975959): I8(-8), I64(7600031141858237684): I8(-61)})] })
cc 776d142680b35d7dad5b558fea7071b095f7e6a23c8549e9b32b452d5eebf92b # shrinks to (ty, val) = (ProductType { elements: [ProductTypeElement { name: None, algebraic_type: Builtin(String) }] }, ProductValue { elements: [String("\u{16af0}a¬Æ‡®≤ííÄA ëåÖ ‡≤éÍíêëçáA Aê´´A‚∑Äëåµ‡´†\u{b55} a„Ñ± \u{f99}a ")] })
cc 66d99531b8e513d0fd558f492f708d110e1e117dfc7f3f42188bcc57c23bb89e # shrinks to (ty, val) = (ProductType { elements: [ProductTypeElement { name: None, algebraic_type: Builtin(Map(MapType { key_ty: Builtin(U8), ty: Builtin(Map(MapType { key_ty: Builtin(I32), ty: Builtin(F32) })) })) }] }, ProductValue { elements: [Map({U8(0): Map({I32(-4): F32(Total(0.0)), I32(-3): F32(Total(0.0)), I32(-2): F32(Total(-0.0)), I32(-1): F32(Total(-0.0)), I32(0): F32(Total(0.0)), I32(1): F32(Total(0.0)), I32(2): F32(Total(0.0)), I32(3): F32(Total(0.0))}), U8(1): Map({I32(-5): F32(Total(0.0)), I32(-4): F32(Total(0.0)), I32(-3): F32(Total(0.0)), I32(-2): F32(Total(0.0)), I32(-1): F32(Total(-0.0)), I32(0): F32(Total(0.0)), I32(1): F32(Total(0.0)), I32(2): F32(Total(0.0)), I32(3): F32(Total(0.0)), I32(4): F32(Total(0.0)), I32(5): F32(Total(0.0)), I32(6): F32(Total(0.0)), I32(7): F32(Total(0.0))}), U8(2): Map({I32(-3): F32(Total(-0.0)), I32(-2): F32(Total(0.0)), I32(-1): F32(Total(0.0)), I32(0): F32(Total(-0.0)), I32(1): F32(Total(0.0)), I32(2): F32(Total(0.0)), I32(3): F32(Total(0.0))}), U8(3): Map({I32(-10): F32(Total(0.0)), I32(-9): F32(Total(0.0)), I32(-8): F32(Total(-0.0)), I32(-7): F32(Total(0.0)), I32(-6): F32(Total(0.0)), I32(-5): F32(Total(0.0)), I32(-4): F32(Total(0.0)), I32(-3): F32(Total(0.0)), I32(-2): F32(Total(0.0)), I32(-1): F32(Total(0.0)), I32(0): F32(Total(0.0)), I32(1): F32(Total(0.0)), I32(2): F32(Total(0.0))}), U8(4): Map({I32(-7): F32(Total(0.0)), I32(-6): F32(Total(0.0)), I32(-5): F32(Total(0.0)), I32(-4): F32(Total(0.0)), I32(-3): F32(Total(0.0)), I32(-2): F32(Total(0.0)), I32(-1): F32(Total(0.0)), I32(0): F32(Total(0.0)), I32(1): F32(Total(0.0)), I32(2): F32(Total(0.0)), I32(3): F32(Total(0.0))}), U8(5): Map({I32(-9): F32(Total(0.0)), I32(-8): F32(Total(0.0)), I32(-7): F32(Total(0.0)), I32(-6): F32(Total(0.0)), I32(-5): F32(Total(0.0)), I32(-4): F32(Total(0.0)), I32(-3): F32(Total(0.0)), I32(-2): F32(Total(0.0)), I32(-1): F32(Total(0.0)), I32(0): F32(Total(0.0)), I32(1): F32(Total(0.0)), I32(2): F32(Total(0.0)), I32(3): F32(Total(0.0)), I32(4): F32(Total(0.0)), I32(5): F32(Total(0.0))}), U8(6): Map({I32(0): F32(Total(0.0)), I32(1): F32(Total(0.0)), I32(2): F32(Total(0.0))}), U8(7): Map({I32(-4): F32(Total(0.0)), I32(-3): F32(Total(0.0)), I32(-2): F32(Total(0.0)), I32(-1): F32(Total(0.0)), I32(0): F32(Total(0.0)), I32(1): F32(Total(0.0)), I32(2): F32(Total(-0.0)), I32(3): F32(Total(0.0))}), U8(8): Map({I32(-7): F32(Total(0.0)), I32(-6): F32(Total(-0.0)), I32(-5): F32(Total(0.0)), I32(-4): F32(Total(0.0)), I32(-3): F32(Total(0.0)), I32(-2): F32(Total(0.0)), I32(-1): F32(Total(0.0)), I32(0): F32(Total(0.0)), I32(1): F32(Total(0.0)), I32(2): F32(Total(0.0)), I32(3): F32(Total(0.0)), I32(4): F32(Total(0.0)), I32(5): F32(Total(0.0)), I32(6): F32(Total(-0.0)), I32(7): F32(Total(0.0))}), U8(9): Map({I32(-1349171619): F32(Total(418648100.0)), I32(-665792478): F32(Total(-5.3081414e23)), I32(-1): F32(Total(0.0)), I32(0): F32(Total(0.0)), I32(1): F32(Total(0.0)), I32(2): F32(Total(0.0)), I32(3): F32(Total(0.0)), I32(5): F32(Total(-0.0)), I32(906732021): F32(Total(1.952517e16)), I32(1965197035): F32(Total(1020.84216))}), U8(11): Map({I32(-7): F32(Total(0.0)), I32(-6): F32(Total(0.0)), I32(-5): F32(Total(0.0)), I32(-4): F32(Total(0.0)), I32(-3): F32(Total(0.0)), I32(-2): F32(Total(0.0)), I32(-1): F32(Total(0.0)), I32(0): F32(Total(0.0)), I32(1): F32(Total(0.0)), I32(2): F32(Total(0.0)), I32(3): F32(Total(0.0)), I32(4): F32(Total(0.0)), I32(5): F32(Total(0.0)), I32(6): F32(Total(0.0))})})] })
cc 7f478c4dd0f24e715a74949c6d06af8ca2b4c8b82fae4f53c953a2b323cff851 # shrinks to (ty, val) = (ProductType { elements: [ProductTypeElement { name: None, algebraic_type: Builtin(Array(ArrayType { elem_ty: Builtin(Map(MapType { key_ty: Builtin(U64), ty: Builtin(Bool) })) })) }] }, ProductValue { elements: [Array([{U64(0): Bool(false), U64(1): Bool(false), U64(2): Bool(false), U64(3): Bool(false), U64(4): Bool(false), U64(5): Bool(false), U64(6): Bool(false), U64(7): Bool(false), U64(8): Bool(false), U64(9): Bool(false), U64(10): Bool(false), U64(11): Bool(false), U64(12): Bool(false), U64(13): Bool(false)}, {U64(0): Bool(false), U64(1): Bool(false), U64(2): Bool(false), U64(3): Bool(false), U64(4): Bool(false), U64(5): Bool(false), U64(6): Bool(false), U64(7): Bool(false), U64(8): Bool(false), U64(9): Bool(false)}, {U64(0): Bool(false), U64(1): Bool(false), U64(2): Bool(false), U64(3): Bool(false), U64(4): Bool(false), U64(5): Bool(false), U64(6): Bool(false), U64(7): Bool(false), U64(8): Bool(false), U64(9): Bool(false), U64(10): Bool(false), U64(11): Bool(false)}, {U64(0): Bool(false), U64(1): Bool(false), U64(2): Bool(false), U64(3): Bool(false), U64(4): Bool(false), U64(5): Bool(false), U64(6): Bool(false)}, {U64(0): Bool(false), U64(1): Bool(false), U64(2): Bool(false), U64(3): Bool(false), U64(4): Bool(false), U64(5): Bool(false), U64(6): Bool(false), U64(7): Bool(false), U64(8): Bool(false), U64(9): Bool(false), U64(10): Bool(false), U64(11): Bool(false), U64(12): Bool(false)}, {U64(0): Bool(false), U64(1): Bool(false), U64(2): Bool(false), U64(3): Bool(false), U64(4): Bool(false), U64(5): Bool(false), U64(6): Bool(false), U64(7): Bool(false), U64(8): Bool(false), U64(9): Bool(false)}, {U64(0): Bool(false), U64(1): Bool(false), U64(2): Bool(false), U64(3): Bool(false)}, {U64(0): Bool(false), U64(1): Bool(false), U64(2): Bool(false), U64(3): Bool(false), U64(4): Bool(false), U64(5): Bool(false), U64(6): Bool(false), U64(7): Bool(false), U64(8): Bool(false), U64(9): Bool(false), U64(10): Bool(false)}, {U64(0): Bool(false), U64(1): Bool(false), U64(2): Bool(false), U64(3): Bool(false), U64(4): Bool(false), U64(5): Bool(false), U64(6): Bool(false), U64(7): Bool(false), U64(8): Bool(false), U64(9): Bool(false), U64(10): Bool(false)}, {U64(0): Bool(false), U64(1): Bool(false), U64(2): Bool(false), U64(3): Bool(false), U64(4): Bool(false)}, {U64(0): Bool(false), U64(1): Bool(false), U64(2): Bool(false), U64(3): Bool(false), U64(4): Bool(false), U64(5): Bool(false)}, {U64(0): Bool(false), U64(1): Bool(false)}])] })
