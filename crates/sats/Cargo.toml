[package]
name = "spacetimedb-sats"
version.workspace = true
edition.workspace = true
license-file = "LICENSE"
description = "Spacetime Algebraic Type Notation"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
serde = ["dep:serde"]
# Allows using `Arbitrary` impls defined in this crate.
proptest = ["dep:proptest", "dep:proptest-derive"]
# Allows using additional test-only methods defined in this crate.
test = ["proptest"]
# Impls `Serialize` and `Deserialize` for `blake3::Hash`.
# Used by `spacetimedb_table`,
# which serializes and deserializes Blake3 hashes during snapshotting.
blake3 = ["dep:blake3"]
# Impls `Serialize`, `Deserialize` and `SpacetimeType` for `ByteString`.
# Used by `spacetimedb_client_api_messages`,
# which encodes rows and reducer arguments as `ByteString`s containing JSON.
# Feature-gated because `bytestring` depends on `serde`,
# which we don't want in `spacetimedb_bindings`.
bytestring = ["dep:bytestring"]
metrics_impls = ["dep:spacetimedb-metrics"]

[dependencies]
spacetimedb-bindings-macro.workspace = true
spacetimedb-primitives.workspace = true
spacetimedb-metrics = { workspace = true, optional = true }

anyhow.workspace = true
arrayvec.workspace = true
bitflags.workspace = true
bytes.workspace = true
bytemuck.workspace = true
bytestring = { workspace = true, optional = true }
chrono = { workspace = true, features = ["alloc"] }
decorum.workspace = true
derive_more.workspace = true
enum-as-inner.workspace = true
ethnum.workspace = true
hex.workspace = true
itertools.workspace = true
# For the 'proptest' feature.
proptest = { workspace = true, optional = true }
proptest-derive = { workspace = true, optional = true }
sha3.workspace = true
second-stack.workspace = true
serde = { workspace = true, optional = true }
smallvec.workspace = true
thiserror.workspace = true

# For the `blake3` feature.
blake3 = { workspace = true, optional = true }

[dev-dependencies]
ahash.workspace = true
bytes.workspace = true
rand.workspace = true
# Also as dev-dependencies for use in _this_ crate's tests.
proptest.workspace = true
proptest-derive.workspace = true
