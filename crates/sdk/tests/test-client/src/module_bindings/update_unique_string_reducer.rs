// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused_imports)]
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, i256, ser::Serialize, u256},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address, ScheduleAt,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct UpdateUniqueStringArgs {
    pub s: String,
    pub data: i32,
}

impl Reducer for UpdateUniqueStringArgs {
    const REDUCER_NAME: &'static str = "update_unique_string";
}

#[allow(unused)]
pub fn update_unique_string(s: String, data: i32) {
    UpdateUniqueStringArgs { s, data }.invoke();
}

#[allow(unused)]
pub fn on_update_unique_string(
    mut __callback: impl FnMut(&Identity, Option<Address>, &Status, &String, &i32) + Send + 'static,
) -> ReducerCallbackId<UpdateUniqueStringArgs> {
    UpdateUniqueStringArgs::on_reducer(move |__identity, __addr, __status, __args| {
        let UpdateUniqueStringArgs { s, data } = __args;
        __callback(__identity, __addr, __status, s, data);
    })
}

#[allow(unused)]
pub fn once_on_update_unique_string(
    __callback: impl FnOnce(&Identity, Option<Address>, &Status, &String, &i32) + Send + 'static,
) -> ReducerCallbackId<UpdateUniqueStringArgs> {
    UpdateUniqueStringArgs::once_on_reducer(move |__identity, __addr, __status, __args| {
        let UpdateUniqueStringArgs { s, data } = __args;
        __callback(__identity, __addr, __status, s, data);
    })
}

#[allow(unused)]
pub fn remove_on_update_unique_string(id: ReducerCallbackId<UpdateUniqueStringArgs>) {
    UpdateUniqueStringArgs::remove_on_reducer(id);
}
