// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct InsertVecAddressArgs {
    pub a: Vec<Address>,
}

impl Reducer for InsertVecAddressArgs {
    const REDUCER_NAME: &'static str = "insert_vec_address";
}

#[allow(unused)]
pub fn insert_vec_address(a: Vec<Address>) {
    InsertVecAddressArgs { a }.invoke();
}

#[allow(unused)]
pub fn on_insert_vec_address(
    mut __callback: impl FnMut(&Identity, Option<Address>, &Status, &Vec<Address>) + Send + 'static,
) -> ReducerCallbackId<InsertVecAddressArgs> {
    InsertVecAddressArgs::on_reducer(move |__identity, __addr, __status, __args| {
        let InsertVecAddressArgs { a } = __args;
        __callback(__identity, __addr, __status, a);
    })
}

#[allow(unused)]
pub fn once_on_insert_vec_address(
    __callback: impl FnOnce(&Identity, Option<Address>, &Status, &Vec<Address>) + Send + 'static,
) -> ReducerCallbackId<InsertVecAddressArgs> {
    InsertVecAddressArgs::once_on_reducer(move |__identity, __addr, __status, __args| {
        let InsertVecAddressArgs { a } = __args;
        __callback(__identity, __addr, __status, a);
    })
}

#[allow(unused)]
pub fn remove_on_insert_vec_address(id: ReducerCallbackId<InsertVecAddressArgs>) {
    InsertVecAddressArgs::remove_on_reducer(id);
}
