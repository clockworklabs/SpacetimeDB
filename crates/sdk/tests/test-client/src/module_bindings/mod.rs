// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused)]
use spacetimedb_sdk::{
    self as __sdk,
    anyhow::{self as __anyhow, Context as _},
    lib as __lib, sats as __sats, ws_messages as __ws,
};

pub mod byte_struct_type;
pub mod delete_pk_address_reducer;
pub mod delete_pk_bool_reducer;
pub mod delete_pk_i_128_reducer;
pub mod delete_pk_i_16_reducer;
pub mod delete_pk_i_256_reducer;
pub mod delete_pk_i_32_reducer;
pub mod delete_pk_i_64_reducer;
pub mod delete_pk_i_8_reducer;
pub mod delete_pk_identity_reducer;
pub mod delete_pk_string_reducer;
pub mod delete_pk_u_128_reducer;
pub mod delete_pk_u_16_reducer;
pub mod delete_pk_u_256_reducer;
pub mod delete_pk_u_32_reducer;
pub mod delete_pk_u_64_reducer;
pub mod delete_pk_u_8_reducer;
pub mod delete_unique_address_reducer;
pub mod delete_unique_bool_reducer;
pub mod delete_unique_i_128_reducer;
pub mod delete_unique_i_16_reducer;
pub mod delete_unique_i_256_reducer;
pub mod delete_unique_i_32_reducer;
pub mod delete_unique_i_64_reducer;
pub mod delete_unique_i_8_reducer;
pub mod delete_unique_identity_reducer;
pub mod delete_unique_string_reducer;
pub mod delete_unique_u_128_reducer;
pub mod delete_unique_u_16_reducer;
pub mod delete_unique_u_256_reducer;
pub mod delete_unique_u_32_reducer;
pub mod delete_unique_u_64_reducer;
pub mod delete_unique_u_8_reducer;
pub mod enum_with_payload_type;
pub mod every_primitive_struct_type;
pub mod every_vec_struct_type;
pub mod insert_caller_one_address_reducer;
pub mod insert_caller_one_identity_reducer;
pub mod insert_caller_pk_address_reducer;
pub mod insert_caller_pk_identity_reducer;
pub mod insert_caller_unique_address_reducer;
pub mod insert_caller_unique_identity_reducer;
pub mod insert_caller_vec_address_reducer;
pub mod insert_caller_vec_identity_reducer;
pub mod insert_large_table_reducer;
pub mod insert_one_address_reducer;
pub mod insert_one_bool_reducer;
pub mod insert_one_byte_struct_reducer;
pub mod insert_one_enum_with_payload_reducer;
pub mod insert_one_every_primitive_struct_reducer;
pub mod insert_one_every_vec_struct_reducer;
pub mod insert_one_f_32_reducer;
pub mod insert_one_f_64_reducer;
pub mod insert_one_i_128_reducer;
pub mod insert_one_i_16_reducer;
pub mod insert_one_i_256_reducer;
pub mod insert_one_i_32_reducer;
pub mod insert_one_i_64_reducer;
pub mod insert_one_i_8_reducer;
pub mod insert_one_identity_reducer;
pub mod insert_one_simple_enum_reducer;
pub mod insert_one_string_reducer;
pub mod insert_one_u_128_reducer;
pub mod insert_one_u_16_reducer;
pub mod insert_one_u_256_reducer;
pub mod insert_one_u_32_reducer;
pub mod insert_one_u_64_reducer;
pub mod insert_one_u_8_reducer;
pub mod insert_one_unit_struct_reducer;
pub mod insert_option_every_primitive_struct_reducer;
pub mod insert_option_i_32_reducer;
pub mod insert_option_identity_reducer;
pub mod insert_option_simple_enum_reducer;
pub mod insert_option_string_reducer;
pub mod insert_option_vec_option_i_32_reducer;
pub mod insert_pk_address_reducer;
pub mod insert_pk_bool_reducer;
pub mod insert_pk_i_128_reducer;
pub mod insert_pk_i_16_reducer;
pub mod insert_pk_i_256_reducer;
pub mod insert_pk_i_32_reducer;
pub mod insert_pk_i_64_reducer;
pub mod insert_pk_i_8_reducer;
pub mod insert_pk_identity_reducer;
pub mod insert_pk_string_reducer;
pub mod insert_pk_u_128_reducer;
pub mod insert_pk_u_16_reducer;
pub mod insert_pk_u_256_reducer;
pub mod insert_pk_u_32_reducer;
pub mod insert_pk_u_64_reducer;
pub mod insert_pk_u_8_reducer;
pub mod insert_primitives_as_strings_reducer;
pub mod insert_table_holds_table_reducer;
pub mod insert_unique_address_reducer;
pub mod insert_unique_bool_reducer;
pub mod insert_unique_i_128_reducer;
pub mod insert_unique_i_16_reducer;
pub mod insert_unique_i_256_reducer;
pub mod insert_unique_i_32_reducer;
pub mod insert_unique_i_64_reducer;
pub mod insert_unique_i_8_reducer;
pub mod insert_unique_identity_reducer;
pub mod insert_unique_string_reducer;
pub mod insert_unique_u_128_reducer;
pub mod insert_unique_u_16_reducer;
pub mod insert_unique_u_256_reducer;
pub mod insert_unique_u_32_reducer;
pub mod insert_unique_u_64_reducer;
pub mod insert_unique_u_8_reducer;
pub mod insert_vec_address_reducer;
pub mod insert_vec_bool_reducer;
pub mod insert_vec_byte_struct_reducer;
pub mod insert_vec_enum_with_payload_reducer;
pub mod insert_vec_every_primitive_struct_reducer;
pub mod insert_vec_every_vec_struct_reducer;
pub mod insert_vec_f_32_reducer;
pub mod insert_vec_f_64_reducer;
pub mod insert_vec_i_128_reducer;
pub mod insert_vec_i_16_reducer;
pub mod insert_vec_i_256_reducer;
pub mod insert_vec_i_32_reducer;
pub mod insert_vec_i_64_reducer;
pub mod insert_vec_i_8_reducer;
pub mod insert_vec_identity_reducer;
pub mod insert_vec_simple_enum_reducer;
pub mod insert_vec_string_reducer;
pub mod insert_vec_u_128_reducer;
pub mod insert_vec_u_16_reducer;
pub mod insert_vec_u_256_reducer;
pub mod insert_vec_u_32_reducer;
pub mod insert_vec_u_64_reducer;
pub mod insert_vec_u_8_reducer;
pub mod insert_vec_unit_struct_reducer;
pub mod large_table_table;
pub mod large_table_type;
pub mod no_op_succeeds_reducer;
pub mod one_address_table;
pub mod one_address_type;
pub mod one_bool_table;
pub mod one_bool_type;
pub mod one_byte_struct_table;
pub mod one_byte_struct_type;
pub mod one_enum_with_payload_table;
pub mod one_enum_with_payload_type;
pub mod one_every_primitive_struct_table;
pub mod one_every_primitive_struct_type;
pub mod one_every_vec_struct_table;
pub mod one_every_vec_struct_type;
pub mod one_f_32_table;
pub mod one_f_32_type;
pub mod one_f_64_table;
pub mod one_f_64_type;
pub mod one_i_128_table;
pub mod one_i_128_type;
pub mod one_i_16_table;
pub mod one_i_16_type;
pub mod one_i_256_table;
pub mod one_i_256_type;
pub mod one_i_32_table;
pub mod one_i_32_type;
pub mod one_i_64_table;
pub mod one_i_64_type;
pub mod one_i_8_table;
pub mod one_i_8_type;
pub mod one_identity_table;
pub mod one_identity_type;
pub mod one_simple_enum_table;
pub mod one_simple_enum_type;
pub mod one_string_table;
pub mod one_string_type;
pub mod one_u_128_table;
pub mod one_u_128_type;
pub mod one_u_16_table;
pub mod one_u_16_type;
pub mod one_u_256_table;
pub mod one_u_256_type;
pub mod one_u_32_table;
pub mod one_u_32_type;
pub mod one_u_64_table;
pub mod one_u_64_type;
pub mod one_u_8_table;
pub mod one_u_8_type;
pub mod one_unit_struct_table;
pub mod one_unit_struct_type;
pub mod option_every_primitive_struct_table;
pub mod option_every_primitive_struct_type;
pub mod option_i_32_table;
pub mod option_i_32_type;
pub mod option_identity_table;
pub mod option_identity_type;
pub mod option_simple_enum_table;
pub mod option_simple_enum_type;
pub mod option_string_table;
pub mod option_string_type;
pub mod option_vec_option_i_32_table;
pub mod option_vec_option_i_32_type;
pub mod pk_address_table;
pub mod pk_address_type;
pub mod pk_bool_table;
pub mod pk_bool_type;
pub mod pk_i_128_table;
pub mod pk_i_128_type;
pub mod pk_i_16_table;
pub mod pk_i_16_type;
pub mod pk_i_256_table;
pub mod pk_i_256_type;
pub mod pk_i_32_table;
pub mod pk_i_32_type;
pub mod pk_i_64_table;
pub mod pk_i_64_type;
pub mod pk_i_8_table;
pub mod pk_i_8_type;
pub mod pk_identity_table;
pub mod pk_identity_type;
pub mod pk_string_table;
pub mod pk_string_type;
pub mod pk_u_128_table;
pub mod pk_u_128_type;
pub mod pk_u_16_table;
pub mod pk_u_16_type;
pub mod pk_u_256_table;
pub mod pk_u_256_type;
pub mod pk_u_32_table;
pub mod pk_u_32_type;
pub mod pk_u_64_table;
pub mod pk_u_64_type;
pub mod pk_u_8_table;
pub mod pk_u_8_type;
pub mod simple_enum_type;
pub mod table_holds_table_table;
pub mod table_holds_table_type;
pub mod unique_address_table;
pub mod unique_address_type;
pub mod unique_bool_table;
pub mod unique_bool_type;
pub mod unique_i_128_table;
pub mod unique_i_128_type;
pub mod unique_i_16_table;
pub mod unique_i_16_type;
pub mod unique_i_256_table;
pub mod unique_i_256_type;
pub mod unique_i_32_table;
pub mod unique_i_32_type;
pub mod unique_i_64_table;
pub mod unique_i_64_type;
pub mod unique_i_8_table;
pub mod unique_i_8_type;
pub mod unique_identity_table;
pub mod unique_identity_type;
pub mod unique_string_table;
pub mod unique_string_type;
pub mod unique_u_128_table;
pub mod unique_u_128_type;
pub mod unique_u_16_table;
pub mod unique_u_16_type;
pub mod unique_u_256_table;
pub mod unique_u_256_type;
pub mod unique_u_32_table;
pub mod unique_u_32_type;
pub mod unique_u_64_table;
pub mod unique_u_64_type;
pub mod unique_u_8_table;
pub mod unique_u_8_type;
pub mod unit_struct_type;
pub mod update_pk_address_reducer;
pub mod update_pk_bool_reducer;
pub mod update_pk_i_128_reducer;
pub mod update_pk_i_16_reducer;
pub mod update_pk_i_256_reducer;
pub mod update_pk_i_32_reducer;
pub mod update_pk_i_64_reducer;
pub mod update_pk_i_8_reducer;
pub mod update_pk_identity_reducer;
pub mod update_pk_string_reducer;
pub mod update_pk_u_128_reducer;
pub mod update_pk_u_16_reducer;
pub mod update_pk_u_256_reducer;
pub mod update_pk_u_32_reducer;
pub mod update_pk_u_64_reducer;
pub mod update_pk_u_8_reducer;
pub mod update_unique_address_reducer;
pub mod update_unique_bool_reducer;
pub mod update_unique_i_128_reducer;
pub mod update_unique_i_16_reducer;
pub mod update_unique_i_256_reducer;
pub mod update_unique_i_32_reducer;
pub mod update_unique_i_64_reducer;
pub mod update_unique_i_8_reducer;
pub mod update_unique_identity_reducer;
pub mod update_unique_string_reducer;
pub mod update_unique_u_128_reducer;
pub mod update_unique_u_16_reducer;
pub mod update_unique_u_256_reducer;
pub mod update_unique_u_32_reducer;
pub mod update_unique_u_64_reducer;
pub mod update_unique_u_8_reducer;
pub mod vec_address_table;
pub mod vec_address_type;
pub mod vec_bool_table;
pub mod vec_bool_type;
pub mod vec_byte_struct_table;
pub mod vec_byte_struct_type;
pub mod vec_enum_with_payload_table;
pub mod vec_enum_with_payload_type;
pub mod vec_every_primitive_struct_table;
pub mod vec_every_primitive_struct_type;
pub mod vec_every_vec_struct_table;
pub mod vec_every_vec_struct_type;
pub mod vec_f_32_table;
pub mod vec_f_32_type;
pub mod vec_f_64_table;
pub mod vec_f_64_type;
pub mod vec_i_128_table;
pub mod vec_i_128_type;
pub mod vec_i_16_table;
pub mod vec_i_16_type;
pub mod vec_i_256_table;
pub mod vec_i_256_type;
pub mod vec_i_32_table;
pub mod vec_i_32_type;
pub mod vec_i_64_table;
pub mod vec_i_64_type;
pub mod vec_i_8_table;
pub mod vec_i_8_type;
pub mod vec_identity_table;
pub mod vec_identity_type;
pub mod vec_simple_enum_table;
pub mod vec_simple_enum_type;
pub mod vec_string_table;
pub mod vec_string_type;
pub mod vec_u_128_table;
pub mod vec_u_128_type;
pub mod vec_u_16_table;
pub mod vec_u_16_type;
pub mod vec_u_256_table;
pub mod vec_u_256_type;
pub mod vec_u_32_table;
pub mod vec_u_32_type;
pub mod vec_u_64_table;
pub mod vec_u_64_type;
pub mod vec_u_8_table;
pub mod vec_u_8_type;
pub mod vec_unit_struct_table;
pub mod vec_unit_struct_type;

pub use byte_struct_type::*;
pub use delete_pk_address_reducer::*;
pub use delete_pk_bool_reducer::*;
pub use delete_pk_i_128_reducer::*;
pub use delete_pk_i_16_reducer::*;
pub use delete_pk_i_256_reducer::*;
pub use delete_pk_i_32_reducer::*;
pub use delete_pk_i_64_reducer::*;
pub use delete_pk_i_8_reducer::*;
pub use delete_pk_identity_reducer::*;
pub use delete_pk_string_reducer::*;
pub use delete_pk_u_128_reducer::*;
pub use delete_pk_u_16_reducer::*;
pub use delete_pk_u_256_reducer::*;
pub use delete_pk_u_32_reducer::*;
pub use delete_pk_u_64_reducer::*;
pub use delete_pk_u_8_reducer::*;
pub use delete_unique_address_reducer::*;
pub use delete_unique_bool_reducer::*;
pub use delete_unique_i_128_reducer::*;
pub use delete_unique_i_16_reducer::*;
pub use delete_unique_i_256_reducer::*;
pub use delete_unique_i_32_reducer::*;
pub use delete_unique_i_64_reducer::*;
pub use delete_unique_i_8_reducer::*;
pub use delete_unique_identity_reducer::*;
pub use delete_unique_string_reducer::*;
pub use delete_unique_u_128_reducer::*;
pub use delete_unique_u_16_reducer::*;
pub use delete_unique_u_256_reducer::*;
pub use delete_unique_u_32_reducer::*;
pub use delete_unique_u_64_reducer::*;
pub use delete_unique_u_8_reducer::*;
pub use enum_with_payload_type::*;
pub use every_primitive_struct_type::*;
pub use every_vec_struct_type::*;
pub use insert_caller_one_address_reducer::*;
pub use insert_caller_one_identity_reducer::*;
pub use insert_caller_pk_address_reducer::*;
pub use insert_caller_pk_identity_reducer::*;
pub use insert_caller_unique_address_reducer::*;
pub use insert_caller_unique_identity_reducer::*;
pub use insert_caller_vec_address_reducer::*;
pub use insert_caller_vec_identity_reducer::*;
pub use insert_large_table_reducer::*;
pub use insert_one_address_reducer::*;
pub use insert_one_bool_reducer::*;
pub use insert_one_byte_struct_reducer::*;
pub use insert_one_enum_with_payload_reducer::*;
pub use insert_one_every_primitive_struct_reducer::*;
pub use insert_one_every_vec_struct_reducer::*;
pub use insert_one_f_32_reducer::*;
pub use insert_one_f_64_reducer::*;
pub use insert_one_i_128_reducer::*;
pub use insert_one_i_16_reducer::*;
pub use insert_one_i_256_reducer::*;
pub use insert_one_i_32_reducer::*;
pub use insert_one_i_64_reducer::*;
pub use insert_one_i_8_reducer::*;
pub use insert_one_identity_reducer::*;
pub use insert_one_simple_enum_reducer::*;
pub use insert_one_string_reducer::*;
pub use insert_one_u_128_reducer::*;
pub use insert_one_u_16_reducer::*;
pub use insert_one_u_256_reducer::*;
pub use insert_one_u_32_reducer::*;
pub use insert_one_u_64_reducer::*;
pub use insert_one_u_8_reducer::*;
pub use insert_one_unit_struct_reducer::*;
pub use insert_option_every_primitive_struct_reducer::*;
pub use insert_option_i_32_reducer::*;
pub use insert_option_identity_reducer::*;
pub use insert_option_simple_enum_reducer::*;
pub use insert_option_string_reducer::*;
pub use insert_option_vec_option_i_32_reducer::*;
pub use insert_pk_address_reducer::*;
pub use insert_pk_bool_reducer::*;
pub use insert_pk_i_128_reducer::*;
pub use insert_pk_i_16_reducer::*;
pub use insert_pk_i_256_reducer::*;
pub use insert_pk_i_32_reducer::*;
pub use insert_pk_i_64_reducer::*;
pub use insert_pk_i_8_reducer::*;
pub use insert_pk_identity_reducer::*;
pub use insert_pk_string_reducer::*;
pub use insert_pk_u_128_reducer::*;
pub use insert_pk_u_16_reducer::*;
pub use insert_pk_u_256_reducer::*;
pub use insert_pk_u_32_reducer::*;
pub use insert_pk_u_64_reducer::*;
pub use insert_pk_u_8_reducer::*;
pub use insert_primitives_as_strings_reducer::*;
pub use insert_table_holds_table_reducer::*;
pub use insert_unique_address_reducer::*;
pub use insert_unique_bool_reducer::*;
pub use insert_unique_i_128_reducer::*;
pub use insert_unique_i_16_reducer::*;
pub use insert_unique_i_256_reducer::*;
pub use insert_unique_i_32_reducer::*;
pub use insert_unique_i_64_reducer::*;
pub use insert_unique_i_8_reducer::*;
pub use insert_unique_identity_reducer::*;
pub use insert_unique_string_reducer::*;
pub use insert_unique_u_128_reducer::*;
pub use insert_unique_u_16_reducer::*;
pub use insert_unique_u_256_reducer::*;
pub use insert_unique_u_32_reducer::*;
pub use insert_unique_u_64_reducer::*;
pub use insert_unique_u_8_reducer::*;
pub use insert_vec_address_reducer::*;
pub use insert_vec_bool_reducer::*;
pub use insert_vec_byte_struct_reducer::*;
pub use insert_vec_enum_with_payload_reducer::*;
pub use insert_vec_every_primitive_struct_reducer::*;
pub use insert_vec_every_vec_struct_reducer::*;
pub use insert_vec_f_32_reducer::*;
pub use insert_vec_f_64_reducer::*;
pub use insert_vec_i_128_reducer::*;
pub use insert_vec_i_16_reducer::*;
pub use insert_vec_i_256_reducer::*;
pub use insert_vec_i_32_reducer::*;
pub use insert_vec_i_64_reducer::*;
pub use insert_vec_i_8_reducer::*;
pub use insert_vec_identity_reducer::*;
pub use insert_vec_simple_enum_reducer::*;
pub use insert_vec_string_reducer::*;
pub use insert_vec_u_128_reducer::*;
pub use insert_vec_u_16_reducer::*;
pub use insert_vec_u_256_reducer::*;
pub use insert_vec_u_32_reducer::*;
pub use insert_vec_u_64_reducer::*;
pub use insert_vec_u_8_reducer::*;
pub use insert_vec_unit_struct_reducer::*;
pub use large_table_table::*;
pub use large_table_type::*;
pub use no_op_succeeds_reducer::*;
pub use one_address_table::*;
pub use one_address_type::*;
pub use one_bool_table::*;
pub use one_bool_type::*;
pub use one_byte_struct_table::*;
pub use one_byte_struct_type::*;
pub use one_enum_with_payload_table::*;
pub use one_enum_with_payload_type::*;
pub use one_every_primitive_struct_table::*;
pub use one_every_primitive_struct_type::*;
pub use one_every_vec_struct_table::*;
pub use one_every_vec_struct_type::*;
pub use one_f_32_table::*;
pub use one_f_32_type::*;
pub use one_f_64_table::*;
pub use one_f_64_type::*;
pub use one_i_128_table::*;
pub use one_i_128_type::*;
pub use one_i_16_table::*;
pub use one_i_16_type::*;
pub use one_i_256_table::*;
pub use one_i_256_type::*;
pub use one_i_32_table::*;
pub use one_i_32_type::*;
pub use one_i_64_table::*;
pub use one_i_64_type::*;
pub use one_i_8_table::*;
pub use one_i_8_type::*;
pub use one_identity_table::*;
pub use one_identity_type::*;
pub use one_simple_enum_table::*;
pub use one_simple_enum_type::*;
pub use one_string_table::*;
pub use one_string_type::*;
pub use one_u_128_table::*;
pub use one_u_128_type::*;
pub use one_u_16_table::*;
pub use one_u_16_type::*;
pub use one_u_256_table::*;
pub use one_u_256_type::*;
pub use one_u_32_table::*;
pub use one_u_32_type::*;
pub use one_u_64_table::*;
pub use one_u_64_type::*;
pub use one_u_8_table::*;
pub use one_u_8_type::*;
pub use one_unit_struct_table::*;
pub use one_unit_struct_type::*;
pub use option_every_primitive_struct_table::*;
pub use option_every_primitive_struct_type::*;
pub use option_i_32_table::*;
pub use option_i_32_type::*;
pub use option_identity_table::*;
pub use option_identity_type::*;
pub use option_simple_enum_table::*;
pub use option_simple_enum_type::*;
pub use option_string_table::*;
pub use option_string_type::*;
pub use option_vec_option_i_32_table::*;
pub use option_vec_option_i_32_type::*;
pub use pk_address_table::*;
pub use pk_address_type::*;
pub use pk_bool_table::*;
pub use pk_bool_type::*;
pub use pk_i_128_table::*;
pub use pk_i_128_type::*;
pub use pk_i_16_table::*;
pub use pk_i_16_type::*;
pub use pk_i_256_table::*;
pub use pk_i_256_type::*;
pub use pk_i_32_table::*;
pub use pk_i_32_type::*;
pub use pk_i_64_table::*;
pub use pk_i_64_type::*;
pub use pk_i_8_table::*;
pub use pk_i_8_type::*;
pub use pk_identity_table::*;
pub use pk_identity_type::*;
pub use pk_string_table::*;
pub use pk_string_type::*;
pub use pk_u_128_table::*;
pub use pk_u_128_type::*;
pub use pk_u_16_table::*;
pub use pk_u_16_type::*;
pub use pk_u_256_table::*;
pub use pk_u_256_type::*;
pub use pk_u_32_table::*;
pub use pk_u_32_type::*;
pub use pk_u_64_table::*;
pub use pk_u_64_type::*;
pub use pk_u_8_table::*;
pub use pk_u_8_type::*;
pub use simple_enum_type::*;
pub use table_holds_table_table::*;
pub use table_holds_table_type::*;
pub use unique_address_table::*;
pub use unique_address_type::*;
pub use unique_bool_table::*;
pub use unique_bool_type::*;
pub use unique_i_128_table::*;
pub use unique_i_128_type::*;
pub use unique_i_16_table::*;
pub use unique_i_16_type::*;
pub use unique_i_256_table::*;
pub use unique_i_256_type::*;
pub use unique_i_32_table::*;
pub use unique_i_32_type::*;
pub use unique_i_64_table::*;
pub use unique_i_64_type::*;
pub use unique_i_8_table::*;
pub use unique_i_8_type::*;
pub use unique_identity_table::*;
pub use unique_identity_type::*;
pub use unique_string_table::*;
pub use unique_string_type::*;
pub use unique_u_128_table::*;
pub use unique_u_128_type::*;
pub use unique_u_16_table::*;
pub use unique_u_16_type::*;
pub use unique_u_256_table::*;
pub use unique_u_256_type::*;
pub use unique_u_32_table::*;
pub use unique_u_32_type::*;
pub use unique_u_64_table::*;
pub use unique_u_64_type::*;
pub use unique_u_8_table::*;
pub use unique_u_8_type::*;
pub use unit_struct_type::*;
pub use update_pk_address_reducer::*;
pub use update_pk_bool_reducer::*;
pub use update_pk_i_128_reducer::*;
pub use update_pk_i_16_reducer::*;
pub use update_pk_i_256_reducer::*;
pub use update_pk_i_32_reducer::*;
pub use update_pk_i_64_reducer::*;
pub use update_pk_i_8_reducer::*;
pub use update_pk_identity_reducer::*;
pub use update_pk_string_reducer::*;
pub use update_pk_u_128_reducer::*;
pub use update_pk_u_16_reducer::*;
pub use update_pk_u_256_reducer::*;
pub use update_pk_u_32_reducer::*;
pub use update_pk_u_64_reducer::*;
pub use update_pk_u_8_reducer::*;
pub use update_unique_address_reducer::*;
pub use update_unique_bool_reducer::*;
pub use update_unique_i_128_reducer::*;
pub use update_unique_i_16_reducer::*;
pub use update_unique_i_256_reducer::*;
pub use update_unique_i_32_reducer::*;
pub use update_unique_i_64_reducer::*;
pub use update_unique_i_8_reducer::*;
pub use update_unique_identity_reducer::*;
pub use update_unique_string_reducer::*;
pub use update_unique_u_128_reducer::*;
pub use update_unique_u_16_reducer::*;
pub use update_unique_u_256_reducer::*;
pub use update_unique_u_32_reducer::*;
pub use update_unique_u_64_reducer::*;
pub use update_unique_u_8_reducer::*;
pub use vec_address_table::*;
pub use vec_address_type::*;
pub use vec_bool_table::*;
pub use vec_bool_type::*;
pub use vec_byte_struct_table::*;
pub use vec_byte_struct_type::*;
pub use vec_enum_with_payload_table::*;
pub use vec_enum_with_payload_type::*;
pub use vec_every_primitive_struct_table::*;
pub use vec_every_primitive_struct_type::*;
pub use vec_every_vec_struct_table::*;
pub use vec_every_vec_struct_type::*;
pub use vec_f_32_table::*;
pub use vec_f_32_type::*;
pub use vec_f_64_table::*;
pub use vec_f_64_type::*;
pub use vec_i_128_table::*;
pub use vec_i_128_type::*;
pub use vec_i_16_table::*;
pub use vec_i_16_type::*;
pub use vec_i_256_table::*;
pub use vec_i_256_type::*;
pub use vec_i_32_table::*;
pub use vec_i_32_type::*;
pub use vec_i_64_table::*;
pub use vec_i_64_type::*;
pub use vec_i_8_table::*;
pub use vec_i_8_type::*;
pub use vec_identity_table::*;
pub use vec_identity_type::*;
pub use vec_simple_enum_table::*;
pub use vec_simple_enum_type::*;
pub use vec_string_table::*;
pub use vec_string_type::*;
pub use vec_u_128_table::*;
pub use vec_u_128_type::*;
pub use vec_u_16_table::*;
pub use vec_u_16_type::*;
pub use vec_u_256_table::*;
pub use vec_u_256_type::*;
pub use vec_u_32_table::*;
pub use vec_u_32_type::*;
pub use vec_u_64_table::*;
pub use vec_u_64_type::*;
pub use vec_u_8_table::*;
pub use vec_u_8_type::*;
pub use vec_unit_struct_table::*;
pub use vec_unit_struct_type::*;

#[derive(__lib::ser::Serialize, __lib::de::Deserialize, Clone, PartialEq, Debug)]
#[sats(crate = __lib)]

/// One of the reducers defined by this module.
///
/// Contained within a [`__sdk::ReducerEvent`] in [`EventContext`]s for reducer events
/// to indicate which reducer caused the event.

pub enum Reducer {
    DeletePkAddress(delete_pk_address_reducer::DeletePkAddress),
    DeletePkBool(delete_pk_bool_reducer::DeletePkBool),
    DeletePkI128(delete_pk_i_128_reducer::DeletePkI128),
    DeletePkI16(delete_pk_i_16_reducer::DeletePkI16),
    DeletePkI256(delete_pk_i_256_reducer::DeletePkI256),
    DeletePkI32(delete_pk_i_32_reducer::DeletePkI32),
    DeletePkI64(delete_pk_i_64_reducer::DeletePkI64),
    DeletePkI8(delete_pk_i_8_reducer::DeletePkI8),
    DeletePkIdentity(delete_pk_identity_reducer::DeletePkIdentity),
    DeletePkString(delete_pk_string_reducer::DeletePkString),
    DeletePkU128(delete_pk_u_128_reducer::DeletePkU128),
    DeletePkU16(delete_pk_u_16_reducer::DeletePkU16),
    DeletePkU256(delete_pk_u_256_reducer::DeletePkU256),
    DeletePkU32(delete_pk_u_32_reducer::DeletePkU32),
    DeletePkU64(delete_pk_u_64_reducer::DeletePkU64),
    DeletePkU8(delete_pk_u_8_reducer::DeletePkU8),
    DeleteUniqueAddress(delete_unique_address_reducer::DeleteUniqueAddress),
    DeleteUniqueBool(delete_unique_bool_reducer::DeleteUniqueBool),
    DeleteUniqueI128(delete_unique_i_128_reducer::DeleteUniqueI128),
    DeleteUniqueI16(delete_unique_i_16_reducer::DeleteUniqueI16),
    DeleteUniqueI256(delete_unique_i_256_reducer::DeleteUniqueI256),
    DeleteUniqueI32(delete_unique_i_32_reducer::DeleteUniqueI32),
    DeleteUniqueI64(delete_unique_i_64_reducer::DeleteUniqueI64),
    DeleteUniqueI8(delete_unique_i_8_reducer::DeleteUniqueI8),
    DeleteUniqueIdentity(delete_unique_identity_reducer::DeleteUniqueIdentity),
    DeleteUniqueString(delete_unique_string_reducer::DeleteUniqueString),
    DeleteUniqueU128(delete_unique_u_128_reducer::DeleteUniqueU128),
    DeleteUniqueU16(delete_unique_u_16_reducer::DeleteUniqueU16),
    DeleteUniqueU256(delete_unique_u_256_reducer::DeleteUniqueU256),
    DeleteUniqueU32(delete_unique_u_32_reducer::DeleteUniqueU32),
    DeleteUniqueU64(delete_unique_u_64_reducer::DeleteUniqueU64),
    DeleteUniqueU8(delete_unique_u_8_reducer::DeleteUniqueU8),
    InsertCallerOneAddress(insert_caller_one_address_reducer::InsertCallerOneAddress),
    InsertCallerOneIdentity(insert_caller_one_identity_reducer::InsertCallerOneIdentity),
    InsertCallerPkAddress(insert_caller_pk_address_reducer::InsertCallerPkAddress),
    InsertCallerPkIdentity(insert_caller_pk_identity_reducer::InsertCallerPkIdentity),
    InsertCallerUniqueAddress(insert_caller_unique_address_reducer::InsertCallerUniqueAddress),
    InsertCallerUniqueIdentity(insert_caller_unique_identity_reducer::InsertCallerUniqueIdentity),
    InsertCallerVecAddress(insert_caller_vec_address_reducer::InsertCallerVecAddress),
    InsertCallerVecIdentity(insert_caller_vec_identity_reducer::InsertCallerVecIdentity),
    InsertLargeTable(insert_large_table_reducer::InsertLargeTable),
    InsertOneAddress(insert_one_address_reducer::InsertOneAddress),
    InsertOneBool(insert_one_bool_reducer::InsertOneBool),
    InsertOneByteStruct(insert_one_byte_struct_reducer::InsertOneByteStruct),
    InsertOneEnumWithPayload(insert_one_enum_with_payload_reducer::InsertOneEnumWithPayload),
    InsertOneEveryPrimitiveStruct(insert_one_every_primitive_struct_reducer::InsertOneEveryPrimitiveStruct),
    InsertOneEveryVecStruct(insert_one_every_vec_struct_reducer::InsertOneEveryVecStruct),
    InsertOneF32(insert_one_f_32_reducer::InsertOneF32),
    InsertOneF64(insert_one_f_64_reducer::InsertOneF64),
    InsertOneI128(insert_one_i_128_reducer::InsertOneI128),
    InsertOneI16(insert_one_i_16_reducer::InsertOneI16),
    InsertOneI256(insert_one_i_256_reducer::InsertOneI256),
    InsertOneI32(insert_one_i_32_reducer::InsertOneI32),
    InsertOneI64(insert_one_i_64_reducer::InsertOneI64),
    InsertOneI8(insert_one_i_8_reducer::InsertOneI8),
    InsertOneIdentity(insert_one_identity_reducer::InsertOneIdentity),
    InsertOneSimpleEnum(insert_one_simple_enum_reducer::InsertOneSimpleEnum),
    InsertOneString(insert_one_string_reducer::InsertOneString),
    InsertOneU128(insert_one_u_128_reducer::InsertOneU128),
    InsertOneU16(insert_one_u_16_reducer::InsertOneU16),
    InsertOneU256(insert_one_u_256_reducer::InsertOneU256),
    InsertOneU32(insert_one_u_32_reducer::InsertOneU32),
    InsertOneU64(insert_one_u_64_reducer::InsertOneU64),
    InsertOneU8(insert_one_u_8_reducer::InsertOneU8),
    InsertOneUnitStruct(insert_one_unit_struct_reducer::InsertOneUnitStruct),
    InsertOptionEveryPrimitiveStruct(insert_option_every_primitive_struct_reducer::InsertOptionEveryPrimitiveStruct),
    InsertOptionI32(insert_option_i_32_reducer::InsertOptionI32),
    InsertOptionIdentity(insert_option_identity_reducer::InsertOptionIdentity),
    InsertOptionSimpleEnum(insert_option_simple_enum_reducer::InsertOptionSimpleEnum),
    InsertOptionString(insert_option_string_reducer::InsertOptionString),
    InsertOptionVecOptionI32(insert_option_vec_option_i_32_reducer::InsertOptionVecOptionI32),
    InsertPkAddress(insert_pk_address_reducer::InsertPkAddress),
    InsertPkBool(insert_pk_bool_reducer::InsertPkBool),
    InsertPkI128(insert_pk_i_128_reducer::InsertPkI128),
    InsertPkI16(insert_pk_i_16_reducer::InsertPkI16),
    InsertPkI256(insert_pk_i_256_reducer::InsertPkI256),
    InsertPkI32(insert_pk_i_32_reducer::InsertPkI32),
    InsertPkI64(insert_pk_i_64_reducer::InsertPkI64),
    InsertPkI8(insert_pk_i_8_reducer::InsertPkI8),
    InsertPkIdentity(insert_pk_identity_reducer::InsertPkIdentity),
    InsertPkString(insert_pk_string_reducer::InsertPkString),
    InsertPkU128(insert_pk_u_128_reducer::InsertPkU128),
    InsertPkU16(insert_pk_u_16_reducer::InsertPkU16),
    InsertPkU256(insert_pk_u_256_reducer::InsertPkU256),
    InsertPkU32(insert_pk_u_32_reducer::InsertPkU32),
    InsertPkU64(insert_pk_u_64_reducer::InsertPkU64),
    InsertPkU8(insert_pk_u_8_reducer::InsertPkU8),
    InsertPrimitivesAsStrings(insert_primitives_as_strings_reducer::InsertPrimitivesAsStrings),
    InsertTableHoldsTable(insert_table_holds_table_reducer::InsertTableHoldsTable),
    InsertUniqueAddress(insert_unique_address_reducer::InsertUniqueAddress),
    InsertUniqueBool(insert_unique_bool_reducer::InsertUniqueBool),
    InsertUniqueI128(insert_unique_i_128_reducer::InsertUniqueI128),
    InsertUniqueI16(insert_unique_i_16_reducer::InsertUniqueI16),
    InsertUniqueI256(insert_unique_i_256_reducer::InsertUniqueI256),
    InsertUniqueI32(insert_unique_i_32_reducer::InsertUniqueI32),
    InsertUniqueI64(insert_unique_i_64_reducer::InsertUniqueI64),
    InsertUniqueI8(insert_unique_i_8_reducer::InsertUniqueI8),
    InsertUniqueIdentity(insert_unique_identity_reducer::InsertUniqueIdentity),
    InsertUniqueString(insert_unique_string_reducer::InsertUniqueString),
    InsertUniqueU128(insert_unique_u_128_reducer::InsertUniqueU128),
    InsertUniqueU16(insert_unique_u_16_reducer::InsertUniqueU16),
    InsertUniqueU256(insert_unique_u_256_reducer::InsertUniqueU256),
    InsertUniqueU32(insert_unique_u_32_reducer::InsertUniqueU32),
    InsertUniqueU64(insert_unique_u_64_reducer::InsertUniqueU64),
    InsertUniqueU8(insert_unique_u_8_reducer::InsertUniqueU8),
    InsertVecAddress(insert_vec_address_reducer::InsertVecAddress),
    InsertVecBool(insert_vec_bool_reducer::InsertVecBool),
    InsertVecByteStruct(insert_vec_byte_struct_reducer::InsertVecByteStruct),
    InsertVecEnumWithPayload(insert_vec_enum_with_payload_reducer::InsertVecEnumWithPayload),
    InsertVecEveryPrimitiveStruct(insert_vec_every_primitive_struct_reducer::InsertVecEveryPrimitiveStruct),
    InsertVecEveryVecStruct(insert_vec_every_vec_struct_reducer::InsertVecEveryVecStruct),
    InsertVecF32(insert_vec_f_32_reducer::InsertVecF32),
    InsertVecF64(insert_vec_f_64_reducer::InsertVecF64),
    InsertVecI128(insert_vec_i_128_reducer::InsertVecI128),
    InsertVecI16(insert_vec_i_16_reducer::InsertVecI16),
    InsertVecI256(insert_vec_i_256_reducer::InsertVecI256),
    InsertVecI32(insert_vec_i_32_reducer::InsertVecI32),
    InsertVecI64(insert_vec_i_64_reducer::InsertVecI64),
    InsertVecI8(insert_vec_i_8_reducer::InsertVecI8),
    InsertVecIdentity(insert_vec_identity_reducer::InsertVecIdentity),
    InsertVecSimpleEnum(insert_vec_simple_enum_reducer::InsertVecSimpleEnum),
    InsertVecString(insert_vec_string_reducer::InsertVecString),
    InsertVecU128(insert_vec_u_128_reducer::InsertVecU128),
    InsertVecU16(insert_vec_u_16_reducer::InsertVecU16),
    InsertVecU256(insert_vec_u_256_reducer::InsertVecU256),
    InsertVecU32(insert_vec_u_32_reducer::InsertVecU32),
    InsertVecU64(insert_vec_u_64_reducer::InsertVecU64),
    InsertVecU8(insert_vec_u_8_reducer::InsertVecU8),
    InsertVecUnitStruct(insert_vec_unit_struct_reducer::InsertVecUnitStruct),
    NoOpSucceeds(no_op_succeeds_reducer::NoOpSucceeds),
    UpdatePkAddress(update_pk_address_reducer::UpdatePkAddress),
    UpdatePkBool(update_pk_bool_reducer::UpdatePkBool),
    UpdatePkI128(update_pk_i_128_reducer::UpdatePkI128),
    UpdatePkI16(update_pk_i_16_reducer::UpdatePkI16),
    UpdatePkI256(update_pk_i_256_reducer::UpdatePkI256),
    UpdatePkI32(update_pk_i_32_reducer::UpdatePkI32),
    UpdatePkI64(update_pk_i_64_reducer::UpdatePkI64),
    UpdatePkI8(update_pk_i_8_reducer::UpdatePkI8),
    UpdatePkIdentity(update_pk_identity_reducer::UpdatePkIdentity),
    UpdatePkString(update_pk_string_reducer::UpdatePkString),
    UpdatePkU128(update_pk_u_128_reducer::UpdatePkU128),
    UpdatePkU16(update_pk_u_16_reducer::UpdatePkU16),
    UpdatePkU256(update_pk_u_256_reducer::UpdatePkU256),
    UpdatePkU32(update_pk_u_32_reducer::UpdatePkU32),
    UpdatePkU64(update_pk_u_64_reducer::UpdatePkU64),
    UpdatePkU8(update_pk_u_8_reducer::UpdatePkU8),
    UpdateUniqueAddress(update_unique_address_reducer::UpdateUniqueAddress),
    UpdateUniqueBool(update_unique_bool_reducer::UpdateUniqueBool),
    UpdateUniqueI128(update_unique_i_128_reducer::UpdateUniqueI128),
    UpdateUniqueI16(update_unique_i_16_reducer::UpdateUniqueI16),
    UpdateUniqueI256(update_unique_i_256_reducer::UpdateUniqueI256),
    UpdateUniqueI32(update_unique_i_32_reducer::UpdateUniqueI32),
    UpdateUniqueI64(update_unique_i_64_reducer::UpdateUniqueI64),
    UpdateUniqueI8(update_unique_i_8_reducer::UpdateUniqueI8),
    UpdateUniqueIdentity(update_unique_identity_reducer::UpdateUniqueIdentity),
    UpdateUniqueString(update_unique_string_reducer::UpdateUniqueString),
    UpdateUniqueU128(update_unique_u_128_reducer::UpdateUniqueU128),
    UpdateUniqueU16(update_unique_u_16_reducer::UpdateUniqueU16),
    UpdateUniqueU256(update_unique_u_256_reducer::UpdateUniqueU256),
    UpdateUniqueU32(update_unique_u_32_reducer::UpdateUniqueU32),
    UpdateUniqueU64(update_unique_u_64_reducer::UpdateUniqueU64),
    UpdateUniqueU8(update_unique_u_8_reducer::UpdateUniqueU8),
}

impl __sdk::spacetime_module::InModule for Reducer {
    type Module = RemoteModule;
}

impl __sdk::spacetime_module::Reducer for Reducer {
    fn reducer_name(&self) -> &'static str {
        match self {
            Reducer::DeletePkAddress(_) => "delete_pk_address",
            Reducer::DeletePkBool(_) => "delete_pk_bool",
            Reducer::DeletePkI128(_) => "delete_pk_i128",
            Reducer::DeletePkI16(_) => "delete_pk_i16",
            Reducer::DeletePkI256(_) => "delete_pk_i256",
            Reducer::DeletePkI32(_) => "delete_pk_i32",
            Reducer::DeletePkI64(_) => "delete_pk_i64",
            Reducer::DeletePkI8(_) => "delete_pk_i8",
            Reducer::DeletePkIdentity(_) => "delete_pk_identity",
            Reducer::DeletePkString(_) => "delete_pk_string",
            Reducer::DeletePkU128(_) => "delete_pk_u128",
            Reducer::DeletePkU16(_) => "delete_pk_u16",
            Reducer::DeletePkU256(_) => "delete_pk_u256",
            Reducer::DeletePkU32(_) => "delete_pk_u32",
            Reducer::DeletePkU64(_) => "delete_pk_u64",
            Reducer::DeletePkU8(_) => "delete_pk_u8",
            Reducer::DeleteUniqueAddress(_) => "delete_unique_address",
            Reducer::DeleteUniqueBool(_) => "delete_unique_bool",
            Reducer::DeleteUniqueI128(_) => "delete_unique_i128",
            Reducer::DeleteUniqueI16(_) => "delete_unique_i16",
            Reducer::DeleteUniqueI256(_) => "delete_unique_i256",
            Reducer::DeleteUniqueI32(_) => "delete_unique_i32",
            Reducer::DeleteUniqueI64(_) => "delete_unique_i64",
            Reducer::DeleteUniqueI8(_) => "delete_unique_i8",
            Reducer::DeleteUniqueIdentity(_) => "delete_unique_identity",
            Reducer::DeleteUniqueString(_) => "delete_unique_string",
            Reducer::DeleteUniqueU128(_) => "delete_unique_u128",
            Reducer::DeleteUniqueU16(_) => "delete_unique_u16",
            Reducer::DeleteUniqueU256(_) => "delete_unique_u256",
            Reducer::DeleteUniqueU32(_) => "delete_unique_u32",
            Reducer::DeleteUniqueU64(_) => "delete_unique_u64",
            Reducer::DeleteUniqueU8(_) => "delete_unique_u8",
            Reducer::InsertCallerOneAddress(_) => "insert_caller_one_address",
            Reducer::InsertCallerOneIdentity(_) => "insert_caller_one_identity",
            Reducer::InsertCallerPkAddress(_) => "insert_caller_pk_address",
            Reducer::InsertCallerPkIdentity(_) => "insert_caller_pk_identity",
            Reducer::InsertCallerUniqueAddress(_) => "insert_caller_unique_address",
            Reducer::InsertCallerUniqueIdentity(_) => "insert_caller_unique_identity",
            Reducer::InsertCallerVecAddress(_) => "insert_caller_vec_address",
            Reducer::InsertCallerVecIdentity(_) => "insert_caller_vec_identity",
            Reducer::InsertLargeTable(_) => "insert_large_table",
            Reducer::InsertOneAddress(_) => "insert_one_address",
            Reducer::InsertOneBool(_) => "insert_one_bool",
            Reducer::InsertOneByteStruct(_) => "insert_one_byte_struct",
            Reducer::InsertOneEnumWithPayload(_) => "insert_one_enum_with_payload",
            Reducer::InsertOneEveryPrimitiveStruct(_) => "insert_one_every_primitive_struct",
            Reducer::InsertOneEveryVecStruct(_) => "insert_one_every_vec_struct",
            Reducer::InsertOneF32(_) => "insert_one_f32",
            Reducer::InsertOneF64(_) => "insert_one_f64",
            Reducer::InsertOneI128(_) => "insert_one_i128",
            Reducer::InsertOneI16(_) => "insert_one_i16",
            Reducer::InsertOneI256(_) => "insert_one_i256",
            Reducer::InsertOneI32(_) => "insert_one_i32",
            Reducer::InsertOneI64(_) => "insert_one_i64",
            Reducer::InsertOneI8(_) => "insert_one_i8",
            Reducer::InsertOneIdentity(_) => "insert_one_identity",
            Reducer::InsertOneSimpleEnum(_) => "insert_one_simple_enum",
            Reducer::InsertOneString(_) => "insert_one_string",
            Reducer::InsertOneU128(_) => "insert_one_u128",
            Reducer::InsertOneU16(_) => "insert_one_u16",
            Reducer::InsertOneU256(_) => "insert_one_u256",
            Reducer::InsertOneU32(_) => "insert_one_u32",
            Reducer::InsertOneU64(_) => "insert_one_u64",
            Reducer::InsertOneU8(_) => "insert_one_u8",
            Reducer::InsertOneUnitStruct(_) => "insert_one_unit_struct",
            Reducer::InsertOptionEveryPrimitiveStruct(_) => "insert_option_every_primitive_struct",
            Reducer::InsertOptionI32(_) => "insert_option_i32",
            Reducer::InsertOptionIdentity(_) => "insert_option_identity",
            Reducer::InsertOptionSimpleEnum(_) => "insert_option_simple_enum",
            Reducer::InsertOptionString(_) => "insert_option_string",
            Reducer::InsertOptionVecOptionI32(_) => "insert_option_vec_option_i32",
            Reducer::InsertPkAddress(_) => "insert_pk_address",
            Reducer::InsertPkBool(_) => "insert_pk_bool",
            Reducer::InsertPkI128(_) => "insert_pk_i128",
            Reducer::InsertPkI16(_) => "insert_pk_i16",
            Reducer::InsertPkI256(_) => "insert_pk_i256",
            Reducer::InsertPkI32(_) => "insert_pk_i32",
            Reducer::InsertPkI64(_) => "insert_pk_i64",
            Reducer::InsertPkI8(_) => "insert_pk_i8",
            Reducer::InsertPkIdentity(_) => "insert_pk_identity",
            Reducer::InsertPkString(_) => "insert_pk_string",
            Reducer::InsertPkU128(_) => "insert_pk_u128",
            Reducer::InsertPkU16(_) => "insert_pk_u16",
            Reducer::InsertPkU256(_) => "insert_pk_u256",
            Reducer::InsertPkU32(_) => "insert_pk_u32",
            Reducer::InsertPkU64(_) => "insert_pk_u64",
            Reducer::InsertPkU8(_) => "insert_pk_u8",
            Reducer::InsertPrimitivesAsStrings(_) => "insert_primitives_as_strings",
            Reducer::InsertTableHoldsTable(_) => "insert_table_holds_table",
            Reducer::InsertUniqueAddress(_) => "insert_unique_address",
            Reducer::InsertUniqueBool(_) => "insert_unique_bool",
            Reducer::InsertUniqueI128(_) => "insert_unique_i128",
            Reducer::InsertUniqueI16(_) => "insert_unique_i16",
            Reducer::InsertUniqueI256(_) => "insert_unique_i256",
            Reducer::InsertUniqueI32(_) => "insert_unique_i32",
            Reducer::InsertUniqueI64(_) => "insert_unique_i64",
            Reducer::InsertUniqueI8(_) => "insert_unique_i8",
            Reducer::InsertUniqueIdentity(_) => "insert_unique_identity",
            Reducer::InsertUniqueString(_) => "insert_unique_string",
            Reducer::InsertUniqueU128(_) => "insert_unique_u128",
            Reducer::InsertUniqueU16(_) => "insert_unique_u16",
            Reducer::InsertUniqueU256(_) => "insert_unique_u256",
            Reducer::InsertUniqueU32(_) => "insert_unique_u32",
            Reducer::InsertUniqueU64(_) => "insert_unique_u64",
            Reducer::InsertUniqueU8(_) => "insert_unique_u8",
            Reducer::InsertVecAddress(_) => "insert_vec_address",
            Reducer::InsertVecBool(_) => "insert_vec_bool",
            Reducer::InsertVecByteStruct(_) => "insert_vec_byte_struct",
            Reducer::InsertVecEnumWithPayload(_) => "insert_vec_enum_with_payload",
            Reducer::InsertVecEveryPrimitiveStruct(_) => "insert_vec_every_primitive_struct",
            Reducer::InsertVecEveryVecStruct(_) => "insert_vec_every_vec_struct",
            Reducer::InsertVecF32(_) => "insert_vec_f32",
            Reducer::InsertVecF64(_) => "insert_vec_f64",
            Reducer::InsertVecI128(_) => "insert_vec_i128",
            Reducer::InsertVecI16(_) => "insert_vec_i16",
            Reducer::InsertVecI256(_) => "insert_vec_i256",
            Reducer::InsertVecI32(_) => "insert_vec_i32",
            Reducer::InsertVecI64(_) => "insert_vec_i64",
            Reducer::InsertVecI8(_) => "insert_vec_i8",
            Reducer::InsertVecIdentity(_) => "insert_vec_identity",
            Reducer::InsertVecSimpleEnum(_) => "insert_vec_simple_enum",
            Reducer::InsertVecString(_) => "insert_vec_string",
            Reducer::InsertVecU128(_) => "insert_vec_u128",
            Reducer::InsertVecU16(_) => "insert_vec_u16",
            Reducer::InsertVecU256(_) => "insert_vec_u256",
            Reducer::InsertVecU32(_) => "insert_vec_u32",
            Reducer::InsertVecU64(_) => "insert_vec_u64",
            Reducer::InsertVecU8(_) => "insert_vec_u8",
            Reducer::InsertVecUnitStruct(_) => "insert_vec_unit_struct",
            Reducer::NoOpSucceeds(_) => "no_op_succeeds",
            Reducer::UpdatePkAddress(_) => "update_pk_address",
            Reducer::UpdatePkBool(_) => "update_pk_bool",
            Reducer::UpdatePkI128(_) => "update_pk_i128",
            Reducer::UpdatePkI16(_) => "update_pk_i16",
            Reducer::UpdatePkI256(_) => "update_pk_i256",
            Reducer::UpdatePkI32(_) => "update_pk_i32",
            Reducer::UpdatePkI64(_) => "update_pk_i64",
            Reducer::UpdatePkI8(_) => "update_pk_i8",
            Reducer::UpdatePkIdentity(_) => "update_pk_identity",
            Reducer::UpdatePkString(_) => "update_pk_string",
            Reducer::UpdatePkU128(_) => "update_pk_u128",
            Reducer::UpdatePkU16(_) => "update_pk_u16",
            Reducer::UpdatePkU256(_) => "update_pk_u256",
            Reducer::UpdatePkU32(_) => "update_pk_u32",
            Reducer::UpdatePkU64(_) => "update_pk_u64",
            Reducer::UpdatePkU8(_) => "update_pk_u8",
            Reducer::UpdateUniqueAddress(_) => "update_unique_address",
            Reducer::UpdateUniqueBool(_) => "update_unique_bool",
            Reducer::UpdateUniqueI128(_) => "update_unique_i128",
            Reducer::UpdateUniqueI16(_) => "update_unique_i16",
            Reducer::UpdateUniqueI256(_) => "update_unique_i256",
            Reducer::UpdateUniqueI32(_) => "update_unique_i32",
            Reducer::UpdateUniqueI64(_) => "update_unique_i64",
            Reducer::UpdateUniqueI8(_) => "update_unique_i8",
            Reducer::UpdateUniqueIdentity(_) => "update_unique_identity",
            Reducer::UpdateUniqueString(_) => "update_unique_string",
            Reducer::UpdateUniqueU128(_) => "update_unique_u128",
            Reducer::UpdateUniqueU16(_) => "update_unique_u16",
            Reducer::UpdateUniqueU256(_) => "update_unique_u256",
            Reducer::UpdateUniqueU32(_) => "update_unique_u32",
            Reducer::UpdateUniqueU64(_) => "update_unique_u64",
            Reducer::UpdateUniqueU8(_) => "update_unique_u8",
        }
    }
    fn reducer_args(&self) -> &dyn std::any::Any {
        match self {
            Reducer::DeletePkAddress(args) => args,
            Reducer::DeletePkBool(args) => args,
            Reducer::DeletePkI128(args) => args,
            Reducer::DeletePkI16(args) => args,
            Reducer::DeletePkI256(args) => args,
            Reducer::DeletePkI32(args) => args,
            Reducer::DeletePkI64(args) => args,
            Reducer::DeletePkI8(args) => args,
            Reducer::DeletePkIdentity(args) => args,
            Reducer::DeletePkString(args) => args,
            Reducer::DeletePkU128(args) => args,
            Reducer::DeletePkU16(args) => args,
            Reducer::DeletePkU256(args) => args,
            Reducer::DeletePkU32(args) => args,
            Reducer::DeletePkU64(args) => args,
            Reducer::DeletePkU8(args) => args,
            Reducer::DeleteUniqueAddress(args) => args,
            Reducer::DeleteUniqueBool(args) => args,
            Reducer::DeleteUniqueI128(args) => args,
            Reducer::DeleteUniqueI16(args) => args,
            Reducer::DeleteUniqueI256(args) => args,
            Reducer::DeleteUniqueI32(args) => args,
            Reducer::DeleteUniqueI64(args) => args,
            Reducer::DeleteUniqueI8(args) => args,
            Reducer::DeleteUniqueIdentity(args) => args,
            Reducer::DeleteUniqueString(args) => args,
            Reducer::DeleteUniqueU128(args) => args,
            Reducer::DeleteUniqueU16(args) => args,
            Reducer::DeleteUniqueU256(args) => args,
            Reducer::DeleteUniqueU32(args) => args,
            Reducer::DeleteUniqueU64(args) => args,
            Reducer::DeleteUniqueU8(args) => args,
            Reducer::InsertCallerOneAddress(args) => args,
            Reducer::InsertCallerOneIdentity(args) => args,
            Reducer::InsertCallerPkAddress(args) => args,
            Reducer::InsertCallerPkIdentity(args) => args,
            Reducer::InsertCallerUniqueAddress(args) => args,
            Reducer::InsertCallerUniqueIdentity(args) => args,
            Reducer::InsertCallerVecAddress(args) => args,
            Reducer::InsertCallerVecIdentity(args) => args,
            Reducer::InsertLargeTable(args) => args,
            Reducer::InsertOneAddress(args) => args,
            Reducer::InsertOneBool(args) => args,
            Reducer::InsertOneByteStruct(args) => args,
            Reducer::InsertOneEnumWithPayload(args) => args,
            Reducer::InsertOneEveryPrimitiveStruct(args) => args,
            Reducer::InsertOneEveryVecStruct(args) => args,
            Reducer::InsertOneF32(args) => args,
            Reducer::InsertOneF64(args) => args,
            Reducer::InsertOneI128(args) => args,
            Reducer::InsertOneI16(args) => args,
            Reducer::InsertOneI256(args) => args,
            Reducer::InsertOneI32(args) => args,
            Reducer::InsertOneI64(args) => args,
            Reducer::InsertOneI8(args) => args,
            Reducer::InsertOneIdentity(args) => args,
            Reducer::InsertOneSimpleEnum(args) => args,
            Reducer::InsertOneString(args) => args,
            Reducer::InsertOneU128(args) => args,
            Reducer::InsertOneU16(args) => args,
            Reducer::InsertOneU256(args) => args,
            Reducer::InsertOneU32(args) => args,
            Reducer::InsertOneU64(args) => args,
            Reducer::InsertOneU8(args) => args,
            Reducer::InsertOneUnitStruct(args) => args,
            Reducer::InsertOptionEveryPrimitiveStruct(args) => args,
            Reducer::InsertOptionI32(args) => args,
            Reducer::InsertOptionIdentity(args) => args,
            Reducer::InsertOptionSimpleEnum(args) => args,
            Reducer::InsertOptionString(args) => args,
            Reducer::InsertOptionVecOptionI32(args) => args,
            Reducer::InsertPkAddress(args) => args,
            Reducer::InsertPkBool(args) => args,
            Reducer::InsertPkI128(args) => args,
            Reducer::InsertPkI16(args) => args,
            Reducer::InsertPkI256(args) => args,
            Reducer::InsertPkI32(args) => args,
            Reducer::InsertPkI64(args) => args,
            Reducer::InsertPkI8(args) => args,
            Reducer::InsertPkIdentity(args) => args,
            Reducer::InsertPkString(args) => args,
            Reducer::InsertPkU128(args) => args,
            Reducer::InsertPkU16(args) => args,
            Reducer::InsertPkU256(args) => args,
            Reducer::InsertPkU32(args) => args,
            Reducer::InsertPkU64(args) => args,
            Reducer::InsertPkU8(args) => args,
            Reducer::InsertPrimitivesAsStrings(args) => args,
            Reducer::InsertTableHoldsTable(args) => args,
            Reducer::InsertUniqueAddress(args) => args,
            Reducer::InsertUniqueBool(args) => args,
            Reducer::InsertUniqueI128(args) => args,
            Reducer::InsertUniqueI16(args) => args,
            Reducer::InsertUniqueI256(args) => args,
            Reducer::InsertUniqueI32(args) => args,
            Reducer::InsertUniqueI64(args) => args,
            Reducer::InsertUniqueI8(args) => args,
            Reducer::InsertUniqueIdentity(args) => args,
            Reducer::InsertUniqueString(args) => args,
            Reducer::InsertUniqueU128(args) => args,
            Reducer::InsertUniqueU16(args) => args,
            Reducer::InsertUniqueU256(args) => args,
            Reducer::InsertUniqueU32(args) => args,
            Reducer::InsertUniqueU64(args) => args,
            Reducer::InsertUniqueU8(args) => args,
            Reducer::InsertVecAddress(args) => args,
            Reducer::InsertVecBool(args) => args,
            Reducer::InsertVecByteStruct(args) => args,
            Reducer::InsertVecEnumWithPayload(args) => args,
            Reducer::InsertVecEveryPrimitiveStruct(args) => args,
            Reducer::InsertVecEveryVecStruct(args) => args,
            Reducer::InsertVecF32(args) => args,
            Reducer::InsertVecF64(args) => args,
            Reducer::InsertVecI128(args) => args,
            Reducer::InsertVecI16(args) => args,
            Reducer::InsertVecI256(args) => args,
            Reducer::InsertVecI32(args) => args,
            Reducer::InsertVecI64(args) => args,
            Reducer::InsertVecI8(args) => args,
            Reducer::InsertVecIdentity(args) => args,
            Reducer::InsertVecSimpleEnum(args) => args,
            Reducer::InsertVecString(args) => args,
            Reducer::InsertVecU128(args) => args,
            Reducer::InsertVecU16(args) => args,
            Reducer::InsertVecU256(args) => args,
            Reducer::InsertVecU32(args) => args,
            Reducer::InsertVecU64(args) => args,
            Reducer::InsertVecU8(args) => args,
            Reducer::InsertVecUnitStruct(args) => args,
            Reducer::NoOpSucceeds(args) => args,
            Reducer::UpdatePkAddress(args) => args,
            Reducer::UpdatePkBool(args) => args,
            Reducer::UpdatePkI128(args) => args,
            Reducer::UpdatePkI16(args) => args,
            Reducer::UpdatePkI256(args) => args,
            Reducer::UpdatePkI32(args) => args,
            Reducer::UpdatePkI64(args) => args,
            Reducer::UpdatePkI8(args) => args,
            Reducer::UpdatePkIdentity(args) => args,
            Reducer::UpdatePkString(args) => args,
            Reducer::UpdatePkU128(args) => args,
            Reducer::UpdatePkU16(args) => args,
            Reducer::UpdatePkU256(args) => args,
            Reducer::UpdatePkU32(args) => args,
            Reducer::UpdatePkU64(args) => args,
            Reducer::UpdatePkU8(args) => args,
            Reducer::UpdateUniqueAddress(args) => args,
            Reducer::UpdateUniqueBool(args) => args,
            Reducer::UpdateUniqueI128(args) => args,
            Reducer::UpdateUniqueI16(args) => args,
            Reducer::UpdateUniqueI256(args) => args,
            Reducer::UpdateUniqueI32(args) => args,
            Reducer::UpdateUniqueI64(args) => args,
            Reducer::UpdateUniqueI8(args) => args,
            Reducer::UpdateUniqueIdentity(args) => args,
            Reducer::UpdateUniqueString(args) => args,
            Reducer::UpdateUniqueU128(args) => args,
            Reducer::UpdateUniqueU16(args) => args,
            Reducer::UpdateUniqueU256(args) => args,
            Reducer::UpdateUniqueU32(args) => args,
            Reducer::UpdateUniqueU64(args) => args,
            Reducer::UpdateUniqueU8(args) => args,
        }
    }
}
impl TryFrom<__ws::ReducerCallInfo> for Reducer {
    type Error = __anyhow::Error;
    fn try_from(value: __ws::ReducerCallInfo) -> __anyhow::Result<Self> {
        match &value.reducer_name[..] {
            "delete_pk_address" => Ok(Reducer::DeletePkAddress(__sdk::spacetime_module::parse_reducer_args(
                "delete_pk_address",
                &value.args,
            )?)),
            "delete_pk_bool" => Ok(Reducer::DeletePkBool(__sdk::spacetime_module::parse_reducer_args(
                "delete_pk_bool",
                &value.args,
            )?)),
            "delete_pk_i128" => Ok(Reducer::DeletePkI128(__sdk::spacetime_module::parse_reducer_args(
                "delete_pk_i128",
                &value.args,
            )?)),
            "delete_pk_i16" => Ok(Reducer::DeletePkI16(__sdk::spacetime_module::parse_reducer_args(
                "delete_pk_i16",
                &value.args,
            )?)),
            "delete_pk_i256" => Ok(Reducer::DeletePkI256(__sdk::spacetime_module::parse_reducer_args(
                "delete_pk_i256",
                &value.args,
            )?)),
            "delete_pk_i32" => Ok(Reducer::DeletePkI32(__sdk::spacetime_module::parse_reducer_args(
                "delete_pk_i32",
                &value.args,
            )?)),
            "delete_pk_i64" => Ok(Reducer::DeletePkI64(__sdk::spacetime_module::parse_reducer_args(
                "delete_pk_i64",
                &value.args,
            )?)),
            "delete_pk_i8" => Ok(Reducer::DeletePkI8(__sdk::spacetime_module::parse_reducer_args(
                "delete_pk_i8",
                &value.args,
            )?)),
            "delete_pk_identity" => Ok(Reducer::DeletePkIdentity(__sdk::spacetime_module::parse_reducer_args(
                "delete_pk_identity",
                &value.args,
            )?)),
            "delete_pk_string" => Ok(Reducer::DeletePkString(__sdk::spacetime_module::parse_reducer_args(
                "delete_pk_string",
                &value.args,
            )?)),
            "delete_pk_u128" => Ok(Reducer::DeletePkU128(__sdk::spacetime_module::parse_reducer_args(
                "delete_pk_u128",
                &value.args,
            )?)),
            "delete_pk_u16" => Ok(Reducer::DeletePkU16(__sdk::spacetime_module::parse_reducer_args(
                "delete_pk_u16",
                &value.args,
            )?)),
            "delete_pk_u256" => Ok(Reducer::DeletePkU256(__sdk::spacetime_module::parse_reducer_args(
                "delete_pk_u256",
                &value.args,
            )?)),
            "delete_pk_u32" => Ok(Reducer::DeletePkU32(__sdk::spacetime_module::parse_reducer_args(
                "delete_pk_u32",
                &value.args,
            )?)),
            "delete_pk_u64" => Ok(Reducer::DeletePkU64(__sdk::spacetime_module::parse_reducer_args(
                "delete_pk_u64",
                &value.args,
            )?)),
            "delete_pk_u8" => Ok(Reducer::DeletePkU8(__sdk::spacetime_module::parse_reducer_args(
                "delete_pk_u8",
                &value.args,
            )?)),
            "delete_unique_address" => Ok(Reducer::DeleteUniqueAddress(
                __sdk::spacetime_module::parse_reducer_args("delete_unique_address", &value.args)?,
            )),
            "delete_unique_bool" => Ok(Reducer::DeleteUniqueBool(__sdk::spacetime_module::parse_reducer_args(
                "delete_unique_bool",
                &value.args,
            )?)),
            "delete_unique_i128" => Ok(Reducer::DeleteUniqueI128(__sdk::spacetime_module::parse_reducer_args(
                "delete_unique_i128",
                &value.args,
            )?)),
            "delete_unique_i16" => Ok(Reducer::DeleteUniqueI16(__sdk::spacetime_module::parse_reducer_args(
                "delete_unique_i16",
                &value.args,
            )?)),
            "delete_unique_i256" => Ok(Reducer::DeleteUniqueI256(__sdk::spacetime_module::parse_reducer_args(
                "delete_unique_i256",
                &value.args,
            )?)),
            "delete_unique_i32" => Ok(Reducer::DeleteUniqueI32(__sdk::spacetime_module::parse_reducer_args(
                "delete_unique_i32",
                &value.args,
            )?)),
            "delete_unique_i64" => Ok(Reducer::DeleteUniqueI64(__sdk::spacetime_module::parse_reducer_args(
                "delete_unique_i64",
                &value.args,
            )?)),
            "delete_unique_i8" => Ok(Reducer::DeleteUniqueI8(__sdk::spacetime_module::parse_reducer_args(
                "delete_unique_i8",
                &value.args,
            )?)),
            "delete_unique_identity" => Ok(Reducer::DeleteUniqueIdentity(
                __sdk::spacetime_module::parse_reducer_args("delete_unique_identity", &value.args)?,
            )),
            "delete_unique_string" => Ok(Reducer::DeleteUniqueString(
                __sdk::spacetime_module::parse_reducer_args("delete_unique_string", &value.args)?,
            )),
            "delete_unique_u128" => Ok(Reducer::DeleteUniqueU128(__sdk::spacetime_module::parse_reducer_args(
                "delete_unique_u128",
                &value.args,
            )?)),
            "delete_unique_u16" => Ok(Reducer::DeleteUniqueU16(__sdk::spacetime_module::parse_reducer_args(
                "delete_unique_u16",
                &value.args,
            )?)),
            "delete_unique_u256" => Ok(Reducer::DeleteUniqueU256(__sdk::spacetime_module::parse_reducer_args(
                "delete_unique_u256",
                &value.args,
            )?)),
            "delete_unique_u32" => Ok(Reducer::DeleteUniqueU32(__sdk::spacetime_module::parse_reducer_args(
                "delete_unique_u32",
                &value.args,
            )?)),
            "delete_unique_u64" => Ok(Reducer::DeleteUniqueU64(__sdk::spacetime_module::parse_reducer_args(
                "delete_unique_u64",
                &value.args,
            )?)),
            "delete_unique_u8" => Ok(Reducer::DeleteUniqueU8(__sdk::spacetime_module::parse_reducer_args(
                "delete_unique_u8",
                &value.args,
            )?)),
            "insert_caller_one_address" => Ok(Reducer::InsertCallerOneAddress(
                __sdk::spacetime_module::parse_reducer_args("insert_caller_one_address", &value.args)?,
            )),
            "insert_caller_one_identity" => Ok(Reducer::InsertCallerOneIdentity(
                __sdk::spacetime_module::parse_reducer_args("insert_caller_one_identity", &value.args)?,
            )),
            "insert_caller_pk_address" => Ok(Reducer::InsertCallerPkAddress(
                __sdk::spacetime_module::parse_reducer_args("insert_caller_pk_address", &value.args)?,
            )),
            "insert_caller_pk_identity" => Ok(Reducer::InsertCallerPkIdentity(
                __sdk::spacetime_module::parse_reducer_args("insert_caller_pk_identity", &value.args)?,
            )),
            "insert_caller_unique_address" => Ok(Reducer::InsertCallerUniqueAddress(
                __sdk::spacetime_module::parse_reducer_args("insert_caller_unique_address", &value.args)?,
            )),
            "insert_caller_unique_identity" => Ok(Reducer::InsertCallerUniqueIdentity(
                __sdk::spacetime_module::parse_reducer_args("insert_caller_unique_identity", &value.args)?,
            )),
            "insert_caller_vec_address" => Ok(Reducer::InsertCallerVecAddress(
                __sdk::spacetime_module::parse_reducer_args("insert_caller_vec_address", &value.args)?,
            )),
            "insert_caller_vec_identity" => Ok(Reducer::InsertCallerVecIdentity(
                __sdk::spacetime_module::parse_reducer_args("insert_caller_vec_identity", &value.args)?,
            )),
            "insert_large_table" => Ok(Reducer::InsertLargeTable(__sdk::spacetime_module::parse_reducer_args(
                "insert_large_table",
                &value.args,
            )?)),
            "insert_one_address" => Ok(Reducer::InsertOneAddress(__sdk::spacetime_module::parse_reducer_args(
                "insert_one_address",
                &value.args,
            )?)),
            "insert_one_bool" => Ok(Reducer::InsertOneBool(__sdk::spacetime_module::parse_reducer_args(
                "insert_one_bool",
                &value.args,
            )?)),
            "insert_one_byte_struct" => Ok(Reducer::InsertOneByteStruct(
                __sdk::spacetime_module::parse_reducer_args("insert_one_byte_struct", &value.args)?,
            )),
            "insert_one_enum_with_payload" => Ok(Reducer::InsertOneEnumWithPayload(
                __sdk::spacetime_module::parse_reducer_args("insert_one_enum_with_payload", &value.args)?,
            )),
            "insert_one_every_primitive_struct" => Ok(Reducer::InsertOneEveryPrimitiveStruct(
                __sdk::spacetime_module::parse_reducer_args("insert_one_every_primitive_struct", &value.args)?,
            )),
            "insert_one_every_vec_struct" => Ok(Reducer::InsertOneEveryVecStruct(
                __sdk::spacetime_module::parse_reducer_args("insert_one_every_vec_struct", &value.args)?,
            )),
            "insert_one_f32" => Ok(Reducer::InsertOneF32(__sdk::spacetime_module::parse_reducer_args(
                "insert_one_f32",
                &value.args,
            )?)),
            "insert_one_f64" => Ok(Reducer::InsertOneF64(__sdk::spacetime_module::parse_reducer_args(
                "insert_one_f64",
                &value.args,
            )?)),
            "insert_one_i128" => Ok(Reducer::InsertOneI128(__sdk::spacetime_module::parse_reducer_args(
                "insert_one_i128",
                &value.args,
            )?)),
            "insert_one_i16" => Ok(Reducer::InsertOneI16(__sdk::spacetime_module::parse_reducer_args(
                "insert_one_i16",
                &value.args,
            )?)),
            "insert_one_i256" => Ok(Reducer::InsertOneI256(__sdk::spacetime_module::parse_reducer_args(
                "insert_one_i256",
                &value.args,
            )?)),
            "insert_one_i32" => Ok(Reducer::InsertOneI32(__sdk::spacetime_module::parse_reducer_args(
                "insert_one_i32",
                &value.args,
            )?)),
            "insert_one_i64" => Ok(Reducer::InsertOneI64(__sdk::spacetime_module::parse_reducer_args(
                "insert_one_i64",
                &value.args,
            )?)),
            "insert_one_i8" => Ok(Reducer::InsertOneI8(__sdk::spacetime_module::parse_reducer_args(
                "insert_one_i8",
                &value.args,
            )?)),
            "insert_one_identity" => Ok(Reducer::InsertOneIdentity(__sdk::spacetime_module::parse_reducer_args(
                "insert_one_identity",
                &value.args,
            )?)),
            "insert_one_simple_enum" => Ok(Reducer::InsertOneSimpleEnum(
                __sdk::spacetime_module::parse_reducer_args("insert_one_simple_enum", &value.args)?,
            )),
            "insert_one_string" => Ok(Reducer::InsertOneString(__sdk::spacetime_module::parse_reducer_args(
                "insert_one_string",
                &value.args,
            )?)),
            "insert_one_u128" => Ok(Reducer::InsertOneU128(__sdk::spacetime_module::parse_reducer_args(
                "insert_one_u128",
                &value.args,
            )?)),
            "insert_one_u16" => Ok(Reducer::InsertOneU16(__sdk::spacetime_module::parse_reducer_args(
                "insert_one_u16",
                &value.args,
            )?)),
            "insert_one_u256" => Ok(Reducer::InsertOneU256(__sdk::spacetime_module::parse_reducer_args(
                "insert_one_u256",
                &value.args,
            )?)),
            "insert_one_u32" => Ok(Reducer::InsertOneU32(__sdk::spacetime_module::parse_reducer_args(
                "insert_one_u32",
                &value.args,
            )?)),
            "insert_one_u64" => Ok(Reducer::InsertOneU64(__sdk::spacetime_module::parse_reducer_args(
                "insert_one_u64",
                &value.args,
            )?)),
            "insert_one_u8" => Ok(Reducer::InsertOneU8(__sdk::spacetime_module::parse_reducer_args(
                "insert_one_u8",
                &value.args,
            )?)),
            "insert_one_unit_struct" => Ok(Reducer::InsertOneUnitStruct(
                __sdk::spacetime_module::parse_reducer_args("insert_one_unit_struct", &value.args)?,
            )),
            "insert_option_every_primitive_struct" => Ok(Reducer::InsertOptionEveryPrimitiveStruct(
                __sdk::spacetime_module::parse_reducer_args("insert_option_every_primitive_struct", &value.args)?,
            )),
            "insert_option_i32" => Ok(Reducer::InsertOptionI32(__sdk::spacetime_module::parse_reducer_args(
                "insert_option_i32",
                &value.args,
            )?)),
            "insert_option_identity" => Ok(Reducer::InsertOptionIdentity(
                __sdk::spacetime_module::parse_reducer_args("insert_option_identity", &value.args)?,
            )),
            "insert_option_simple_enum" => Ok(Reducer::InsertOptionSimpleEnum(
                __sdk::spacetime_module::parse_reducer_args("insert_option_simple_enum", &value.args)?,
            )),
            "insert_option_string" => Ok(Reducer::InsertOptionString(
                __sdk::spacetime_module::parse_reducer_args("insert_option_string", &value.args)?,
            )),
            "insert_option_vec_option_i32" => Ok(Reducer::InsertOptionVecOptionI32(
                __sdk::spacetime_module::parse_reducer_args("insert_option_vec_option_i32", &value.args)?,
            )),
            "insert_pk_address" => Ok(Reducer::InsertPkAddress(__sdk::spacetime_module::parse_reducer_args(
                "insert_pk_address",
                &value.args,
            )?)),
            "insert_pk_bool" => Ok(Reducer::InsertPkBool(__sdk::spacetime_module::parse_reducer_args(
                "insert_pk_bool",
                &value.args,
            )?)),
            "insert_pk_i128" => Ok(Reducer::InsertPkI128(__sdk::spacetime_module::parse_reducer_args(
                "insert_pk_i128",
                &value.args,
            )?)),
            "insert_pk_i16" => Ok(Reducer::InsertPkI16(__sdk::spacetime_module::parse_reducer_args(
                "insert_pk_i16",
                &value.args,
            )?)),
            "insert_pk_i256" => Ok(Reducer::InsertPkI256(__sdk::spacetime_module::parse_reducer_args(
                "insert_pk_i256",
                &value.args,
            )?)),
            "insert_pk_i32" => Ok(Reducer::InsertPkI32(__sdk::spacetime_module::parse_reducer_args(
                "insert_pk_i32",
                &value.args,
            )?)),
            "insert_pk_i64" => Ok(Reducer::InsertPkI64(__sdk::spacetime_module::parse_reducer_args(
                "insert_pk_i64",
                &value.args,
            )?)),
            "insert_pk_i8" => Ok(Reducer::InsertPkI8(__sdk::spacetime_module::parse_reducer_args(
                "insert_pk_i8",
                &value.args,
            )?)),
            "insert_pk_identity" => Ok(Reducer::InsertPkIdentity(__sdk::spacetime_module::parse_reducer_args(
                "insert_pk_identity",
                &value.args,
            )?)),
            "insert_pk_string" => Ok(Reducer::InsertPkString(__sdk::spacetime_module::parse_reducer_args(
                "insert_pk_string",
                &value.args,
            )?)),
            "insert_pk_u128" => Ok(Reducer::InsertPkU128(__sdk::spacetime_module::parse_reducer_args(
                "insert_pk_u128",
                &value.args,
            )?)),
            "insert_pk_u16" => Ok(Reducer::InsertPkU16(__sdk::spacetime_module::parse_reducer_args(
                "insert_pk_u16",
                &value.args,
            )?)),
            "insert_pk_u256" => Ok(Reducer::InsertPkU256(__sdk::spacetime_module::parse_reducer_args(
                "insert_pk_u256",
                &value.args,
            )?)),
            "insert_pk_u32" => Ok(Reducer::InsertPkU32(__sdk::spacetime_module::parse_reducer_args(
                "insert_pk_u32",
                &value.args,
            )?)),
            "insert_pk_u64" => Ok(Reducer::InsertPkU64(__sdk::spacetime_module::parse_reducer_args(
                "insert_pk_u64",
                &value.args,
            )?)),
            "insert_pk_u8" => Ok(Reducer::InsertPkU8(__sdk::spacetime_module::parse_reducer_args(
                "insert_pk_u8",
                &value.args,
            )?)),
            "insert_primitives_as_strings" => Ok(Reducer::InsertPrimitivesAsStrings(
                __sdk::spacetime_module::parse_reducer_args("insert_primitives_as_strings", &value.args)?,
            )),
            "insert_table_holds_table" => Ok(Reducer::InsertTableHoldsTable(
                __sdk::spacetime_module::parse_reducer_args("insert_table_holds_table", &value.args)?,
            )),
            "insert_unique_address" => Ok(Reducer::InsertUniqueAddress(
                __sdk::spacetime_module::parse_reducer_args("insert_unique_address", &value.args)?,
            )),
            "insert_unique_bool" => Ok(Reducer::InsertUniqueBool(__sdk::spacetime_module::parse_reducer_args(
                "insert_unique_bool",
                &value.args,
            )?)),
            "insert_unique_i128" => Ok(Reducer::InsertUniqueI128(__sdk::spacetime_module::parse_reducer_args(
                "insert_unique_i128",
                &value.args,
            )?)),
            "insert_unique_i16" => Ok(Reducer::InsertUniqueI16(__sdk::spacetime_module::parse_reducer_args(
                "insert_unique_i16",
                &value.args,
            )?)),
            "insert_unique_i256" => Ok(Reducer::InsertUniqueI256(__sdk::spacetime_module::parse_reducer_args(
                "insert_unique_i256",
                &value.args,
            )?)),
            "insert_unique_i32" => Ok(Reducer::InsertUniqueI32(__sdk::spacetime_module::parse_reducer_args(
                "insert_unique_i32",
                &value.args,
            )?)),
            "insert_unique_i64" => Ok(Reducer::InsertUniqueI64(__sdk::spacetime_module::parse_reducer_args(
                "insert_unique_i64",
                &value.args,
            )?)),
            "insert_unique_i8" => Ok(Reducer::InsertUniqueI8(__sdk::spacetime_module::parse_reducer_args(
                "insert_unique_i8",
                &value.args,
            )?)),
            "insert_unique_identity" => Ok(Reducer::InsertUniqueIdentity(
                __sdk::spacetime_module::parse_reducer_args("insert_unique_identity", &value.args)?,
            )),
            "insert_unique_string" => Ok(Reducer::InsertUniqueString(
                __sdk::spacetime_module::parse_reducer_args("insert_unique_string", &value.args)?,
            )),
            "insert_unique_u128" => Ok(Reducer::InsertUniqueU128(__sdk::spacetime_module::parse_reducer_args(
                "insert_unique_u128",
                &value.args,
            )?)),
            "insert_unique_u16" => Ok(Reducer::InsertUniqueU16(__sdk::spacetime_module::parse_reducer_args(
                "insert_unique_u16",
                &value.args,
            )?)),
            "insert_unique_u256" => Ok(Reducer::InsertUniqueU256(__sdk::spacetime_module::parse_reducer_args(
                "insert_unique_u256",
                &value.args,
            )?)),
            "insert_unique_u32" => Ok(Reducer::InsertUniqueU32(__sdk::spacetime_module::parse_reducer_args(
                "insert_unique_u32",
                &value.args,
            )?)),
            "insert_unique_u64" => Ok(Reducer::InsertUniqueU64(__sdk::spacetime_module::parse_reducer_args(
                "insert_unique_u64",
                &value.args,
            )?)),
            "insert_unique_u8" => Ok(Reducer::InsertUniqueU8(__sdk::spacetime_module::parse_reducer_args(
                "insert_unique_u8",
                &value.args,
            )?)),
            "insert_vec_address" => Ok(Reducer::InsertVecAddress(__sdk::spacetime_module::parse_reducer_args(
                "insert_vec_address",
                &value.args,
            )?)),
            "insert_vec_bool" => Ok(Reducer::InsertVecBool(__sdk::spacetime_module::parse_reducer_args(
                "insert_vec_bool",
                &value.args,
            )?)),
            "insert_vec_byte_struct" => Ok(Reducer::InsertVecByteStruct(
                __sdk::spacetime_module::parse_reducer_args("insert_vec_byte_struct", &value.args)?,
            )),
            "insert_vec_enum_with_payload" => Ok(Reducer::InsertVecEnumWithPayload(
                __sdk::spacetime_module::parse_reducer_args("insert_vec_enum_with_payload", &value.args)?,
            )),
            "insert_vec_every_primitive_struct" => Ok(Reducer::InsertVecEveryPrimitiveStruct(
                __sdk::spacetime_module::parse_reducer_args("insert_vec_every_primitive_struct", &value.args)?,
            )),
            "insert_vec_every_vec_struct" => Ok(Reducer::InsertVecEveryVecStruct(
                __sdk::spacetime_module::parse_reducer_args("insert_vec_every_vec_struct", &value.args)?,
            )),
            "insert_vec_f32" => Ok(Reducer::InsertVecF32(__sdk::spacetime_module::parse_reducer_args(
                "insert_vec_f32",
                &value.args,
            )?)),
            "insert_vec_f64" => Ok(Reducer::InsertVecF64(__sdk::spacetime_module::parse_reducer_args(
                "insert_vec_f64",
                &value.args,
            )?)),
            "insert_vec_i128" => Ok(Reducer::InsertVecI128(__sdk::spacetime_module::parse_reducer_args(
                "insert_vec_i128",
                &value.args,
            )?)),
            "insert_vec_i16" => Ok(Reducer::InsertVecI16(__sdk::spacetime_module::parse_reducer_args(
                "insert_vec_i16",
                &value.args,
            )?)),
            "insert_vec_i256" => Ok(Reducer::InsertVecI256(__sdk::spacetime_module::parse_reducer_args(
                "insert_vec_i256",
                &value.args,
            )?)),
            "insert_vec_i32" => Ok(Reducer::InsertVecI32(__sdk::spacetime_module::parse_reducer_args(
                "insert_vec_i32",
                &value.args,
            )?)),
            "insert_vec_i64" => Ok(Reducer::InsertVecI64(__sdk::spacetime_module::parse_reducer_args(
                "insert_vec_i64",
                &value.args,
            )?)),
            "insert_vec_i8" => Ok(Reducer::InsertVecI8(__sdk::spacetime_module::parse_reducer_args(
                "insert_vec_i8",
                &value.args,
            )?)),
            "insert_vec_identity" => Ok(Reducer::InsertVecIdentity(__sdk::spacetime_module::parse_reducer_args(
                "insert_vec_identity",
                &value.args,
            )?)),
            "insert_vec_simple_enum" => Ok(Reducer::InsertVecSimpleEnum(
                __sdk::spacetime_module::parse_reducer_args("insert_vec_simple_enum", &value.args)?,
            )),
            "insert_vec_string" => Ok(Reducer::InsertVecString(__sdk::spacetime_module::parse_reducer_args(
                "insert_vec_string",
                &value.args,
            )?)),
            "insert_vec_u128" => Ok(Reducer::InsertVecU128(__sdk::spacetime_module::parse_reducer_args(
                "insert_vec_u128",
                &value.args,
            )?)),
            "insert_vec_u16" => Ok(Reducer::InsertVecU16(__sdk::spacetime_module::parse_reducer_args(
                "insert_vec_u16",
                &value.args,
            )?)),
            "insert_vec_u256" => Ok(Reducer::InsertVecU256(__sdk::spacetime_module::parse_reducer_args(
                "insert_vec_u256",
                &value.args,
            )?)),
            "insert_vec_u32" => Ok(Reducer::InsertVecU32(__sdk::spacetime_module::parse_reducer_args(
                "insert_vec_u32",
                &value.args,
            )?)),
            "insert_vec_u64" => Ok(Reducer::InsertVecU64(__sdk::spacetime_module::parse_reducer_args(
                "insert_vec_u64",
                &value.args,
            )?)),
            "insert_vec_u8" => Ok(Reducer::InsertVecU8(__sdk::spacetime_module::parse_reducer_args(
                "insert_vec_u8",
                &value.args,
            )?)),
            "insert_vec_unit_struct" => Ok(Reducer::InsertVecUnitStruct(
                __sdk::spacetime_module::parse_reducer_args("insert_vec_unit_struct", &value.args)?,
            )),
            "no_op_succeeds" => Ok(Reducer::NoOpSucceeds(__sdk::spacetime_module::parse_reducer_args(
                "no_op_succeeds",
                &value.args,
            )?)),
            "update_pk_address" => Ok(Reducer::UpdatePkAddress(__sdk::spacetime_module::parse_reducer_args(
                "update_pk_address",
                &value.args,
            )?)),
            "update_pk_bool" => Ok(Reducer::UpdatePkBool(__sdk::spacetime_module::parse_reducer_args(
                "update_pk_bool",
                &value.args,
            )?)),
            "update_pk_i128" => Ok(Reducer::UpdatePkI128(__sdk::spacetime_module::parse_reducer_args(
                "update_pk_i128",
                &value.args,
            )?)),
            "update_pk_i16" => Ok(Reducer::UpdatePkI16(__sdk::spacetime_module::parse_reducer_args(
                "update_pk_i16",
                &value.args,
            )?)),
            "update_pk_i256" => Ok(Reducer::UpdatePkI256(__sdk::spacetime_module::parse_reducer_args(
                "update_pk_i256",
                &value.args,
            )?)),
            "update_pk_i32" => Ok(Reducer::UpdatePkI32(__sdk::spacetime_module::parse_reducer_args(
                "update_pk_i32",
                &value.args,
            )?)),
            "update_pk_i64" => Ok(Reducer::UpdatePkI64(__sdk::spacetime_module::parse_reducer_args(
                "update_pk_i64",
                &value.args,
            )?)),
            "update_pk_i8" => Ok(Reducer::UpdatePkI8(__sdk::spacetime_module::parse_reducer_args(
                "update_pk_i8",
                &value.args,
            )?)),
            "update_pk_identity" => Ok(Reducer::UpdatePkIdentity(__sdk::spacetime_module::parse_reducer_args(
                "update_pk_identity",
                &value.args,
            )?)),
            "update_pk_string" => Ok(Reducer::UpdatePkString(__sdk::spacetime_module::parse_reducer_args(
                "update_pk_string",
                &value.args,
            )?)),
            "update_pk_u128" => Ok(Reducer::UpdatePkU128(__sdk::spacetime_module::parse_reducer_args(
                "update_pk_u128",
                &value.args,
            )?)),
            "update_pk_u16" => Ok(Reducer::UpdatePkU16(__sdk::spacetime_module::parse_reducer_args(
                "update_pk_u16",
                &value.args,
            )?)),
            "update_pk_u256" => Ok(Reducer::UpdatePkU256(__sdk::spacetime_module::parse_reducer_args(
                "update_pk_u256",
                &value.args,
            )?)),
            "update_pk_u32" => Ok(Reducer::UpdatePkU32(__sdk::spacetime_module::parse_reducer_args(
                "update_pk_u32",
                &value.args,
            )?)),
            "update_pk_u64" => Ok(Reducer::UpdatePkU64(__sdk::spacetime_module::parse_reducer_args(
                "update_pk_u64",
                &value.args,
            )?)),
            "update_pk_u8" => Ok(Reducer::UpdatePkU8(__sdk::spacetime_module::parse_reducer_args(
                "update_pk_u8",
                &value.args,
            )?)),
            "update_unique_address" => Ok(Reducer::UpdateUniqueAddress(
                __sdk::spacetime_module::parse_reducer_args("update_unique_address", &value.args)?,
            )),
            "update_unique_bool" => Ok(Reducer::UpdateUniqueBool(__sdk::spacetime_module::parse_reducer_args(
                "update_unique_bool",
                &value.args,
            )?)),
            "update_unique_i128" => Ok(Reducer::UpdateUniqueI128(__sdk::spacetime_module::parse_reducer_args(
                "update_unique_i128",
                &value.args,
            )?)),
            "update_unique_i16" => Ok(Reducer::UpdateUniqueI16(__sdk::spacetime_module::parse_reducer_args(
                "update_unique_i16",
                &value.args,
            )?)),
            "update_unique_i256" => Ok(Reducer::UpdateUniqueI256(__sdk::spacetime_module::parse_reducer_args(
                "update_unique_i256",
                &value.args,
            )?)),
            "update_unique_i32" => Ok(Reducer::UpdateUniqueI32(__sdk::spacetime_module::parse_reducer_args(
                "update_unique_i32",
                &value.args,
            )?)),
            "update_unique_i64" => Ok(Reducer::UpdateUniqueI64(__sdk::spacetime_module::parse_reducer_args(
                "update_unique_i64",
                &value.args,
            )?)),
            "update_unique_i8" => Ok(Reducer::UpdateUniqueI8(__sdk::spacetime_module::parse_reducer_args(
                "update_unique_i8",
                &value.args,
            )?)),
            "update_unique_identity" => Ok(Reducer::UpdateUniqueIdentity(
                __sdk::spacetime_module::parse_reducer_args("update_unique_identity", &value.args)?,
            )),
            "update_unique_string" => Ok(Reducer::UpdateUniqueString(
                __sdk::spacetime_module::parse_reducer_args("update_unique_string", &value.args)?,
            )),
            "update_unique_u128" => Ok(Reducer::UpdateUniqueU128(__sdk::spacetime_module::parse_reducer_args(
                "update_unique_u128",
                &value.args,
            )?)),
            "update_unique_u16" => Ok(Reducer::UpdateUniqueU16(__sdk::spacetime_module::parse_reducer_args(
                "update_unique_u16",
                &value.args,
            )?)),
            "update_unique_u256" => Ok(Reducer::UpdateUniqueU256(__sdk::spacetime_module::parse_reducer_args(
                "update_unique_u256",
                &value.args,
            )?)),
            "update_unique_u32" => Ok(Reducer::UpdateUniqueU32(__sdk::spacetime_module::parse_reducer_args(
                "update_unique_u32",
                &value.args,
            )?)),
            "update_unique_u64" => Ok(Reducer::UpdateUniqueU64(__sdk::spacetime_module::parse_reducer_args(
                "update_unique_u64",
                &value.args,
            )?)),
            "update_unique_u8" => Ok(Reducer::UpdateUniqueU8(__sdk::spacetime_module::parse_reducer_args(
                "update_unique_u8",
                &value.args,
            )?)),
            _ => Err(__anyhow::anyhow!("Unknown reducer {:?}", value.reducer_name)),
        }
    }
}

#[derive(Default)]
#[allow(non_snake_case)]
#[doc(hidden)]
pub struct DbUpdate {
    large_table: __sdk::spacetime_module::TableUpdate<LargeTable>,
    one_address: __sdk::spacetime_module::TableUpdate<OneAddress>,
    one_bool: __sdk::spacetime_module::TableUpdate<OneBool>,
    one_byte_struct: __sdk::spacetime_module::TableUpdate<OneByteStruct>,
    one_enum_with_payload: __sdk::spacetime_module::TableUpdate<OneEnumWithPayload>,
    one_every_primitive_struct: __sdk::spacetime_module::TableUpdate<OneEveryPrimitiveStruct>,
    one_every_vec_struct: __sdk::spacetime_module::TableUpdate<OneEveryVecStruct>,
    one_f_32: __sdk::spacetime_module::TableUpdate<OneF32>,
    one_f_64: __sdk::spacetime_module::TableUpdate<OneF64>,
    one_i_128: __sdk::spacetime_module::TableUpdate<OneI128>,
    one_i_16: __sdk::spacetime_module::TableUpdate<OneI16>,
    one_i_256: __sdk::spacetime_module::TableUpdate<OneI256>,
    one_i_32: __sdk::spacetime_module::TableUpdate<OneI32>,
    one_i_64: __sdk::spacetime_module::TableUpdate<OneI64>,
    one_i_8: __sdk::spacetime_module::TableUpdate<OneI8>,
    one_identity: __sdk::spacetime_module::TableUpdate<OneIdentity>,
    one_simple_enum: __sdk::spacetime_module::TableUpdate<OneSimpleEnum>,
    one_string: __sdk::spacetime_module::TableUpdate<OneString>,
    one_u_128: __sdk::spacetime_module::TableUpdate<OneU128>,
    one_u_16: __sdk::spacetime_module::TableUpdate<OneU16>,
    one_u_256: __sdk::spacetime_module::TableUpdate<OneU256>,
    one_u_32: __sdk::spacetime_module::TableUpdate<OneU32>,
    one_u_64: __sdk::spacetime_module::TableUpdate<OneU64>,
    one_u_8: __sdk::spacetime_module::TableUpdate<OneU8>,
    one_unit_struct: __sdk::spacetime_module::TableUpdate<OneUnitStruct>,
    option_every_primitive_struct: __sdk::spacetime_module::TableUpdate<OptionEveryPrimitiveStruct>,
    option_i_32: __sdk::spacetime_module::TableUpdate<OptionI32>,
    option_identity: __sdk::spacetime_module::TableUpdate<OptionIdentity>,
    option_simple_enum: __sdk::spacetime_module::TableUpdate<OptionSimpleEnum>,
    option_string: __sdk::spacetime_module::TableUpdate<OptionString>,
    option_vec_option_i_32: __sdk::spacetime_module::TableUpdate<OptionVecOptionI32>,
    pk_address: __sdk::spacetime_module::TableUpdate<PkAddress>,
    pk_bool: __sdk::spacetime_module::TableUpdate<PkBool>,
    pk_i_128: __sdk::spacetime_module::TableUpdate<PkI128>,
    pk_i_16: __sdk::spacetime_module::TableUpdate<PkI16>,
    pk_i_256: __sdk::spacetime_module::TableUpdate<PkI256>,
    pk_i_32: __sdk::spacetime_module::TableUpdate<PkI32>,
    pk_i_64: __sdk::spacetime_module::TableUpdate<PkI64>,
    pk_i_8: __sdk::spacetime_module::TableUpdate<PkI8>,
    pk_identity: __sdk::spacetime_module::TableUpdate<PkIdentity>,
    pk_string: __sdk::spacetime_module::TableUpdate<PkString>,
    pk_u_128: __sdk::spacetime_module::TableUpdate<PkU128>,
    pk_u_16: __sdk::spacetime_module::TableUpdate<PkU16>,
    pk_u_256: __sdk::spacetime_module::TableUpdate<PkU256>,
    pk_u_32: __sdk::spacetime_module::TableUpdate<PkU32>,
    pk_u_64: __sdk::spacetime_module::TableUpdate<PkU64>,
    pk_u_8: __sdk::spacetime_module::TableUpdate<PkU8>,
    table_holds_table: __sdk::spacetime_module::TableUpdate<TableHoldsTable>,
    unique_address: __sdk::spacetime_module::TableUpdate<UniqueAddress>,
    unique_bool: __sdk::spacetime_module::TableUpdate<UniqueBool>,
    unique_i_128: __sdk::spacetime_module::TableUpdate<UniqueI128>,
    unique_i_16: __sdk::spacetime_module::TableUpdate<UniqueI16>,
    unique_i_256: __sdk::spacetime_module::TableUpdate<UniqueI256>,
    unique_i_32: __sdk::spacetime_module::TableUpdate<UniqueI32>,
    unique_i_64: __sdk::spacetime_module::TableUpdate<UniqueI64>,
    unique_i_8: __sdk::spacetime_module::TableUpdate<UniqueI8>,
    unique_identity: __sdk::spacetime_module::TableUpdate<UniqueIdentity>,
    unique_string: __sdk::spacetime_module::TableUpdate<UniqueString>,
    unique_u_128: __sdk::spacetime_module::TableUpdate<UniqueU128>,
    unique_u_16: __sdk::spacetime_module::TableUpdate<UniqueU16>,
    unique_u_256: __sdk::spacetime_module::TableUpdate<UniqueU256>,
    unique_u_32: __sdk::spacetime_module::TableUpdate<UniqueU32>,
    unique_u_64: __sdk::spacetime_module::TableUpdate<UniqueU64>,
    unique_u_8: __sdk::spacetime_module::TableUpdate<UniqueU8>,
    vec_address: __sdk::spacetime_module::TableUpdate<VecAddress>,
    vec_bool: __sdk::spacetime_module::TableUpdate<VecBool>,
    vec_byte_struct: __sdk::spacetime_module::TableUpdate<VecByteStruct>,
    vec_enum_with_payload: __sdk::spacetime_module::TableUpdate<VecEnumWithPayload>,
    vec_every_primitive_struct: __sdk::spacetime_module::TableUpdate<VecEveryPrimitiveStruct>,
    vec_every_vec_struct: __sdk::spacetime_module::TableUpdate<VecEveryVecStruct>,
    vec_f_32: __sdk::spacetime_module::TableUpdate<VecF32>,
    vec_f_64: __sdk::spacetime_module::TableUpdate<VecF64>,
    vec_i_128: __sdk::spacetime_module::TableUpdate<VecI128>,
    vec_i_16: __sdk::spacetime_module::TableUpdate<VecI16>,
    vec_i_256: __sdk::spacetime_module::TableUpdate<VecI256>,
    vec_i_32: __sdk::spacetime_module::TableUpdate<VecI32>,
    vec_i_64: __sdk::spacetime_module::TableUpdate<VecI64>,
    vec_i_8: __sdk::spacetime_module::TableUpdate<VecI8>,
    vec_identity: __sdk::spacetime_module::TableUpdate<VecIdentity>,
    vec_simple_enum: __sdk::spacetime_module::TableUpdate<VecSimpleEnum>,
    vec_string: __sdk::spacetime_module::TableUpdate<VecString>,
    vec_u_128: __sdk::spacetime_module::TableUpdate<VecU128>,
    vec_u_16: __sdk::spacetime_module::TableUpdate<VecU16>,
    vec_u_256: __sdk::spacetime_module::TableUpdate<VecU256>,
    vec_u_32: __sdk::spacetime_module::TableUpdate<VecU32>,
    vec_u_64: __sdk::spacetime_module::TableUpdate<VecU64>,
    vec_u_8: __sdk::spacetime_module::TableUpdate<VecU8>,
    vec_unit_struct: __sdk::spacetime_module::TableUpdate<VecUnitStruct>,
}

impl TryFrom<__ws::DatabaseUpdate> for DbUpdate {
    type Error = __anyhow::Error;
    fn try_from(raw: __ws::DatabaseUpdate) -> Result<Self, Self::Error> {
        let mut db_update = DbUpdate::default();
        for table_update in raw.tables {
            match &table_update.table_name[..] {
                "large_table" => {
                    db_update.large_table =
                        large_table_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_address" => {
                    db_update.one_address =
                        one_address_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_bool" => {
                    db_update.one_bool = one_bool_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_byte_struct" => {
                    db_update.one_byte_struct =
                        one_byte_struct_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_enum_with_payload" => {
                    db_update.one_enum_with_payload =
                        one_enum_with_payload_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_every_primitive_struct" => {
                    db_update.one_every_primitive_struct = one_every_primitive_struct_table::parse_table_update(
                        table_update.deletes,
                        table_update.inserts,
                    )?
                }
                "one_every_vec_struct" => {
                    db_update.one_every_vec_struct =
                        one_every_vec_struct_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_f32" => {
                    db_update.one_f_32 = one_f_32_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_f64" => {
                    db_update.one_f_64 = one_f_64_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_i128" => {
                    db_update.one_i_128 =
                        one_i_128_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_i16" => {
                    db_update.one_i_16 = one_i_16_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_i256" => {
                    db_update.one_i_256 =
                        one_i_256_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_i32" => {
                    db_update.one_i_32 = one_i_32_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_i64" => {
                    db_update.one_i_64 = one_i_64_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_i8" => {
                    db_update.one_i_8 = one_i_8_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_identity" => {
                    db_update.one_identity =
                        one_identity_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_simple_enum" => {
                    db_update.one_simple_enum =
                        one_simple_enum_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_string" => {
                    db_update.one_string =
                        one_string_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_u128" => {
                    db_update.one_u_128 =
                        one_u_128_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_u16" => {
                    db_update.one_u_16 = one_u_16_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_u256" => {
                    db_update.one_u_256 =
                        one_u_256_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_u32" => {
                    db_update.one_u_32 = one_u_32_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_u64" => {
                    db_update.one_u_64 = one_u_64_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_u8" => {
                    db_update.one_u_8 = one_u_8_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "one_unit_struct" => {
                    db_update.one_unit_struct =
                        one_unit_struct_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "option_every_primitive_struct" => {
                    db_update.option_every_primitive_struct = option_every_primitive_struct_table::parse_table_update(
                        table_update.deletes,
                        table_update.inserts,
                    )?
                }
                "option_i32" => {
                    db_update.option_i_32 =
                        option_i_32_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "option_identity" => {
                    db_update.option_identity =
                        option_identity_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "option_simple_enum" => {
                    db_update.option_simple_enum =
                        option_simple_enum_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "option_string" => {
                    db_update.option_string =
                        option_string_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "option_vec_option_i32" => {
                    db_update.option_vec_option_i_32 =
                        option_vec_option_i_32_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "pk_address" => {
                    db_update.pk_address =
                        pk_address_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "pk_bool" => {
                    db_update.pk_bool = pk_bool_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "pk_i128" => {
                    db_update.pk_i_128 = pk_i_128_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "pk_i16" => {
                    db_update.pk_i_16 = pk_i_16_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "pk_i256" => {
                    db_update.pk_i_256 = pk_i_256_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "pk_i32" => {
                    db_update.pk_i_32 = pk_i_32_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "pk_i64" => {
                    db_update.pk_i_64 = pk_i_64_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "pk_i8" => {
                    db_update.pk_i_8 = pk_i_8_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "pk_identity" => {
                    db_update.pk_identity =
                        pk_identity_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "pk_string" => {
                    db_update.pk_string =
                        pk_string_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "pk_u128" => {
                    db_update.pk_u_128 = pk_u_128_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "pk_u16" => {
                    db_update.pk_u_16 = pk_u_16_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "pk_u256" => {
                    db_update.pk_u_256 = pk_u_256_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "pk_u32" => {
                    db_update.pk_u_32 = pk_u_32_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "pk_u64" => {
                    db_update.pk_u_64 = pk_u_64_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "pk_u8" => {
                    db_update.pk_u_8 = pk_u_8_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "table_holds_table" => {
                    db_update.table_holds_table =
                        table_holds_table_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "unique_address" => {
                    db_update.unique_address =
                        unique_address_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "unique_bool" => {
                    db_update.unique_bool =
                        unique_bool_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "unique_i128" => {
                    db_update.unique_i_128 =
                        unique_i_128_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "unique_i16" => {
                    db_update.unique_i_16 =
                        unique_i_16_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "unique_i256" => {
                    db_update.unique_i_256 =
                        unique_i_256_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "unique_i32" => {
                    db_update.unique_i_32 =
                        unique_i_32_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "unique_i64" => {
                    db_update.unique_i_64 =
                        unique_i_64_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "unique_i8" => {
                    db_update.unique_i_8 =
                        unique_i_8_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "unique_identity" => {
                    db_update.unique_identity =
                        unique_identity_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "unique_string" => {
                    db_update.unique_string =
                        unique_string_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "unique_u128" => {
                    db_update.unique_u_128 =
                        unique_u_128_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "unique_u16" => {
                    db_update.unique_u_16 =
                        unique_u_16_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "unique_u256" => {
                    db_update.unique_u_256 =
                        unique_u_256_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "unique_u32" => {
                    db_update.unique_u_32 =
                        unique_u_32_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "unique_u64" => {
                    db_update.unique_u_64 =
                        unique_u_64_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "unique_u8" => {
                    db_update.unique_u_8 =
                        unique_u_8_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_address" => {
                    db_update.vec_address =
                        vec_address_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_bool" => {
                    db_update.vec_bool = vec_bool_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_byte_struct" => {
                    db_update.vec_byte_struct =
                        vec_byte_struct_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_enum_with_payload" => {
                    db_update.vec_enum_with_payload =
                        vec_enum_with_payload_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_every_primitive_struct" => {
                    db_update.vec_every_primitive_struct = vec_every_primitive_struct_table::parse_table_update(
                        table_update.deletes,
                        table_update.inserts,
                    )?
                }
                "vec_every_vec_struct" => {
                    db_update.vec_every_vec_struct =
                        vec_every_vec_struct_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_f32" => {
                    db_update.vec_f_32 = vec_f_32_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_f64" => {
                    db_update.vec_f_64 = vec_f_64_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_i128" => {
                    db_update.vec_i_128 =
                        vec_i_128_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_i16" => {
                    db_update.vec_i_16 = vec_i_16_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_i256" => {
                    db_update.vec_i_256 =
                        vec_i_256_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_i32" => {
                    db_update.vec_i_32 = vec_i_32_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_i64" => {
                    db_update.vec_i_64 = vec_i_64_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_i8" => {
                    db_update.vec_i_8 = vec_i_8_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_identity" => {
                    db_update.vec_identity =
                        vec_identity_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_simple_enum" => {
                    db_update.vec_simple_enum =
                        vec_simple_enum_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_string" => {
                    db_update.vec_string =
                        vec_string_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_u128" => {
                    db_update.vec_u_128 =
                        vec_u_128_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_u16" => {
                    db_update.vec_u_16 = vec_u_16_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_u256" => {
                    db_update.vec_u_256 =
                        vec_u_256_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_u32" => {
                    db_update.vec_u_32 = vec_u_32_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_u64" => {
                    db_update.vec_u_64 = vec_u_64_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_u8" => {
                    db_update.vec_u_8 = vec_u_8_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }
                "vec_unit_struct" => {
                    db_update.vec_unit_struct =
                        vec_unit_struct_table::parse_table_update(table_update.deletes, table_update.inserts)?
                }

                unknown => __anyhow::bail!("Unknown table {unknown:?} in DatabaseUpdate"),
            }
        }
        Ok(db_update)
    }
}

impl __sdk::spacetime_module::InModule for DbUpdate {
    type Module = RemoteModule;
}

impl __sdk::spacetime_module::DbUpdate for DbUpdate {
    fn apply_to_client_cache(&self, cache: &mut __sdk::client_cache::ClientCache<RemoteModule>) {
        cache.apply_diff_to_table::<LargeTable>("large_table", &self.large_table);
        cache.apply_diff_to_table::<OneAddress>("one_address", &self.one_address);
        cache.apply_diff_to_table::<OneBool>("one_bool", &self.one_bool);
        cache.apply_diff_to_table::<OneByteStruct>("one_byte_struct", &self.one_byte_struct);
        cache.apply_diff_to_table::<OneEnumWithPayload>("one_enum_with_payload", &self.one_enum_with_payload);
        cache.apply_diff_to_table::<OneEveryPrimitiveStruct>(
            "one_every_primitive_struct",
            &self.one_every_primitive_struct,
        );
        cache.apply_diff_to_table::<OneEveryVecStruct>("one_every_vec_struct", &self.one_every_vec_struct);
        cache.apply_diff_to_table::<OneF32>("one_f32", &self.one_f_32);
        cache.apply_diff_to_table::<OneF64>("one_f64", &self.one_f_64);
        cache.apply_diff_to_table::<OneI128>("one_i128", &self.one_i_128);
        cache.apply_diff_to_table::<OneI16>("one_i16", &self.one_i_16);
        cache.apply_diff_to_table::<OneI256>("one_i256", &self.one_i_256);
        cache.apply_diff_to_table::<OneI32>("one_i32", &self.one_i_32);
        cache.apply_diff_to_table::<OneI64>("one_i64", &self.one_i_64);
        cache.apply_diff_to_table::<OneI8>("one_i8", &self.one_i_8);
        cache.apply_diff_to_table::<OneIdentity>("one_identity", &self.one_identity);
        cache.apply_diff_to_table::<OneSimpleEnum>("one_simple_enum", &self.one_simple_enum);
        cache.apply_diff_to_table::<OneString>("one_string", &self.one_string);
        cache.apply_diff_to_table::<OneU128>("one_u128", &self.one_u_128);
        cache.apply_diff_to_table::<OneU16>("one_u16", &self.one_u_16);
        cache.apply_diff_to_table::<OneU256>("one_u256", &self.one_u_256);
        cache.apply_diff_to_table::<OneU32>("one_u32", &self.one_u_32);
        cache.apply_diff_to_table::<OneU64>("one_u64", &self.one_u_64);
        cache.apply_diff_to_table::<OneU8>("one_u8", &self.one_u_8);
        cache.apply_diff_to_table::<OneUnitStruct>("one_unit_struct", &self.one_unit_struct);
        cache.apply_diff_to_table::<OptionEveryPrimitiveStruct>(
            "option_every_primitive_struct",
            &self.option_every_primitive_struct,
        );
        cache.apply_diff_to_table::<OptionI32>("option_i32", &self.option_i_32);
        cache.apply_diff_to_table::<OptionIdentity>("option_identity", &self.option_identity);
        cache.apply_diff_to_table::<OptionSimpleEnum>("option_simple_enum", &self.option_simple_enum);
        cache.apply_diff_to_table::<OptionString>("option_string", &self.option_string);
        cache.apply_diff_to_table::<OptionVecOptionI32>("option_vec_option_i32", &self.option_vec_option_i_32);
        cache.apply_diff_to_table::<PkAddress>("pk_address", &self.pk_address);
        cache.apply_diff_to_table::<PkBool>("pk_bool", &self.pk_bool);
        cache.apply_diff_to_table::<PkI128>("pk_i128", &self.pk_i_128);
        cache.apply_diff_to_table::<PkI16>("pk_i16", &self.pk_i_16);
        cache.apply_diff_to_table::<PkI256>("pk_i256", &self.pk_i_256);
        cache.apply_diff_to_table::<PkI32>("pk_i32", &self.pk_i_32);
        cache.apply_diff_to_table::<PkI64>("pk_i64", &self.pk_i_64);
        cache.apply_diff_to_table::<PkI8>("pk_i8", &self.pk_i_8);
        cache.apply_diff_to_table::<PkIdentity>("pk_identity", &self.pk_identity);
        cache.apply_diff_to_table::<PkString>("pk_string", &self.pk_string);
        cache.apply_diff_to_table::<PkU128>("pk_u128", &self.pk_u_128);
        cache.apply_diff_to_table::<PkU16>("pk_u16", &self.pk_u_16);
        cache.apply_diff_to_table::<PkU256>("pk_u256", &self.pk_u_256);
        cache.apply_diff_to_table::<PkU32>("pk_u32", &self.pk_u_32);
        cache.apply_diff_to_table::<PkU64>("pk_u64", &self.pk_u_64);
        cache.apply_diff_to_table::<PkU8>("pk_u8", &self.pk_u_8);
        cache.apply_diff_to_table::<TableHoldsTable>("table_holds_table", &self.table_holds_table);
        cache.apply_diff_to_table::<UniqueAddress>("unique_address", &self.unique_address);
        cache.apply_diff_to_table::<UniqueBool>("unique_bool", &self.unique_bool);
        cache.apply_diff_to_table::<UniqueI128>("unique_i128", &self.unique_i_128);
        cache.apply_diff_to_table::<UniqueI16>("unique_i16", &self.unique_i_16);
        cache.apply_diff_to_table::<UniqueI256>("unique_i256", &self.unique_i_256);
        cache.apply_diff_to_table::<UniqueI32>("unique_i32", &self.unique_i_32);
        cache.apply_diff_to_table::<UniqueI64>("unique_i64", &self.unique_i_64);
        cache.apply_diff_to_table::<UniqueI8>("unique_i8", &self.unique_i_8);
        cache.apply_diff_to_table::<UniqueIdentity>("unique_identity", &self.unique_identity);
        cache.apply_diff_to_table::<UniqueString>("unique_string", &self.unique_string);
        cache.apply_diff_to_table::<UniqueU128>("unique_u128", &self.unique_u_128);
        cache.apply_diff_to_table::<UniqueU16>("unique_u16", &self.unique_u_16);
        cache.apply_diff_to_table::<UniqueU256>("unique_u256", &self.unique_u_256);
        cache.apply_diff_to_table::<UniqueU32>("unique_u32", &self.unique_u_32);
        cache.apply_diff_to_table::<UniqueU64>("unique_u64", &self.unique_u_64);
        cache.apply_diff_to_table::<UniqueU8>("unique_u8", &self.unique_u_8);
        cache.apply_diff_to_table::<VecAddress>("vec_address", &self.vec_address);
        cache.apply_diff_to_table::<VecBool>("vec_bool", &self.vec_bool);
        cache.apply_diff_to_table::<VecByteStruct>("vec_byte_struct", &self.vec_byte_struct);
        cache.apply_diff_to_table::<VecEnumWithPayload>("vec_enum_with_payload", &self.vec_enum_with_payload);
        cache.apply_diff_to_table::<VecEveryPrimitiveStruct>(
            "vec_every_primitive_struct",
            &self.vec_every_primitive_struct,
        );
        cache.apply_diff_to_table::<VecEveryVecStruct>("vec_every_vec_struct", &self.vec_every_vec_struct);
        cache.apply_diff_to_table::<VecF32>("vec_f32", &self.vec_f_32);
        cache.apply_diff_to_table::<VecF64>("vec_f64", &self.vec_f_64);
        cache.apply_diff_to_table::<VecI128>("vec_i128", &self.vec_i_128);
        cache.apply_diff_to_table::<VecI16>("vec_i16", &self.vec_i_16);
        cache.apply_diff_to_table::<VecI256>("vec_i256", &self.vec_i_256);
        cache.apply_diff_to_table::<VecI32>("vec_i32", &self.vec_i_32);
        cache.apply_diff_to_table::<VecI64>("vec_i64", &self.vec_i_64);
        cache.apply_diff_to_table::<VecI8>("vec_i8", &self.vec_i_8);
        cache.apply_diff_to_table::<VecIdentity>("vec_identity", &self.vec_identity);
        cache.apply_diff_to_table::<VecSimpleEnum>("vec_simple_enum", &self.vec_simple_enum);
        cache.apply_diff_to_table::<VecString>("vec_string", &self.vec_string);
        cache.apply_diff_to_table::<VecU128>("vec_u128", &self.vec_u_128);
        cache.apply_diff_to_table::<VecU16>("vec_u16", &self.vec_u_16);
        cache.apply_diff_to_table::<VecU256>("vec_u256", &self.vec_u_256);
        cache.apply_diff_to_table::<VecU32>("vec_u32", &self.vec_u_32);
        cache.apply_diff_to_table::<VecU64>("vec_u64", &self.vec_u_64);
        cache.apply_diff_to_table::<VecU8>("vec_u8", &self.vec_u_8);
        cache.apply_diff_to_table::<VecUnitStruct>("vec_unit_struct", &self.vec_unit_struct);
    }
    fn invoke_row_callbacks(&self, event: &EventContext, callbacks: &mut __sdk::callbacks::DbCallbacks<RemoteModule>) {
        callbacks.invoke_table_row_callbacks::<LargeTable>("large_table", &self.large_table, event);
        callbacks.invoke_table_row_callbacks::<OneAddress>("one_address", &self.one_address, event);
        callbacks.invoke_table_row_callbacks::<OneBool>("one_bool", &self.one_bool, event);
        callbacks.invoke_table_row_callbacks::<OneByteStruct>("one_byte_struct", &self.one_byte_struct, event);
        callbacks.invoke_table_row_callbacks::<OneEnumWithPayload>(
            "one_enum_with_payload",
            &self.one_enum_with_payload,
            event,
        );
        callbacks.invoke_table_row_callbacks::<OneEveryPrimitiveStruct>(
            "one_every_primitive_struct",
            &self.one_every_primitive_struct,
            event,
        );
        callbacks.invoke_table_row_callbacks::<OneEveryVecStruct>(
            "one_every_vec_struct",
            &self.one_every_vec_struct,
            event,
        );
        callbacks.invoke_table_row_callbacks::<OneF32>("one_f32", &self.one_f_32, event);
        callbacks.invoke_table_row_callbacks::<OneF64>("one_f64", &self.one_f_64, event);
        callbacks.invoke_table_row_callbacks::<OneI128>("one_i128", &self.one_i_128, event);
        callbacks.invoke_table_row_callbacks::<OneI16>("one_i16", &self.one_i_16, event);
        callbacks.invoke_table_row_callbacks::<OneI256>("one_i256", &self.one_i_256, event);
        callbacks.invoke_table_row_callbacks::<OneI32>("one_i32", &self.one_i_32, event);
        callbacks.invoke_table_row_callbacks::<OneI64>("one_i64", &self.one_i_64, event);
        callbacks.invoke_table_row_callbacks::<OneI8>("one_i8", &self.one_i_8, event);
        callbacks.invoke_table_row_callbacks::<OneIdentity>("one_identity", &self.one_identity, event);
        callbacks.invoke_table_row_callbacks::<OneSimpleEnum>("one_simple_enum", &self.one_simple_enum, event);
        callbacks.invoke_table_row_callbacks::<OneString>("one_string", &self.one_string, event);
        callbacks.invoke_table_row_callbacks::<OneU128>("one_u128", &self.one_u_128, event);
        callbacks.invoke_table_row_callbacks::<OneU16>("one_u16", &self.one_u_16, event);
        callbacks.invoke_table_row_callbacks::<OneU256>("one_u256", &self.one_u_256, event);
        callbacks.invoke_table_row_callbacks::<OneU32>("one_u32", &self.one_u_32, event);
        callbacks.invoke_table_row_callbacks::<OneU64>("one_u64", &self.one_u_64, event);
        callbacks.invoke_table_row_callbacks::<OneU8>("one_u8", &self.one_u_8, event);
        callbacks.invoke_table_row_callbacks::<OneUnitStruct>("one_unit_struct", &self.one_unit_struct, event);
        callbacks.invoke_table_row_callbacks::<OptionEveryPrimitiveStruct>(
            "option_every_primitive_struct",
            &self.option_every_primitive_struct,
            event,
        );
        callbacks.invoke_table_row_callbacks::<OptionI32>("option_i32", &self.option_i_32, event);
        callbacks.invoke_table_row_callbacks::<OptionIdentity>("option_identity", &self.option_identity, event);
        callbacks.invoke_table_row_callbacks::<OptionSimpleEnum>("option_simple_enum", &self.option_simple_enum, event);
        callbacks.invoke_table_row_callbacks::<OptionString>("option_string", &self.option_string, event);
        callbacks.invoke_table_row_callbacks::<OptionVecOptionI32>(
            "option_vec_option_i32",
            &self.option_vec_option_i_32,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PkAddress>("pk_address", &self.pk_address, event);
        callbacks.invoke_table_row_callbacks::<PkBool>("pk_bool", &self.pk_bool, event);
        callbacks.invoke_table_row_callbacks::<PkI128>("pk_i128", &self.pk_i_128, event);
        callbacks.invoke_table_row_callbacks::<PkI16>("pk_i16", &self.pk_i_16, event);
        callbacks.invoke_table_row_callbacks::<PkI256>("pk_i256", &self.pk_i_256, event);
        callbacks.invoke_table_row_callbacks::<PkI32>("pk_i32", &self.pk_i_32, event);
        callbacks.invoke_table_row_callbacks::<PkI64>("pk_i64", &self.pk_i_64, event);
        callbacks.invoke_table_row_callbacks::<PkI8>("pk_i8", &self.pk_i_8, event);
        callbacks.invoke_table_row_callbacks::<PkIdentity>("pk_identity", &self.pk_identity, event);
        callbacks.invoke_table_row_callbacks::<PkString>("pk_string", &self.pk_string, event);
        callbacks.invoke_table_row_callbacks::<PkU128>("pk_u128", &self.pk_u_128, event);
        callbacks.invoke_table_row_callbacks::<PkU16>("pk_u16", &self.pk_u_16, event);
        callbacks.invoke_table_row_callbacks::<PkU256>("pk_u256", &self.pk_u_256, event);
        callbacks.invoke_table_row_callbacks::<PkU32>("pk_u32", &self.pk_u_32, event);
        callbacks.invoke_table_row_callbacks::<PkU64>("pk_u64", &self.pk_u_64, event);
        callbacks.invoke_table_row_callbacks::<PkU8>("pk_u8", &self.pk_u_8, event);
        callbacks.invoke_table_row_callbacks::<TableHoldsTable>("table_holds_table", &self.table_holds_table, event);
        callbacks.invoke_table_row_callbacks::<UniqueAddress>("unique_address", &self.unique_address, event);
        callbacks.invoke_table_row_callbacks::<UniqueBool>("unique_bool", &self.unique_bool, event);
        callbacks.invoke_table_row_callbacks::<UniqueI128>("unique_i128", &self.unique_i_128, event);
        callbacks.invoke_table_row_callbacks::<UniqueI16>("unique_i16", &self.unique_i_16, event);
        callbacks.invoke_table_row_callbacks::<UniqueI256>("unique_i256", &self.unique_i_256, event);
        callbacks.invoke_table_row_callbacks::<UniqueI32>("unique_i32", &self.unique_i_32, event);
        callbacks.invoke_table_row_callbacks::<UniqueI64>("unique_i64", &self.unique_i_64, event);
        callbacks.invoke_table_row_callbacks::<UniqueI8>("unique_i8", &self.unique_i_8, event);
        callbacks.invoke_table_row_callbacks::<UniqueIdentity>("unique_identity", &self.unique_identity, event);
        callbacks.invoke_table_row_callbacks::<UniqueString>("unique_string", &self.unique_string, event);
        callbacks.invoke_table_row_callbacks::<UniqueU128>("unique_u128", &self.unique_u_128, event);
        callbacks.invoke_table_row_callbacks::<UniqueU16>("unique_u16", &self.unique_u_16, event);
        callbacks.invoke_table_row_callbacks::<UniqueU256>("unique_u256", &self.unique_u_256, event);
        callbacks.invoke_table_row_callbacks::<UniqueU32>("unique_u32", &self.unique_u_32, event);
        callbacks.invoke_table_row_callbacks::<UniqueU64>("unique_u64", &self.unique_u_64, event);
        callbacks.invoke_table_row_callbacks::<UniqueU8>("unique_u8", &self.unique_u_8, event);
        callbacks.invoke_table_row_callbacks::<VecAddress>("vec_address", &self.vec_address, event);
        callbacks.invoke_table_row_callbacks::<VecBool>("vec_bool", &self.vec_bool, event);
        callbacks.invoke_table_row_callbacks::<VecByteStruct>("vec_byte_struct", &self.vec_byte_struct, event);
        callbacks.invoke_table_row_callbacks::<VecEnumWithPayload>(
            "vec_enum_with_payload",
            &self.vec_enum_with_payload,
            event,
        );
        callbacks.invoke_table_row_callbacks::<VecEveryPrimitiveStruct>(
            "vec_every_primitive_struct",
            &self.vec_every_primitive_struct,
            event,
        );
        callbacks.invoke_table_row_callbacks::<VecEveryVecStruct>(
            "vec_every_vec_struct",
            &self.vec_every_vec_struct,
            event,
        );
        callbacks.invoke_table_row_callbacks::<VecF32>("vec_f32", &self.vec_f_32, event);
        callbacks.invoke_table_row_callbacks::<VecF64>("vec_f64", &self.vec_f_64, event);
        callbacks.invoke_table_row_callbacks::<VecI128>("vec_i128", &self.vec_i_128, event);
        callbacks.invoke_table_row_callbacks::<VecI16>("vec_i16", &self.vec_i_16, event);
        callbacks.invoke_table_row_callbacks::<VecI256>("vec_i256", &self.vec_i_256, event);
        callbacks.invoke_table_row_callbacks::<VecI32>("vec_i32", &self.vec_i_32, event);
        callbacks.invoke_table_row_callbacks::<VecI64>("vec_i64", &self.vec_i_64, event);
        callbacks.invoke_table_row_callbacks::<VecI8>("vec_i8", &self.vec_i_8, event);
        callbacks.invoke_table_row_callbacks::<VecIdentity>("vec_identity", &self.vec_identity, event);
        callbacks.invoke_table_row_callbacks::<VecSimpleEnum>("vec_simple_enum", &self.vec_simple_enum, event);
        callbacks.invoke_table_row_callbacks::<VecString>("vec_string", &self.vec_string, event);
        callbacks.invoke_table_row_callbacks::<VecU128>("vec_u128", &self.vec_u_128, event);
        callbacks.invoke_table_row_callbacks::<VecU16>("vec_u16", &self.vec_u_16, event);
        callbacks.invoke_table_row_callbacks::<VecU256>("vec_u256", &self.vec_u_256, event);
        callbacks.invoke_table_row_callbacks::<VecU32>("vec_u32", &self.vec_u_32, event);
        callbacks.invoke_table_row_callbacks::<VecU64>("vec_u64", &self.vec_u_64, event);
        callbacks.invoke_table_row_callbacks::<VecU8>("vec_u8", &self.vec_u_8, event);
        callbacks.invoke_table_row_callbacks::<VecUnitStruct>("vec_unit_struct", &self.vec_unit_struct, event);
    }
}

#[doc(hidden)]
pub struct RemoteModule;

impl __sdk::spacetime_module::InModule for RemoteModule {
    type Module = Self;
}

impl __sdk::spacetime_module::SpacetimeModule for RemoteModule {
    type DbConnection = DbConnection;
    type EventContext = EventContext;
    type Reducer = Reducer;
    type DbView = RemoteTables;
    type Reducers = RemoteReducers;
    type DbUpdate = DbUpdate;
    type SubscriptionHandle = SubscriptionHandle;
}

/// The `reducers` field of [`EventContext`] and [`DbConnection`],
/// with methods provided by extension traits for each reducer defined by the module.
pub struct RemoteReducers {
    imp: __sdk::db_connection::DbContextImpl<RemoteModule>,
}

impl __sdk::spacetime_module::InModule for RemoteReducers {
    type Module = RemoteModule;
}

/// The `db` field of [`EventContext`] and [`DbConnection`],
/// with methods provided by extension traits for each table defined by the module.
pub struct RemoteTables {
    imp: __sdk::db_connection::DbContextImpl<RemoteModule>,
}

impl __sdk::spacetime_module::InModule for RemoteTables {
    type Module = RemoteModule;
}

/// A connection to a remote module, including a materialized view of a subset of the database.
///
/// Connect to a remote module by calling [`DbConnection::builder`]
/// and using the [`__sdk::DbConnectionBuilder`] builder-pattern constructor.
///
/// You must explicitly advance the connection by calling any one of:
///
/// - [`DbConnection::frame_tick`].
/// - [`DbConnection::run_threaded`].
/// - [`DbConnection::run_async`].
/// - [`DbConnection::advance_one_message`].
/// - [`DbConnection::advance_one_message_blocking`].
/// - [`DbConnection::advance_one_message_async`].
///
/// Which of these methods you should call depends on the specific needs of your application,
/// but you must call one of them, or else the connection will never progress.
pub struct DbConnection {
    /// Access to tables defined by the module via extension traits implemented for [`RemoteTables`].
    pub db: RemoteTables,
    /// Access to reducers defined by the module via extension traits implemented for [`RemoteReducers`].
    pub reducers: RemoteReducers,

    imp: __sdk::db_connection::DbContextImpl<RemoteModule>,
}

impl __sdk::spacetime_module::InModule for DbConnection {
    type Module = RemoteModule;
}

impl __sdk::db_context::DbContext for DbConnection {
    type DbView = RemoteTables;
    type Reducers = RemoteReducers;

    fn db(&self) -> &Self::DbView {
        &self.db
    }
    fn reducers(&self) -> &Self::Reducers {
        &self.reducers
    }

    fn is_active(&self) -> bool {
        self.imp.is_active()
    }

    fn disconnect(&self) -> __anyhow::Result<()> {
        self.imp.disconnect()
    }

    type SubscriptionBuilder = __sdk::subscription::SubscriptionBuilder<RemoteModule>;

    fn subscription_builder(&self) -> Self::SubscriptionBuilder {
        __sdk::subscription::SubscriptionBuilder::new(&self.imp)
    }

    fn try_identity(&self) -> Option<__sdk::Identity> {
        self.imp.try_identity()
    }
    fn address(&self) -> __sdk::Address {
        self.imp.address()
    }
}

impl DbConnection {
    /// Builder-pattern constructor for a connection to a remote module.
    ///
    /// See [`__sdk::DbConnectionBuilder`] for required and optional configuration for the new connection.
    pub fn builder() -> __sdk::DbConnectionBuilder<RemoteModule> {
        __sdk::db_connection::DbConnectionBuilder::new()
    }

    /// If any WebSocket messages are waiting, process one of them.
    ///
    /// Returns `true` if a message was processed, or `false` if the queue is empty.
    /// Callers should invoke this message in a loop until it returns `false`
    /// or for as much time is available to process messages.
    ///
    /// Returns an error if the connection is disconnected.
    /// If the disconnection in question was normal,
    ///  i.e. the result of a call to [`__sdk::DbContext::disconnect`],
    /// the returned error will be downcastable to [`__sdk::DisconnectedError`].
    ///
    /// This is a low-level primitive exposed for power users who need significant control over scheduling.
    /// Most applications should call [`Self::frame_tick`] each frame
    /// to fully exhaust the queue whenever time is available.
    pub fn advance_one_message(&self) -> __anyhow::Result<bool> {
        self.imp.advance_one_message()
    }

    /// Process one WebSocket message, potentially blocking the current thread until one is received.
    ///
    /// Returns an error if the connection is disconnected.
    /// If the disconnection in question was normal,
    ///  i.e. the result of a call to [`__sdk::DbContext::disconnect`],
    /// the returned error will be downcastable to [`__sdk::DisconnectedError`].
    ///
    /// This is a low-level primitive exposed for power users who need significant control over scheduling.
    /// Most applications should call [`Self::run_threaded`] to spawn a thread
    /// which advances the connection automatically.
    pub fn advance_one_message_blocking(&self) -> __anyhow::Result<()> {
        self.imp.advance_one_message_blocking()
    }

    /// Process one WebSocket message, `await`ing until one is received.
    ///
    /// Returns an error if the connection is disconnected.
    /// If the disconnection in question was normal,
    ///  i.e. the result of a call to [`__sdk::DbContext::disconnect`],
    /// the returned error will be downcastable to [`__sdk::DisconnectedError`].
    ///
    /// This is a low-level primitive exposed for power users who need significant control over scheduling.
    /// Most applications should call [`Self::run_async`] to run an `async` loop
    /// which advances the connection when polled.
    pub async fn advance_one_message_async(&self) -> __anyhow::Result<()> {
        self.imp.advance_one_message_async().await
    }

    /// Process all WebSocket messages waiting in the queue,
    /// then return without `await`ing or blocking the current thread.
    pub fn frame_tick(&self) -> __anyhow::Result<()> {
        self.imp.frame_tick()
    }

    /// Spawn a thread which processes WebSocket messages as they are received.
    pub fn run_threaded(&self) -> std::thread::JoinHandle<()> {
        self.imp.run_threaded()
    }

    /// Run an `async` loop which processes WebSocket messages when polled.
    pub async fn run_async(&self) -> __anyhow::Result<()> {
        self.imp.run_async().await
    }
}

impl __sdk::spacetime_module::DbConnection for DbConnection {
    fn new(imp: __sdk::db_connection::DbContextImpl<RemoteModule>) -> Self {
        Self {
            db: RemoteTables { imp: imp.clone() },
            reducers: RemoteReducers { imp: imp.clone() },
            imp,
        }
    }
}

/// A [`DbConnection`] augmented with an [`__sdk::Event`],
/// passed to various callbacks invoked by the SDK.
pub struct EventContext {
    /// Access to tables defined by the module via extension traits implemented for [`RemoteTables`].
    pub db: RemoteTables,
    /// Access to reducers defined by the module via extension traits implemented for [`RemoteReducers`].
    pub reducers: RemoteReducers,
    /// The event which caused these callbacks to run.
    pub event: __sdk::event::Event<Reducer>,
    imp: __sdk::db_connection::DbContextImpl<RemoteModule>,
}

impl __sdk::spacetime_module::InModule for EventContext {
    type Module = RemoteModule;
}

impl __sdk::db_context::DbContext for EventContext {
    type DbView = RemoteTables;
    type Reducers = RemoteReducers;

    fn db(&self) -> &Self::DbView {
        &self.db
    }
    fn reducers(&self) -> &Self::Reducers {
        &self.reducers
    }

    fn is_active(&self) -> bool {
        self.imp.is_active()
    }

    fn disconnect(&self) -> spacetimedb_sdk::anyhow::Result<()> {
        self.imp.disconnect()
    }

    type SubscriptionBuilder = __sdk::subscription::SubscriptionBuilder<RemoteModule>;

    fn subscription_builder(&self) -> Self::SubscriptionBuilder {
        __sdk::subscription::SubscriptionBuilder::new(&self.imp)
    }

    fn try_identity(&self) -> Option<__sdk::Identity> {
        self.imp.try_identity()
    }
    fn address(&self) -> __sdk::Address {
        self.imp.address()
    }
}

impl __sdk::spacetime_module::EventContext for EventContext {
    fn event(&self) -> &__sdk::event::Event<Reducer> {
        &self.event
    }
    fn new(imp: __sdk::db_connection::DbContextImpl<RemoteModule>, event: __sdk::event::Event<Reducer>) -> Self {
        Self {
            db: RemoteTables { imp: imp.clone() },
            reducers: RemoteReducers { imp: imp.clone() },
            event,
            imp,
        }
    }
}

/// A handle on a subscribed query.
// TODO: Document this better after implementing the new subscription API.
pub struct SubscriptionHandle {
    imp: __sdk::subscription::SubscriptionHandleImpl<RemoteModule>,
}

impl __sdk::spacetime_module::InModule for SubscriptionHandle {
    type Module = RemoteModule;
}

impl __sdk::spacetime_module::SubscriptionHandle for SubscriptionHandle {
    fn new(imp: __sdk::subscription::SubscriptionHandleImpl<RemoteModule>) -> Self {
        Self { imp }
    }
}

/// Alias trait for a [`__sdk::DbContext`] connected to this module,
/// with that trait's associated types bounded to this module's concrete types.
///
/// Users can use this trait as a boundary on definitions which should accept
/// either a [`DbConnection`] or an [`EventContext`] and operate on either.
pub trait RemoteDbContext:
    __sdk::DbContext<
    DbView = RemoteTables,
    Reducers = RemoteReducers,
    SubscriptionBuilder = __sdk::subscription::SubscriptionBuilder<RemoteModule>,
>
{
}
impl<
        Ctx: __sdk::DbContext<
            DbView = RemoteTables,
            Reducers = RemoteReducers,
            SubscriptionBuilder = __sdk::subscription::SubscriptionBuilder<RemoteModule>,
        >,
    > RemoteDbContext for Ctx
{
}
