//HintName: TestScheduleIssues.cs
// <auto-generated />
#nullable enable

partial struct TestScheduleIssues : SpacetimeDB.BSATN.IStructuralReadWrite
{
    public void ReadFields(System.IO.BinaryReader reader)
    {
        IdWrongType = BSATN.IdWrongType.Read(reader);
        IdCorrectType = BSATN.IdCorrectType.Read(reader);
        ScheduleAtWrongType = BSATN.ScheduleAtWrongType.Read(reader);
        ScheduleAtCorrectType = BSATN.ScheduleAtCorrectType.Read(reader);
    }

    public void WriteFields(System.IO.BinaryWriter writer)
    {
        BSATN.IdWrongType.Write(writer, IdWrongType);
        BSATN.IdCorrectType.Write(writer, IdCorrectType);
        BSATN.ScheduleAtWrongType.Write(writer, ScheduleAtWrongType);
        BSATN.ScheduleAtCorrectType.Write(writer, ScheduleAtCorrectType);
    }

    public readonly partial struct BSATN : SpacetimeDB.BSATN.IReadWrite<TestScheduleIssues>
    {
        internal static readonly SpacetimeDB.BSATN.String IdWrongType = new();
        internal static readonly SpacetimeDB.BSATN.I32 IdCorrectType = new();
        internal static readonly SpacetimeDB.BSATN.I32 ScheduleAtWrongType = new();
        internal static readonly SpacetimeDB.ScheduleAt.BSATN ScheduleAtCorrectType = new();

        public TestScheduleIssues Read(System.IO.BinaryReader reader) =>
            SpacetimeDB.BSATN.IStructuralReadWrite.Read<TestScheduleIssues>(reader);

        public void Write(System.IO.BinaryWriter writer, TestScheduleIssues value)
        {
            value.WriteFields(writer);
        }

        public SpacetimeDB.BSATN.AlgebraicType.Ref GetAlgebraicType(
            SpacetimeDB.BSATN.ITypeRegistrar registrar
        ) =>
            registrar.RegisterType<TestScheduleIssues>(
                _ => new SpacetimeDB.BSATN.AlgebraicType.Product(
                    new SpacetimeDB.BSATN.AggregateElement[]
                    {
                        new(nameof(IdWrongType), IdWrongType.GetAlgebraicType(registrar)),
                        new(nameof(IdCorrectType), IdCorrectType.GetAlgebraicType(registrar)),
                        new(
                            nameof(ScheduleAtWrongType),
                            ScheduleAtWrongType.GetAlgebraicType(registrar)
                        ),
                        new(
                            nameof(ScheduleAtCorrectType),
                            ScheduleAtCorrectType.GetAlgebraicType(registrar)
                        )
                    }
                )
            );

        SpacetimeDB.BSATN.AlgebraicType SpacetimeDB.BSATN.IReadWrite<TestScheduleIssues>.GetAlgebraicType(
            SpacetimeDB.BSATN.ITypeRegistrar registrar
        ) => GetAlgebraicType(registrar);
    }
} // TestScheduleIssues
