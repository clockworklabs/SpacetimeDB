//HintName: TestIndexIssues.cs
// <auto-generated />
#nullable enable

partial struct TestIndexIssues : SpacetimeDB.BSATN.IStructuralReadWrite
{
    public void ReadFields(System.IO.BinaryReader reader)
    {
        SelfIndexingColumn = BSATN.SelfIndexingColumn.Read(reader);
    }

    public void WriteFields(System.IO.BinaryWriter writer)
    {
        BSATN.SelfIndexingColumn.Write(writer, SelfIndexingColumn);
    }

    public readonly partial struct BSATN : SpacetimeDB.BSATN.IReadWrite<TestIndexIssues>
    {
        internal static readonly SpacetimeDB.BSATN.I32 SelfIndexingColumn = new();

        public TestIndexIssues Read(System.IO.BinaryReader reader) =>
            SpacetimeDB.BSATN.IStructuralReadWrite.Read<TestIndexIssues>(reader);

        public void Write(System.IO.BinaryWriter writer, TestIndexIssues value)
        {
            value.WriteFields(writer);
        }

        public SpacetimeDB.BSATN.AlgebraicType.Ref GetAlgebraicType(
            SpacetimeDB.BSATN.ITypeRegistrar registrar
        ) =>
            registrar.RegisterType<TestIndexIssues>(
                _ => new SpacetimeDB.BSATN.AlgebraicType.Product(
                    new SpacetimeDB.BSATN.AggregateElement[]
                    {
                        new(
                            nameof(SelfIndexingColumn),
                            SelfIndexingColumn.GetAlgebraicType(registrar)
                        )
                    }
                )
            );

        SpacetimeDB.BSATN.AlgebraicType SpacetimeDB.BSATN.IReadWrite<TestIndexIssues>.GetAlgebraicType(
            SpacetimeDB.BSATN.ITypeRegistrar registrar
        ) => GetAlgebraicType(registrar);
    }
} // TestIndexIssues
