//HintName: TestAutoIncNotInteger.cs
// <auto-generated />
#nullable enable

partial struct TestAutoIncNotInteger : SpacetimeDB.BSATN.IStructuralReadWrite
{
    public void ReadFields(System.IO.BinaryReader reader)
    {
        AutoIncField = BSATN.AutoIncField.Read(reader);
        IdentityField = BSATN.IdentityField.Read(reader);
    }

    public void WriteFields(System.IO.BinaryWriter writer)
    {
        BSATN.AutoIncField.Write(writer, AutoIncField);
        BSATN.IdentityField.Write(writer, IdentityField);
    }

    public readonly partial struct BSATN : SpacetimeDB.BSATN.IReadWrite<TestAutoIncNotInteger>
    {
        internal static readonly SpacetimeDB.BSATN.F32 AutoIncField = new();
        internal static readonly SpacetimeDB.BSATN.String IdentityField = new();

        public TestAutoIncNotInteger Read(System.IO.BinaryReader reader) =>
            SpacetimeDB.BSATN.IStructuralReadWrite.Read<TestAutoIncNotInteger>(reader);

        public void Write(System.IO.BinaryWriter writer, TestAutoIncNotInteger value)
        {
            value.WriteFields(writer);
        }

        public SpacetimeDB.BSATN.AlgebraicType.Ref GetAlgebraicType(
            SpacetimeDB.BSATN.ITypeRegistrar registrar
        ) =>
            registrar.RegisterType<TestAutoIncNotInteger>(
                _ => new SpacetimeDB.BSATN.AlgebraicType.Product(
                    new SpacetimeDB.BSATN.AggregateElement[]
                    {
                        new(nameof(AutoIncField), AutoIncField.GetAlgebraicType(registrar)),
                        new(nameof(IdentityField), IdentityField.GetAlgebraicType(registrar))
                    }
                )
            );

        SpacetimeDB.BSATN.AlgebraicType SpacetimeDB.BSATN.IReadWrite<TestAutoIncNotInteger>.GetAlgebraicType(
            SpacetimeDB.BSATN.ITypeRegistrar registrar
        ) => GetAlgebraicType(registrar);
    }
} // TestAutoIncNotInteger
