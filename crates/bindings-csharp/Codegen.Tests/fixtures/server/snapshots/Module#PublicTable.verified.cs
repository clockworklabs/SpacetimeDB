//HintName: PublicTable.cs
// <auto-generated />
#nullable enable

partial struct PublicTable : SpacetimeDB.Internal.ITable<PublicTable>
{
    static bool SpacetimeDB.Internal.ITable<PublicTable>.HasAutoIncFields => true;

    static SpacetimeDB.Internal.Module.TableDesc SpacetimeDB.Internal.ITable<PublicTable>.MakeTableDesc(
        SpacetimeDB.BSATN.ITypeRegistrar registrar
    ) =>
        new(
            new(
                nameof(PublicTable),
                new SpacetimeDB.Internal.Module.ColumnDefWithAttrs[]
                {
                    new(
                        new(nameof(Id), BSATN.Id.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.PrimaryKeyAuto
                    ),
                    new(
                        new(nameof(ByteField), BSATN.ByteField.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(nameof(UshortField), BSATN.UshortField.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(nameof(UintField), BSATN.UintField.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(nameof(UlongField), BSATN.UlongField.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(nameof(UInt128Field), BSATN.UInt128Field.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(nameof(U128Field), BSATN.U128Field.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(nameof(U256Field), BSATN.U256Field.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(nameof(SbyteField), BSATN.SbyteField.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(nameof(ShortField), BSATN.ShortField.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(nameof(IntField), BSATN.IntField.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(nameof(LongField), BSATN.LongField.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(nameof(Int128Field), BSATN.Int128Field.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(nameof(I128Field), BSATN.I128Field.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(nameof(I256Field), BSATN.I256Field.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(nameof(BoolField), BSATN.BoolField.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(nameof(FloatField), BSATN.FloatField.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(nameof(DoubleField), BSATN.DoubleField.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(nameof(StringField), BSATN.StringField.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(nameof(IdentityField), BSATN.IdentityField.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(nameof(AddressField), BSATN.AddressField.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(
                            nameof(CustomStructField),
                            BSATN.CustomStructField.GetAlgebraicType(registrar)
                        ),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(
                            nameof(CustomClassField),
                            BSATN.CustomClassField.GetAlgebraicType(registrar)
                        ),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(
                            nameof(CustomEnumField),
                            BSATN.CustomEnumField.GetAlgebraicType(registrar)
                        ),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(
                            nameof(CustomTaggedEnumField),
                            BSATN.CustomTaggedEnumField.GetAlgebraicType(registrar)
                        ),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(nameof(ListField), BSATN.ListField.GetAlgebraicType(registrar)),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(
                            nameof(DictionaryField),
                            BSATN.DictionaryField.GetAlgebraicType(registrar)
                        ),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(
                            nameof(NullableValueField),
                            BSATN.NullableValueField.GetAlgebraicType(registrar)
                        ),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(
                            nameof(NullableReferenceField),
                            BSATN.NullableReferenceField.GetAlgebraicType(registrar)
                        ),
                        SpacetimeDB.ColumnAttrs.UnSet
                    ),
                    new(
                        new(
                            nameof(ComplexNestedField),
                            BSATN.ComplexNestedField.GetAlgebraicType(registrar)
                        ),
                        SpacetimeDB.ColumnAttrs.UnSet
                    )
                },
                false,
                null
            ),
            (SpacetimeDB.BSATN.AlgebraicType.Ref)new BSATN().GetAlgebraicType(registrar)
        );

    static SpacetimeDB.Internal.Filter SpacetimeDB.Internal.ITable<PublicTable>.CreateFilter() =>
        new(
            [
                new(nameof(Id), (w, v) => BSATN.Id.Write(w, (int)v!)),
                new(nameof(ByteField), (w, v) => BSATN.ByteField.Write(w, (byte)v!)),
                new(nameof(UshortField), (w, v) => BSATN.UshortField.Write(w, (ushort)v!)),
                new(nameof(UintField), (w, v) => BSATN.UintField.Write(w, (uint)v!)),
                new(nameof(UlongField), (w, v) => BSATN.UlongField.Write(w, (ulong)v!)),
                new(
                    nameof(UInt128Field),
                    (w, v) => BSATN.UInt128Field.Write(w, (System.UInt128)v!)
                ),
                new(nameof(U128Field), (w, v) => BSATN.U128Field.Write(w, (SpacetimeDB.U128)v!)),
                new(nameof(U256Field), (w, v) => BSATN.U256Field.Write(w, (SpacetimeDB.U256)v!)),
                new(nameof(SbyteField), (w, v) => BSATN.SbyteField.Write(w, (sbyte)v!)),
                new(nameof(ShortField), (w, v) => BSATN.ShortField.Write(w, (short)v!)),
                new(nameof(IntField), (w, v) => BSATN.IntField.Write(w, (int)v!)),
                new(nameof(LongField), (w, v) => BSATN.LongField.Write(w, (long)v!)),
                new(nameof(Int128Field), (w, v) => BSATN.Int128Field.Write(w, (System.Int128)v!)),
                new(nameof(I128Field), (w, v) => BSATN.I128Field.Write(w, (SpacetimeDB.I128)v!)),
                new(nameof(I256Field), (w, v) => BSATN.I256Field.Write(w, (SpacetimeDB.I256)v!)),
                new(nameof(BoolField), (w, v) => BSATN.BoolField.Write(w, (bool)v!)),
                new(nameof(FloatField), (w, v) => BSATN.FloatField.Write(w, (float)v!)),
                new(nameof(DoubleField), (w, v) => BSATN.DoubleField.Write(w, (double)v!)),
                new(nameof(StringField), (w, v) => BSATN.StringField.Write(w, (string)v!)),
                new(
                    nameof(IdentityField),
                    (w, v) => BSATN.IdentityField.Write(w, (SpacetimeDB.Identity)v!)
                ),
                new(
                    nameof(AddressField),
                    (w, v) => BSATN.AddressField.Write(w, (SpacetimeDB.Address)v!)
                ),
                new(
                    nameof(CustomStructField),
                    (w, v) => BSATN.CustomStructField.Write(w, (CustomStruct)v!)
                ),
                new(
                    nameof(CustomClassField),
                    (w, v) => BSATN.CustomClassField.Write(w, (CustomClass)v!)
                ),
                new(
                    nameof(CustomEnumField),
                    (w, v) => BSATN.CustomEnumField.Write(w, (CustomEnum)v!)
                ),
                new(
                    nameof(CustomTaggedEnumField),
                    (w, v) => BSATN.CustomTaggedEnumField.Write(w, (CustomTaggedEnum)v!)
                ),
                new(
                    nameof(ListField),
                    (w, v) => BSATN.ListField.Write(w, (System.Collections.Generic.List<int>)v!)
                ),
                new(
                    nameof(DictionaryField),
                    (w, v) =>
                        BSATN.DictionaryField.Write(
                            w,
                            (System.Collections.Generic.Dictionary<string, int>)v!
                        )
                ),
                new(
                    nameof(NullableValueField),
                    (w, v) => BSATN.NullableValueField.Write(w, (int?)v!)
                ),
                new(
                    nameof(NullableReferenceField),
                    (w, v) => BSATN.NullableReferenceField.Write(w, (string?)v!)
                ),
                new(
                    nameof(ComplexNestedField),
                    (w, v) =>
                        BSATN.ComplexNestedField.Write(
                            w,
                            (System.Collections.Generic.Dictionary<
                                CustomEnum,
                                System.Collections.Generic.List<int?>?
                            >?)
                                v!
                        )
                ),
            ]
        );

    public static IEnumerable<PublicTable> Iter() =>
        SpacetimeDB.Internal.ITable<PublicTable>.Iter();

    public static IEnumerable<PublicTable> Query(
        System.Linq.Expressions.Expression<Func<PublicTable, bool>> predicate
    ) => SpacetimeDB.Internal.ITable<PublicTable>.Query(predicate);

    public void Insert() => SpacetimeDB.Internal.ITable<PublicTable>.Insert(this);

    public static IEnumerable<PublicTable> FilterById(int Id) =>
        SpacetimeDB.Internal.ITable<PublicTable>.ColEq.Where(0, Id, BSATN.Id).Iter();

    public static PublicTable? FindById(int Id) =>
        FilterById(Id).Cast<PublicTable?>().SingleOrDefault();

    public static bool DeleteById(int Id) =>
        SpacetimeDB.Internal.ITable<PublicTable>.ColEq.Where(0, Id, BSATN.Id).Delete();

    public static bool UpdateById(int Id, PublicTable @this) =>
        SpacetimeDB.Internal.ITable<PublicTable>.ColEq.Where(0, Id, BSATN.Id).Update(@this);

    public static IEnumerable<PublicTable> FilterByByteField(byte ByteField) =>
        SpacetimeDB.Internal.ITable<PublicTable>.ColEq.Where(1, ByteField, BSATN.ByteField).Iter();

    public static IEnumerable<PublicTable> FilterByUshortField(ushort UshortField) =>
        SpacetimeDB
            .Internal.ITable<PublicTable>.ColEq.Where(2, UshortField, BSATN.UshortField)
            .Iter();

    public static IEnumerable<PublicTable> FilterByUintField(uint UintField) =>
        SpacetimeDB.Internal.ITable<PublicTable>.ColEq.Where(3, UintField, BSATN.UintField).Iter();

    public static IEnumerable<PublicTable> FilterByUlongField(ulong UlongField) =>
        SpacetimeDB
            .Internal.ITable<PublicTable>.ColEq.Where(4, UlongField, BSATN.UlongField)
            .Iter();

    public static IEnumerable<PublicTable> FilterByUInt128Field(System.UInt128 UInt128Field) =>
        SpacetimeDB
            .Internal.ITable<PublicTable>.ColEq.Where(5, UInt128Field, BSATN.UInt128Field)
            .Iter();

    public static IEnumerable<PublicTable> FilterByU128Field(SpacetimeDB.U128 U128Field) =>
        SpacetimeDB.Internal.ITable<PublicTable>.ColEq.Where(6, U128Field, BSATN.U128Field).Iter();

    public static IEnumerable<PublicTable> FilterByU256Field(SpacetimeDB.U256 U256Field) =>
        SpacetimeDB.Internal.ITable<PublicTable>.ColEq.Where(7, U256Field, BSATN.U256Field).Iter();

    public static IEnumerable<PublicTable> FilterBySbyteField(sbyte SbyteField) =>
        SpacetimeDB
            .Internal.ITable<PublicTable>.ColEq.Where(8, SbyteField, BSATN.SbyteField)
            .Iter();

    public static IEnumerable<PublicTable> FilterByShortField(short ShortField) =>
        SpacetimeDB
            .Internal.ITable<PublicTable>.ColEq.Where(9, ShortField, BSATN.ShortField)
            .Iter();

    public static IEnumerable<PublicTable> FilterByIntField(int IntField) =>
        SpacetimeDB.Internal.ITable<PublicTable>.ColEq.Where(10, IntField, BSATN.IntField).Iter();

    public static IEnumerable<PublicTable> FilterByLongField(long LongField) =>
        SpacetimeDB.Internal.ITable<PublicTable>.ColEq.Where(11, LongField, BSATN.LongField).Iter();

    public static IEnumerable<PublicTable> FilterByInt128Field(System.Int128 Int128Field) =>
        SpacetimeDB
            .Internal.ITable<PublicTable>.ColEq.Where(12, Int128Field, BSATN.Int128Field)
            .Iter();

    public static IEnumerable<PublicTable> FilterByI128Field(SpacetimeDB.I128 I128Field) =>
        SpacetimeDB.Internal.ITable<PublicTable>.ColEq.Where(13, I128Field, BSATN.I128Field).Iter();

    public static IEnumerable<PublicTable> FilterByI256Field(SpacetimeDB.I256 I256Field) =>
        SpacetimeDB.Internal.ITable<PublicTable>.ColEq.Where(14, I256Field, BSATN.I256Field).Iter();

    public static IEnumerable<PublicTable> FilterByBoolField(bool BoolField) =>
        SpacetimeDB.Internal.ITable<PublicTable>.ColEq.Where(15, BoolField, BSATN.BoolField).Iter();

    public static IEnumerable<PublicTable> FilterByStringField(string StringField) =>
        SpacetimeDB
            .Internal.ITable<PublicTable>.ColEq.Where(18, StringField, BSATN.StringField)
            .Iter();

    public static IEnumerable<PublicTable> FilterByIdentityField(
        SpacetimeDB.Identity IdentityField
    ) =>
        SpacetimeDB
            .Internal.ITable<PublicTable>.ColEq.Where(19, IdentityField, BSATN.IdentityField)
            .Iter();

    public static IEnumerable<PublicTable> FilterByAddressField(SpacetimeDB.Address AddressField) =>
        SpacetimeDB
            .Internal.ITable<PublicTable>.ColEq.Where(20, AddressField, BSATN.AddressField)
            .Iter();
} // PublicTable
