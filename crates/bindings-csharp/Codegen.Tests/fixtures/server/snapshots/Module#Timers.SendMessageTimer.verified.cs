//HintName: Timers.SendMessageTimer.cs
// <auto-generated />
#nullable enable

partial class Timers
{
    [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
    partial struct SendMessageTimer : SpacetimeDB.Internal.ITable<SendMessageTimer>
    {
        public void ReadFields(System.IO.BinaryReader reader)
        {
            Text = BSATN.Text.Read(reader);
            ScheduledId = BSATN.ScheduledId.Read(reader);
            ScheduledAt = BSATN.ScheduledAt.Read(reader);
        }

        public void WriteFields(System.IO.BinaryWriter writer)
        {
            BSATN.Text.Write(writer, Text);
            BSATN.ScheduledId.Write(writer, ScheduledId);
            BSATN.ScheduledAt.Write(writer, ScheduledAt);
        }

        public readonly partial struct BSATN : SpacetimeDB.BSATN.IReadWrite<Timers.SendMessageTimer>
        {
            internal static readonly SpacetimeDB.BSATN.String Text = new();
            internal static readonly SpacetimeDB.BSATN.U64 ScheduledId = new();
            internal static readonly SpacetimeDB.ScheduleAt.BSATN ScheduledAt = new();

            public Timers.SendMessageTimer Read(System.IO.BinaryReader reader) =>
                SpacetimeDB.BSATN.IStructuralReadWrite.Read<Timers.SendMessageTimer>(reader);

            public void Write(System.IO.BinaryWriter writer, Timers.SendMessageTimer value)
            {
                value.WriteFields(writer);
            }

            public SpacetimeDB.BSATN.AlgebraicType GetAlgebraicType(
                SpacetimeDB.BSATN.ITypeRegistrar registrar
            ) =>
                registrar.RegisterType<Timers.SendMessageTimer>(
                    _ => new SpacetimeDB.BSATN.AlgebraicType.Product(
                        new SpacetimeDB.BSATN.AggregateElement[]
                        {
                            new(nameof(Text), Text.GetAlgebraicType(registrar)),
                            new(nameof(ScheduledId), ScheduledId.GetAlgebraicType(registrar)),
                            new(nameof(ScheduledAt), ScheduledAt.GetAlgebraicType(registrar))
                        }
                    )
                );
        }

        public ulong ScheduledId;
        public SpacetimeDB.ScheduleAt ScheduledAt;

        static IEnumerable<SpacetimeDB.Internal.TableDesc> SpacetimeDB.Internal.ITable<SendMessageTimer>.MakeTableDesc(
            SpacetimeDB.BSATN.ITypeRegistrar registrar
        ) =>
            [
                new(
                    new(
                        TableName: nameof(SpacetimeDB.Local.SendMessageTimer),
                        Columns:
                        [
                            new(nameof(Text), BSATN.Text.GetAlgebraicType(registrar)),
                            new(nameof(ScheduledId), BSATN.ScheduledId.GetAlgebraicType(registrar)),
                            new(nameof(ScheduledAt), BSATN.ScheduledAt.GetAlgebraicType(registrar))
                        ],
                        Indexes: [],
                        Constraints:
                        [
                            new(
                                nameof(SpacetimeDB.Local.SendMessageTimer),
                                1,
                                nameof(ScheduledId),
                                SpacetimeDB.Internal.ColumnAttrs.PrimaryKeyAuto
                            )
                        ],
                        Sequences: [],
                        // "system" | "user"
                        TableType: "user",
                        // "public" | "private"
                        TableAccess: "private",
                        Scheduled: nameof(SendScheduledMessage)
                    ),
                    (uint)
                        (
                            (SpacetimeDB.BSATN.AlgebraicType.Ref)
                                new BSATN().GetAlgebraicType(registrar)
                        ).Ref_
                ),
            ];
    } // SendMessageTimer
} // Timers
