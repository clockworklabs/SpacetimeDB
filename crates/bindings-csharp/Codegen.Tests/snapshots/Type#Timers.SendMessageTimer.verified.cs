//HintName: Timers.SendMessageTimer.cs

// <auto-generated />
#nullable enable

partial class Timers
{
    [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
    partial struct SendMessageTimer : SpacetimeDB.BSATN.IStructuralReadWrite
    {
        public ulong ScheduledId;
        public SpacetimeDB.ScheduleAt ScheduledAt;

        public void ReadFields(System.IO.BinaryReader reader)
        {
            Text = BSATN.Text.Read(reader);
            ScheduledId = BSATN.ScheduledId.Read(reader);
            ScheduledAt = BSATN.ScheduledAt.Read(reader);
        }

        public void WriteFields(System.IO.BinaryWriter writer)
        {
            BSATN.Text.Write(writer, Text);
            BSATN.ScheduledId.Write(writer, ScheduledId);
            BSATN.ScheduledAt.Write(writer, ScheduledAt);
        }

        public readonly partial struct BSATN : SpacetimeDB.BSATN.IReadWrite<SendMessageTimer>
        {
            internal static readonly SpacetimeDB.BSATN.String Text = new();
            internal static readonly SpacetimeDB.BSATN.U64 ScheduledId = new();
            internal static readonly SpacetimeDB.ScheduleAt.BSATN ScheduledAt = new();

            public SendMessageTimer Read(System.IO.BinaryReader reader) =>
                SpacetimeDB.BSATN.IStructuralReadWrite.Read<SendMessageTimer>(reader);

            public void Write(System.IO.BinaryWriter writer, SendMessageTimer value)
            {
                value.WriteFields(writer);
            }

            public SpacetimeDB.BSATN.AlgebraicType GetAlgebraicType(
                SpacetimeDB.BSATN.ITypeRegistrar registrar
            ) =>
                registrar.RegisterType<SendMessageTimer>(
                    typeRef => new SpacetimeDB.BSATN.AlgebraicType.Product(
                        new SpacetimeDB.BSATN.AggregateElement[]
                        {
                            new(nameof(Text), Text.GetAlgebraicType(registrar)),
                            new(nameof(ScheduledId), ScheduledId.GetAlgebraicType(registrar)),
                            new(nameof(ScheduledAt), ScheduledAt.GetAlgebraicType(registrar))
                        }
                    )
                );
        }
    } // SendMessageTimer
} // Timers
