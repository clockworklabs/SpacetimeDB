// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

/* eslint-disable */
/* tslint:disable */
import {
  AlgebraicType as __AlgebraicTypeValue,
  BinaryReader as __BinaryReader,
  BinaryWriter as __BinaryWriter,
  ConnectionId as __ConnectionId,
  Identity as __Identity,
  TimeDuration as __TimeDuration,
  Timestamp as __Timestamp,
  deepEqual as __deepEqual,
  type AlgebraicType as __AlgebraicTypeType,
  type AlgebraicTypeVariants as __AlgebraicTypeVariants,
  type TableHandle as __TableHandle,
} from '../../index';
import { RawIndexDefV9 } from './raw_index_def_v_9_type';
// Mark import as potentially unused
declare type __keep_RawIndexDefV9 = RawIndexDefV9;
import { RawConstraintDefV9 } from './raw_constraint_def_v_9_type';
// Mark import as potentially unused
declare type __keep_RawConstraintDefV9 = RawConstraintDefV9;
import { RawSequenceDefV9 } from './raw_sequence_def_v_9_type';
// Mark import as potentially unused
declare type __keep_RawSequenceDefV9 = RawSequenceDefV9;
import { RawScheduleDefV9 } from './raw_schedule_def_v_9_type';
// Mark import as potentially unused
declare type __keep_RawScheduleDefV9 = RawScheduleDefV9;
import { TableType } from './table_type_type';
// Mark import as potentially unused
declare type __keep_TableType = TableType;
import { TableAccess } from './table_access_type';
// Mark import as potentially unused
declare type __keep_TableAccess = TableAccess;

export type RawTableDefV9 = {
  name: string;
  productTypeRef: number;
  primaryKey: number[];
  indexes: RawIndexDefV9[];
  constraints: RawConstraintDefV9[];
  sequences: RawSequenceDefV9[];
  schedule: RawScheduleDefV9 | undefined;
  tableType: TableType;
  tableAccess: TableAccess;
};
let _cached_RawTableDefV9_type_value: __AlgebraicTypeType | null = null;

/**
 * An object for generated helper functions.
 */
export const RawTableDefV9 = {
  /**
   * A function which returns this type represented as an AlgebraicType.
   * This function is derived from the AlgebraicType used to generate this type.
   */
  getTypeScriptAlgebraicType(): __AlgebraicTypeType {
    if (_cached_RawTableDefV9_type_value)
      return _cached_RawTableDefV9_type_value;
    _cached_RawTableDefV9_type_value = __AlgebraicTypeValue.Product({
      elements: [],
    });
    _cached_RawTableDefV9_type_value.value.elements.push(
      { name: 'name', algebraicType: __AlgebraicTypeValue.String },
      { name: 'productTypeRef', algebraicType: __AlgebraicTypeValue.U32 },
      {
        name: 'primaryKey',
        algebraicType: __AlgebraicTypeValue.Array(__AlgebraicTypeValue.U16),
      },
      {
        name: 'indexes',
        algebraicType: __AlgebraicTypeValue.Array(
          RawIndexDefV9.getTypeScriptAlgebraicType()
        ),
      },
      {
        name: 'constraints',
        algebraicType: __AlgebraicTypeValue.Array(
          RawConstraintDefV9.getTypeScriptAlgebraicType()
        ),
      },
      {
        name: 'sequences',
        algebraicType: __AlgebraicTypeValue.Array(
          RawSequenceDefV9.getTypeScriptAlgebraicType()
        ),
      },
      {
        name: 'schedule',
        algebraicType: __AlgebraicTypeValue.createOptionType(
          RawScheduleDefV9.getTypeScriptAlgebraicType()
        ),
      },
      {
        name: 'tableType',
        algebraicType: TableType.getTypeScriptAlgebraicType(),
      },
      {
        name: 'tableAccess',
        algebraicType: TableAccess.getTypeScriptAlgebraicType(),
      }
    );
    return _cached_RawTableDefV9_type_value;
  },

  serialize(writer: __BinaryWriter, value: RawTableDefV9): void {
    __AlgebraicTypeValue.serializeValue(
      writer,
      RawTableDefV9.getTypeScriptAlgebraicType(),
      value
    );
  },

  deserialize(reader: __BinaryReader): RawTableDefV9 {
    return __AlgebraicTypeValue.deserializeValue(
      reader,
      RawTableDefV9.getTypeScriptAlgebraicType()
    );
  },
};

export default RawTableDefV9;
