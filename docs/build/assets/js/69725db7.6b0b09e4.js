"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9813],{5997:(e,s,l)=>{l.r(s),l.d(s,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>t});const n=JSON.parse('{"id":"Internals/SATS-JSON Data Format","title":"SATS-JSON Data Format","description":"The Spacetime Algebraic Type System JSON format defines how Spacetime AlgebraicTypes and AlgebraicValues are encoded as JSON. Algebraic types and values are JSON-encoded for transport via the HTTP Databases API and the WebSocket text protocol. Note that SATS-JSON is not self-describing, and so a SATS value represented in JSON requires knowing the value\'s schema to meaningfully understand it - for example, it\'s not possible to tell whether a JSON object with a single field is a ProductValue with one element or a SumValue.","source":"@site/docs/14-Internals/02-SATS-JSON Data Format.md","sourceDirName":"14-Internals","slug":"/sats-json","permalink":"/sats-json","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"slug":"/sats-json"},"sidebar":"sidebar","previous":{"title":"Module ABI Reference","permalink":"/webassembly-abi"},"next":{"title":"BSATN Data Format","permalink":"/bsatn"}}');var r=l(7711),c=l(6119);const a={slug:"/sats-json"},i="SATS-JSON Data Format",o={},t=[{value:"Values",id:"values",level:2},{value:"At a glance",id:"at-a-glance",level:3},{value:"<code>AlgebraicValue</code>",id:"algebraicvalue",level:3},{value:"<code>SumValue</code>",id:"sumvalue",level:3},{value:"<code>ProductValue</code>",id:"productvalue",level:3},{value:"<code>BuiltinValue</code>",id:"builtinvalue",level:3},{value:"Types",id:"types",level:2},{value:"At a glance",id:"at-a-glance-1",level:3},{value:"<code>AlgebraicType</code>",id:"algebraictype",level:4},{value:"<code>SumType</code>",id:"sumtype",level:4},{value:"<code>ProductType</code>",id:"producttype",level:3},{value:"<code>BuiltinType</code>",id:"builtintype",level:3},{value:"<code>AlgebraicTypeRef</code>",id:"algebraictyperef",level:3}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",span:"span",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"sats-json-data-format",children:"SATS-JSON Data Format"})}),"\n",(0,r.jsxs)(s.p,{children:["The Spacetime Algebraic Type System JSON format defines how Spacetime ",(0,r.jsx)(s.code,{children:"AlgebraicType"}),"s and ",(0,r.jsx)(s.code,{children:"AlgebraicValue"}),"s are encoded as JSON. Algebraic types and values are JSON-encoded for transport via the ",(0,r.jsx)(s.a,{href:"/http/database",children:"HTTP Databases API"})," and the WebSocket text protocol. Note that SATS-JSON is not self-describing, and so a SATS value represented in JSON requires knowing the value's schema to meaningfully understand it - for example, it's not possible to tell whether a JSON object with a single field is a ",(0,r.jsx)(s.code,{children:"ProductValue"})," with one element or a ",(0,r.jsx)(s.code,{children:"SumValue"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"values",children:"Values"}),"\n",(0,r.jsx)(s.h3,{id:"at-a-glance",children:"At a glance"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"AlgebraicValue"})}),(0,r.jsxs)(s.td,{children:["A value whose type may be any ",(0,r.jsx)(s.a,{href:"#algebraictype",children:(0,r.jsx)(s.code,{children:"AlgebraicType"})}),"."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"SumValue"})}),(0,r.jsxs)(s.td,{children:["A value whose type is a ",(0,r.jsx)(s.a,{href:"#sumtype",children:(0,r.jsx)(s.code,{children:"SumType"})}),"."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"ProductValue"})}),(0,r.jsxs)(s.td,{children:["A value whose type is a ",(0,r.jsx)(s.a,{href:"#producttype",children:(0,r.jsx)(s.code,{children:"ProductType"})}),"."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"BuiltinValue"})}),(0,r.jsxs)(s.td,{children:["A value whose type is a ",(0,r.jsx)(s.a,{href:"#builtintype",children:(0,r.jsx)(s.code,{children:"BuiltinType"})}),"."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"algebraicvalue",children:(0,r.jsx)(s.code,{children:"AlgebraicValue"})}),"\n",(0,r.jsx)(r.Fragment,{children:(0,r.jsx)(s.pre,{className:"shiki spacetime-dark",style:{backgroundColor:"var(--clockworklabs-code-background-color)",color:"#F8F8F2"},tabIndex:"0",children:(0,r.jsx)(s.code,{children:(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"SumValue | ProductValue | BuiltinValue"})})})})}),"\n",(0,r.jsx)(s.h3,{id:"sumvalue",children:(0,r.jsx)(s.code,{children:"SumValue"})}),"\n",(0,r.jsxs)(s.p,{children:["An instance of a ",(0,r.jsx)(s.a,{href:"#sumtype",children:(0,r.jsx)(s.code,{children:"SumType"})}),". ",(0,r.jsx)(s.code,{children:"SumValue"}),"s are encoded as a JSON object with a single key, a non-negative integer tag which identifies the variant. The value associated with this key is the variant data. Variants which hold no data will have an empty array as their value."]}),"\n",(0,r.jsxs)(s.p,{children:["The tag is an index into the ",(0,r.jsx)(s.a,{href:"#sumtype",children:(0,r.jsx)(s.code,{children:"SumType.variants"})})," array of the value's ",(0,r.jsx)(s.a,{href:"#sumtype",children:(0,r.jsx)(s.code,{children:"SumType"})}),"."]}),"\n",(0,r.jsx)(r.Fragment,{children:(0,r.jsx)(s.pre,{className:"shiki spacetime-dark",style:{backgroundColor:"var(--clockworklabs-code-background-color)",color:"#F8F8F2"},tabIndex:"0",children:(0,r.jsxs)(s.code,{children:[(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"{"})}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'    "'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"<tag>"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{children:" "}),(0,r.jsx)(s.span,{style:{color:"#FF5555",fontStyle:"italic",textDecoration:"underline"},children:"AlgebraicValue"})]}),"\n",(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"}"})})]})})}),"\n",(0,r.jsx)(s.p,{children:"The tag may also be the name of one of the variants."}),"\n",(0,r.jsx)(s.h3,{id:"productvalue",children:(0,r.jsx)(s.code,{children:"ProductValue"})}),"\n",(0,r.jsxs)(s.p,{children:["An instance of a ",(0,r.jsx)(s.a,{href:"#producttype",children:(0,r.jsx)(s.code,{children:"ProductType"})}),". ",(0,r.jsx)(s.code,{children:"ProductValue"}),"s are encoded as JSON arrays. Each element of the ",(0,r.jsx)(s.code,{children:"ProductValue"})," array is of the type of the corresponding index in the ",(0,r.jsx)(s.a,{href:"#producttype",children:(0,r.jsx)(s.code,{children:"ProductType.elements"})})," array of the value's ",(0,r.jsx)(s.a,{href:"#producttype",children:(0,r.jsx)(s.code,{children:"ProductType"})}),"."]}),"\n",(0,r.jsx)(r.Fragment,{children:(0,r.jsx)(s.pre,{className:"shiki spacetime-dark",style:{backgroundColor:"var(--clockworklabs-code-background-color)",color:"#F8F8F2"},tabIndex:"0",children:(0,r.jsx)(s.code,{children:(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"array<AlgebraicValue>"})})})})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"ProductValue"}),"s may also be encoded as a JSON object with the keys as the field\nnames of the ",(0,r.jsx)(s.code,{children:"ProductValue"})," and the values as the corresponding\n",(0,r.jsx)(s.code,{children:"AlgebraicValue"}),"s."]}),"\n",(0,r.jsx)(s.h3,{id:"builtinvalue",children:(0,r.jsx)(s.code,{children:"BuiltinValue"})}),"\n",(0,r.jsxs)(s.p,{children:["An instance of a ",(0,r.jsx)(s.a,{href:"#builtintype",children:(0,r.jsx)(s.code,{children:"BuiltinType"})}),". ",(0,r.jsx)(s.code,{children:"BuiltinValue"}),"s are encoded as JSON values of corresponding types."]}),"\n",(0,r.jsx)(r.Fragment,{children:(0,r.jsx)(s.pre,{className:"shiki spacetime-dark",style:{backgroundColor:"var(--clockworklabs-code-background-color)",color:"#F8F8F2"},tabIndex:"0",children:(0,r.jsx)(s.code,{children:(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"boolean | number | string | array<AlgebraicValue> | map<AlgebraicValue, AlgebraicValue>"})})})})}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:(0,r.jsx)(s.a,{href:"#builtintype",children:(0,r.jsx)(s.code,{children:"BuiltinType"})})}),(0,r.jsx)(s.th,{children:"JSON type"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"Bool"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"boolean"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Integer types"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"number"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Float types"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"number"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"String"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"string"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Array types"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"array<AlgebraicValue>"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Map types"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"map<AlgebraicValue, AlgebraicValue>"})})]})]})]}),"\n",(0,r.jsxs)(s.p,{children:["All SATS integer types are encoded as JSON ",(0,r.jsx)(s.code,{children:"number"}),"s, so values of 64-bit and 128-bit integer types may lose precision when encoding values larger than 2\u2075\xb2."]}),"\n",(0,r.jsx)(s.h2,{id:"types",children:"Types"}),"\n",(0,r.jsxs)(s.p,{children:["All SATS types are JSON-encoded by converting them to an ",(0,r.jsx)(s.code,{children:"AlgebraicValue"}),", then JSON-encoding that meta-value."]}),"\n",(0,r.jsx)(s.h3,{id:"at-a-glance-1",children:"At a glance"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#algebraictype",children:(0,r.jsx)(s.code,{children:"AlgebraicType"})})}),(0,r.jsx)(s.td,{children:"Any SATS type."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#sumtype",children:(0,r.jsx)(s.code,{children:"SumType"})})}),(0,r.jsx)(s.td,{children:"Sum types, i.e. tagged unions."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#producttype",children:(0,r.jsx)(s.code,{children:"ProductType"})})}),(0,r.jsx)(s.td,{children:"Product types, i.e. structures."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#builtintype",children:(0,r.jsx)(s.code,{children:"BuiltinType"})})}),(0,r.jsx)(s.td,{children:"Built-in and primitive types, including booleans, numbers, strings, arrays and maps."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#algebraictyperef",children:(0,r.jsx)(s.code,{children:"AlgebraicTypeRef"})})}),(0,r.jsx)(s.td,{children:"An indirect reference to a type, used to implement recursive types."})]})]})]}),"\n",(0,r.jsx)(s.h4,{id:"algebraictype",children:(0,r.jsx)(s.code,{children:"AlgebraicType"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"AlgebraicType"})," is the most general meta-type in the Spacetime Algebraic Type System. Any SATS type can be represented as an ",(0,r.jsx)(s.code,{children:"AlgebraicType"}),". ",(0,r.jsx)(s.code,{children:"AlgebraicType"})," is encoded as a tagged union, with variants for ",(0,r.jsx)(s.a,{href:"#sumtype",children:(0,r.jsx)(s.code,{children:"SumType"})}),", ",(0,r.jsx)(s.a,{href:"#producttype",children:(0,r.jsx)(s.code,{children:"ProductType"})}),", ",(0,r.jsx)(s.a,{href:"#builtintype",children:(0,r.jsx)(s.code,{children:"BuiltinType"})})," and ",(0,r.jsx)(s.a,{href:"#algebraictyperef",children:(0,r.jsx)(s.code,{children:"AlgebraicTypeRef"})}),"."]}),"\n",(0,r.jsx)(r.Fragment,{children:(0,r.jsx)(s.pre,{className:"shiki spacetime-dark",style:{backgroundColor:"var(--clockworklabs-code-background-color)",color:"#F8F8F2"},tabIndex:"0",children:(0,r.jsxs)(s.code,{children:[(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"{ "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"Sum"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{children:" "}),(0,r.jsx)(s.span,{style:{color:"#FF5555",fontStyle:"italic",textDecoration:"underline"},children:"SumType"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" }"})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"| { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"Product"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{children:" "}),(0,r.jsx)(s.span,{style:{color:"#FF5555",fontStyle:"italic",textDecoration:"underline"},children:"ProductType"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" }"})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"| { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"Builtin"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{children:" "}),(0,r.jsx)(s.span,{style:{color:"#FF5555",fontStyle:"italic",textDecoration:"underline"},children:"BuiltinType"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" }"})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"| { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"Ref"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{children:" "}),(0,r.jsx)(s.span,{style:{color:"#FF5555",fontStyle:"italic",textDecoration:"underline"},children:"AlgebraicTypeRef"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" }"})]})]})})}),"\n",(0,r.jsx)(s.h4,{id:"sumtype",children:(0,r.jsx)(s.code,{children:"SumType"})}),"\n",(0,r.jsxs)(s.p,{children:["The meta-type ",(0,r.jsx)(s.code,{children:"SumType"})," represents sum types, also called tagged unions or Rust ",(0,r.jsx)(s.code,{children:"enum"}),"s. A sum type has some number of variants, each of which has an ",(0,r.jsx)(s.code,{children:"AlgebraicType"})," of variant data, and an optional string discriminant. For each instance, exactly one variant will be active. The instance will contain only that variant's data."]}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(s.code,{children:"SumType"})," with zero variants is called an empty type or never type because it is impossible to construct an instance."]}),"\n",(0,r.jsxs)(s.p,{children:["Instances of ",(0,r.jsx)(s.code,{children:"SumType"}),"s are ",(0,r.jsxs)(s.a,{href:"#sumvalue",children:[(0,r.jsx)(s.code,{children:"SumValue"}),"s"]}),", and store a tag which identifies the active variant."]}),"\n",(0,r.jsx)(r.Fragment,{children:(0,r.jsx)(s.pre,{className:"shiki spacetime-dark",style:{backgroundColor:"var(--clockworklabs-code-background-color)",color:"#F8F8F2"},tabIndex:"0",children:(0,r.jsxs)(s.code,{children:[(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"#6272A4"},children:"// SumType:"})}),"\n",(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"{"})}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'    "'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"variants"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{children:" "}),(0,r.jsx)(s.span,{style:{color:"#FF5555",fontStyle:"italic",textDecoration:"underline"},children:"array<SumTypeVariant>"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:","})]}),"\n",(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"}"})}),"\n",(0,r.jsx)(s.span,{className:"line"}),"\n",(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"#6272A4"},children:"// SumTypeVariant:"})}),"\n",(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"{"})}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'    "'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"algebraic_type"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{children:" "}),(0,r.jsx)(s.span,{style:{color:"#FF5555",fontStyle:"italic",textDecoration:"underline"},children:"AlgebraicType"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:","})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'    "'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"name"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"some"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{children:" "}),(0,r.jsx)(s.span,{style:{color:"#FF5555",fontStyle:"italic",textDecoration:"underline"},children:"string"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" } "}),(0,r.jsx)(s.span,{style:{color:"#FF5555",fontStyle:"italic",textDecoration:"underline"},children:"|"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"none"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" [] }"})]}),"\n",(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"}"})})]})})}),"\n",(0,r.jsx)(s.h3,{id:"producttype",children:(0,r.jsx)(s.code,{children:"ProductType"})}),"\n",(0,r.jsxs)(s.p,{children:["The meta-type ",(0,r.jsx)(s.code,{children:"ProductType"})," represents product types, also called structs or tuples. A product type has some number of fields, each of which has an ",(0,r.jsx)(s.code,{children:"AlgebraicType"})," of field data, and an optional string field name. Each instance will contain data for all of the product type's fields."]}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(s.code,{children:"ProductType"})," with zero fields is called a unit type because it has a single instance, the unit, which is empty."]}),"\n",(0,r.jsxs)(s.p,{children:["Instances of ",(0,r.jsx)(s.code,{children:"ProductType"}),"s are ",(0,r.jsxs)(s.a,{href:"#productvalue",children:[(0,r.jsx)(s.code,{children:"ProductValue"}),"s"]}),", and store an array of field data."]}),"\n",(0,r.jsx)(r.Fragment,{children:(0,r.jsx)(s.pre,{className:"shiki spacetime-dark",style:{backgroundColor:"var(--clockworklabs-code-background-color)",color:"#F8F8F2"},tabIndex:"0",children:(0,r.jsxs)(s.code,{children:[(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"#6272A4"},children:"// ProductType:"})}),"\n",(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"{"})}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'    "'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"elements"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{children:" "}),(0,r.jsx)(s.span,{style:{color:"#FF5555",fontStyle:"italic",textDecoration:"underline"},children:"array<ProductTypeElement>"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:","})]}),"\n",(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"}"})}),"\n",(0,r.jsx)(s.span,{className:"line"}),"\n",(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"#6272A4"},children:"// ProductTypeElement:"})}),"\n",(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"{"})}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'    "'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"algebraic_type"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{children:" "}),(0,r.jsx)(s.span,{style:{color:"#FF5555",fontStyle:"italic",textDecoration:"underline"},children:"AlgebraicType"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:","})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'    "'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"name"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"some"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{children:" "}),(0,r.jsx)(s.span,{style:{color:"#FF5555",fontStyle:"italic",textDecoration:"underline"},children:"string"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" } "}),(0,r.jsx)(s.span,{style:{color:"#FF5555",fontStyle:"italic",textDecoration:"underline"},children:"|"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"none"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" [] }"})]}),"\n",(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"}"})})]})})}),"\n",(0,r.jsx)(s.h3,{id:"builtintype",children:(0,r.jsx)(s.code,{children:"BuiltinType"})}),"\n",(0,r.jsxs)(s.p,{children:["The meta-type ",(0,r.jsx)(s.code,{children:"BuiltinType"})," represents SATS primitive types: booleans, integers, floating-point numbers, strings, arrays and maps. ",(0,r.jsx)(s.code,{children:"BuiltinType"})," is encoded as a tagged union, with a variant for each SATS primitive type."]}),"\n",(0,r.jsx)(s.p,{children:"SATS integer types are identified by their signedness and width in bits. SATS supports the same set of integer types as Rust, i.e. 8, 16, 32, 64 and 128-bit signed and unsigned integers."}),"\n",(0,r.jsxs)(s.p,{children:["SATS floating-point number types are identified by their width in bits. SATS supports 32 and 64-bit floats, which correspond to ",(0,r.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/IEEE_754",children:"IEEE 754"})," single- and double-precision binary floats, respectively."]}),"\n",(0,r.jsx)(s.p,{children:"SATS array and map types are homogeneous, meaning that each array has a single element type to which all its elements must conform, and each map has a key type and a value type to which all of its keys and values must conform."}),"\n",(0,r.jsx)(r.Fragment,{children:(0,r.jsx)(s.pre,{className:"shiki spacetime-dark",style:{backgroundColor:"var(--clockworklabs-code-background-color)",color:"#F8F8F2"},tabIndex:"0",children:(0,r.jsxs)(s.code,{children:[(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"{ "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"Bool"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" [] }"})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"| { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"I8"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" [] }"})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"| { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"U8"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" [] }"})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"| { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"I16"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" [] }"})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"| { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"U16"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" [] }"})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"| { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"I32"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" [] }"})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"| { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"U32"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" [] }"})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"| { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"I64"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" [] }"})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"| { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"U64"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" [] }"})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"| { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"I128"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" [] }"})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"| { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"U128"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" [] }"})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"| { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"F32"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" [] }"})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"| { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"F64"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" [] }"})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"| { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"String"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" [] }"})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"| { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"Array"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{children:" "}),(0,r.jsx)(s.span,{style:{color:"#FF5555",fontStyle:"italic",textDecoration:"underline"},children:"AlgebraicType"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" }"})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"| { "}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"Map"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:" {"})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'      "'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"key_ty"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{children:" "}),(0,r.jsx)(s.span,{style:{color:"#FF5555",fontStyle:"italic",textDecoration:"underline"},children:"AlgebraicType"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:","})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'      "'}),(0,r.jsx)(s.span,{style:{color:"#8BE9FD"},children:"ty"}),(0,r.jsx)(s.span,{style:{color:"#8BE9FE"},children:'"'}),(0,r.jsx)(s.span,{style:{color:"#FF79C6"},children:":"}),(0,r.jsx)(s.span,{children:" "}),(0,r.jsx)(s.span,{style:{color:"#FF5555",fontStyle:"italic",textDecoration:"underline"},children:"AlgebraicType"}),(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:","})]}),"\n",(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"#F8F8F2"},children:"  } }"})})]})})}),"\n",(0,r.jsx)(s.h3,{id:"algebraictyperef",children:(0,r.jsx)(s.code,{children:"AlgebraicTypeRef"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"AlgebraicTypeRef"}),"s are JSON-encoded as non-negative integers. These are indices into a typespace, like the one returned by the ",(0,r.jsxs)(s.a,{href:"/http/database#get-v1databasename_or_identityschema",children:[(0,r.jsx)(s.code,{children:"GET /v1/database/:name_or_identity/schema"})," HTTP endpoint"]}),"."]})]})}function h(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},6119:(e,s,l)=>{l.d(s,{R:()=>a,x:()=>i});var n=l(3303);const r={},c=n.createContext(r);function a(e){const s=n.useContext(c);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(c.Provider,{value:s},e.children)}}}]);