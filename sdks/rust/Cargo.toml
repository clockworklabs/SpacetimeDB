[package]
name = "spacetimedb-sdk"
version.workspace = true
edition.workspace = true
license-file = "LICENSE"
description = "A Rust SDK for clients to interface with SpacetimeDB"
rust-version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = []
web = [
    "dep:getrandom",
    "dep:gloo-console",
    "dep:gloo-storage",
    "dep:rustls-pki-types",
    "dep:tokio-tungstenite-wasm",
    "dep:wasm-bindgen",
    "dep:wasm-bindgen-futures",
    "dep:web-sys",
]

[dependencies]
spacetimedb-data-structures.workspace = true
spacetimedb-sats.workspace = true
spacetimedb-lib = { workspace = true, features = ["serde", "metrics_impls"]}
spacetimedb-client-api-messages.workspace = true
spacetimedb-metrics.workspace = true

thiserror.workspace = true
anymap.workspace = true
base64.workspace = true
brotli.workspace = true
bytes.workspace = true
flate2.workspace = true
futures.workspace = true
futures-channel.workspace = true
http.workspace = true
log.workspace = true
once_cell.workspace = true
prometheus.workspace = true
rand.workspace = true

getrandom = { version = "0.3.2", features = ["wasm_js"], optional = true }
gloo-console = { version = "0.3.0", optional = true }
gloo-storage = { version = "0.3.0", optional = true }
rustls-pki-types = { version = "1.12.0", features = ["web"], optional = true }
tokio-tungstenite-wasm = { version = "0.6.0", optional = true }
wasm-bindgen = { version = "0.2.100", optional = true }
wasm-bindgen-futures = { version = "0.4.45", optional = true }
web-sys = { version = "0.3.77", features = [
    "Document", "HtmlDocument", "Window"
], optional = true}

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
home.workspace = true
tokio.workspace = true
tokio-tungstenite.workspace = true

[target.'cfg(target_arch = "wasm32")'.dependencies]
tokio = { version = "1.37", default-features = false, features = [
    "rt", "macros", "sync", "io-util"
] }

[dev-dependencies]
# for quickstart-chat and cursive-chat examples
hex.workspace = true
# for cursive-chat example
cursive.workspace = true
futures-channel.workspace = true

# for tests
spacetimedb-testing = { path = "../../crates/testing" }

[lints]
workspace = true
