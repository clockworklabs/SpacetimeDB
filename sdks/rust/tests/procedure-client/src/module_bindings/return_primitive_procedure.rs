// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#![allow(unused, clippy::all)]
use spacetimedb_sdk::__codegen::{self as __sdk, __lib, __sats, __ws};

#[derive(__lib::ser::Serialize, __lib::de::Deserialize, Clone, PartialEq, Debug)]
#[sats(crate = __lib)]
struct ReturnPrimitiveArgs {
    pub lhs: u32,
    pub rhs: u32,
}

impl __sdk::InModule for ReturnPrimitiveArgs {
    type Module = super::RemoteModule;
}

#[allow(non_camel_case_types)]
/// Extension trait for access to the procedure `return_primitive`.
///
/// Implemented for [`super::RemoteProcedures`].
pub trait return_primitive {
    fn return_primitive(&self, lhs: u32, rhs: u32) {
        self.return_primitive_then(lhs, rhs, |_, _| {});
    }

    fn return_primitive_then(
        &self,
        lhs: u32,
        rhs: u32,

        __callback: impl FnOnce(&super::ProcedureEventContext, Result<u32, __sdk::InternalError>) + Send + 'static,
    );
}

impl return_primitive for super::RemoteProcedures {
    fn return_primitive_then(
        &self,
        lhs: u32,
        rhs: u32,

        __callback: impl FnOnce(&super::ProcedureEventContext, Result<u32, __sdk::InternalError>) + Send + 'static,
    ) {
        self.imp.invoke_procedure_with_callback::<_, u32>(
            "return_primitive",
            ReturnPrimitiveArgs { lhs, rhs },
            __callback,
        );
    }
}
