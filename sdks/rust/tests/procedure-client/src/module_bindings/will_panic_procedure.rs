// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#![allow(unused, clippy::all)]
use spacetimedb_sdk::__codegen::{self as __sdk, __lib, __sats, __ws};

#[derive(__lib::ser::Serialize, __lib::de::Deserialize, Clone, PartialEq, Debug)]
#[sats(crate = __lib)]
struct WillPanicArgs {}

impl __sdk::InModule for WillPanicArgs {
    type Module = super::RemoteModule;
}

#[allow(non_camel_case_types)]
/// Extension trait for access to the procedure `will_panic`.
///
/// Implemented for [`super::RemoteProcedures`].
pub trait will_panic {
    fn will_panic(&self) {
        self.will_panic_then(|_, _| {});
    }

    fn will_panic_then(
        &self,

        __callback: impl FnOnce(&super::ProcedureEventContext, Result<(), __sdk::InternalError>) + Send + 'static,
    );
}

impl will_panic for super::RemoteProcedures {
    fn will_panic_then(
        &self,

        __callback: impl FnOnce(&super::ProcedureEventContext, Result<(), __sdk::InternalError>) + Send + 'static,
    ) {
        self.imp
            .invoke_procedure_with_callback::<_, ()>("will_panic", WillPanicArgs {}, __callback);
    }
}
