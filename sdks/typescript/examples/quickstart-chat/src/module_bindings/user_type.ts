// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.4.0 (commit c9276358a10fa5dcbee7683260a68b8f9aef3361).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType as __AlgebraicTypeValue,
  BinaryReader as __BinaryReader,
  BinaryWriter as __BinaryWriter,
  ConnectionId as __ConnectionId,
  DbConnectionBuilder as __DbConnectionBuilder,
  DbConnectionImpl as __DbConnectionImpl,
  Identity as __Identity,
  SubscriptionBuilderImpl as __SubscriptionBuilderImpl,
  TableCache as __TableCache,
  TimeDuration as __TimeDuration,
  Timestamp as __Timestamp,
  deepEqual as __deepEqual,
  type AlgebraicType as __AlgebraicTypeType,
  type AlgebraicTypeVariants as __AlgebraicTypeVariants,
  type CallReducerFlags as __CallReducerFlags,
  type ErrorContextInterface as __ErrorContextInterface,
  type Event as __Event,
  type EventContextInterface as __EventContextInterface,
  type ReducerEventContextInterface as __ReducerEventContextInterface,
  type SubscriptionEventContextInterface as __SubscriptionEventContextInterface,
} from '@clockworklabs/spacetimedb-sdk';

export type User = {
  identity: __Identity;
  name: string | undefined;
  online: boolean;
};
/**
 * An object for generated helper functions.
 */
export const User = {
  /**
   * A function which returns this type represented as an AlgebraicType.
   * This function is derived from the AlgebraicType used to generate this type.
   */
  getTypeScriptAlgebraicType(): __AlgebraicTypeType {
    return __AlgebraicTypeValue.Product({
      elements: [
        {
          name: 'identity',
          algebraicType: __AlgebraicTypeValue.createIdentityType(),
        },
        {
          name: 'name',
          algebraicType: __AlgebraicTypeValue.createOptionType(
            __AlgebraicTypeValue.String
          ),
        },
        { name: 'online', algebraicType: __AlgebraicTypeValue.Bool },
      ],
    });
  },

  serialize(writer: __BinaryWriter, value: User): void {
    __AlgebraicTypeValue.serializeValue(
      writer,
      User.getTypeScriptAlgebraicType(),
      value
    );
  },

  deserialize(reader: __BinaryReader): User {
    return __AlgebraicTypeValue.deserializeValue(
      reader,
      User.getTypeScriptAlgebraicType()
    );
  },
};

export default User;
