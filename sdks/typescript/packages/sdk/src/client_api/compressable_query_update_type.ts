// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.4.0 (commit c9276358a10fa5dcbee7683260a68b8f9aef3361).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType as __AlgebraicTypeValue,
  BinaryReader as __BinaryReader,
  BinaryWriter as __BinaryWriter,
  ConnectionId as __ConnectionId,
  DbConnectionBuilder as __DbConnectionBuilder,
  DbConnectionImpl as __DbConnectionImpl,
  Identity as __Identity,
  SubscriptionBuilderImpl as __SubscriptionBuilderImpl,
  TableCache as __TableCache,
  TimeDuration as __TimeDuration,
  Timestamp as __Timestamp,
  deepEqual as __deepEqual,
  type AlgebraicType as __AlgebraicTypeType,
  type AlgebraicTypeVariants as __AlgebraicTypeVariants,
  type CallReducerFlags as __CallReducerFlags,
  type ErrorContextInterface as __ErrorContextInterface,
  type Event as __Event,
  type EventContextInterface as __EventContextInterface,
  type ReducerEventContextInterface as __ReducerEventContextInterface,
  type SubscriptionEventContextInterface as __SubscriptionEventContextInterface,
} from '../index';
import { QueryUpdate } from './query_update_type';

import * as CompressableQueryUpdateVariants from './compressable_query_update_variants';

// The tagged union or sum type for the algebraic type `CompressableQueryUpdate`.
export type CompressableQueryUpdate =
  | CompressableQueryUpdateVariants.Uncompressed
  | CompressableQueryUpdateVariants.Brotli
  | CompressableQueryUpdateVariants.Gzip;

// A value with helper functions to construct the type.
export const CompressableQueryUpdate = {
  // Helper functions for constructing each variant of the tagged union.
  // ```
  // const foo = Foo.A(42);
  // assert!(foo.tag === "A");
  // assert!(foo.value === 42);
  // ```
  Uncompressed: (value: QueryUpdate): CompressableQueryUpdate => ({
    tag: 'Uncompressed',
    value,
  }),
  Brotli: (value: Uint8Array): CompressableQueryUpdate => ({
    tag: 'Brotli',
    value,
  }),
  Gzip: (value: Uint8Array): CompressableQueryUpdate => ({
    tag: 'Gzip',
    value,
  }),

  getTypeScriptAlgebraicType(): __AlgebraicTypeType {
    return __AlgebraicTypeValue.Sum({
      variants: [
        {
          name: 'Uncompressed',
          algebraicType: QueryUpdate.getTypeScriptAlgebraicType(),
        },
        {
          name: 'Brotli',
          algebraicType: __AlgebraicTypeValue.Array(__AlgebraicTypeValue.U8),
        },
        {
          name: 'Gzip',
          algebraicType: __AlgebraicTypeValue.Array(__AlgebraicTypeValue.U8),
        },
      ],
    });
  },

  serialize(writer: __BinaryWriter, value: CompressableQueryUpdate): void {
    __AlgebraicTypeValue.serializeValue(
      writer,
      CompressableQueryUpdate.getTypeScriptAlgebraicType(),
      value
    );
  },

  deserialize(reader: __BinaryReader): CompressableQueryUpdate {
    return __AlgebraicTypeValue.deserializeValue(
      reader,
      CompressableQueryUpdate.getTypeScriptAlgebraicType()
    );
  },
};

export default CompressableQueryUpdate;
