// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.4.0 (commit c9276358a10fa5dcbee7683260a68b8f9aef3361).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType as __AlgebraicTypeValue,
  BinaryReader as __BinaryReader,
  BinaryWriter as __BinaryWriter,
  ConnectionId as __ConnectionId,
  DbConnectionBuilder as __DbConnectionBuilder,
  DbConnectionImpl as __DbConnectionImpl,
  Identity as __Identity,
  SubscriptionBuilderImpl as __SubscriptionBuilderImpl,
  TableCache as __TableCache,
  TimeDuration as __TimeDuration,
  Timestamp as __Timestamp,
  deepEqual as __deepEqual,
  type AlgebraicType as __AlgebraicTypeType,
  type AlgebraicTypeVariants as __AlgebraicTypeVariants,
  type CallReducerFlags as __CallReducerFlags,
  type ErrorContextInterface as __ErrorContextInterface,
  type Event as __Event,
  type EventContextInterface as __EventContextInterface,
  type ReducerEventContextInterface as __ReducerEventContextInterface,
  type SubscriptionEventContextInterface as __SubscriptionEventContextInterface,
} from '../index';
import { DatabaseUpdate } from './database_update_type';

import * as UpdateStatusVariants from './update_status_variants';

// The tagged union or sum type for the algebraic type `UpdateStatus`.
export type UpdateStatus =
  | UpdateStatusVariants.Committed
  | UpdateStatusVariants.Failed
  | UpdateStatusVariants.OutOfEnergy;

// A value with helper functions to construct the type.
export const UpdateStatus = {
  // Helper functions for constructing each variant of the tagged union.
  // ```
  // const foo = Foo.A(42);
  // assert!(foo.tag === "A");
  // assert!(foo.value === 42);
  // ```
  Committed: (value: DatabaseUpdate): UpdateStatus => ({
    tag: 'Committed',
    value,
  }),
  Failed: (value: string): UpdateStatus => ({ tag: 'Failed', value }),
  OutOfEnergy: { tag: 'OutOfEnergy' } as const,

  getTypeScriptAlgebraicType(): __AlgebraicTypeType {
    return __AlgebraicTypeValue.Sum({
      variants: [
        {
          name: 'Committed',
          algebraicType: DatabaseUpdate.getTypeScriptAlgebraicType(),
        },
        { name: 'Failed', algebraicType: __AlgebraicTypeValue.String },
        {
          name: 'OutOfEnergy',
          algebraicType: __AlgebraicTypeValue.Product({ elements: [] }),
        },
      ],
    });
  },

  serialize(writer: __BinaryWriter, value: UpdateStatus): void {
    __AlgebraicTypeValue.serializeValue(
      writer,
      UpdateStatus.getTypeScriptAlgebraicType(),
      value
    );
  },

  deserialize(reader: __BinaryReader): UpdateStatus {
    return __AlgebraicTypeValue.deserializeValue(
      reader,
      UpdateStatus.getTypeScriptAlgebraicType()
    );
  },
};

export default UpdateStatus;
