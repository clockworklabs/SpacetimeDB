// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.1.1 (commit bc3d453e871c797c17fdab2d772019832cd9b73e).

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void ThrowErrorHandler(ReducerEventContext ctx, string error);
        public event ThrowErrorHandler? OnThrowError;

        public void ThrowError(string error)
        {
            conn.InternalCallReducer(new Reducer.ThrowError(error), this.SetCallReducerFlags.ThrowErrorFlags);
        }

        public bool InvokeThrowError(ReducerEventContext ctx, Reducer.ThrowError args)
        {
            if (OnThrowError == null)
            {
                if (InternalOnUnhandledReducerError != null)
                {
                    switch (ctx.Event.Status)
                    {
                        case Status.Failed(var reason): InternalOnUnhandledReducerError(ctx, new Exception(reason)); break;
                        case Status.OutOfEnergy(var _): InternalOnUnhandledReducerError(ctx, new Exception("out of energy")); break;
                    }
                }
                return false;
            }
            OnThrowError(
                ctx,
                args.Error
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class ThrowError : Reducer, IReducerArgs
        {
            [DataMember(Name = "error")]
            public string Error;

            public ThrowError(string Error)
            {
                this.Error = Error;
            }

            public ThrowError()
            {
                this.Error = "";
            }

            string IReducerArgs.ReducerName => "ThrowError";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags ThrowErrorFlags;
        public void ThrowError(CallReducerFlags flags) => ThrowErrorFlags = flags;
    }
}
