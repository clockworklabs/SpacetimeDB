// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void InsertHandler(ReducerEventContext ctx, uint id);
        public event InsertHandler? OnInsert;

        public void Insert(uint id)
        {
            conn.InternalCallReducer(new Reducer.Insert(id), this.SetCallReducerFlags.InsertFlags);
        }

        public bool InvokeInsert(ReducerEventContext ctx, Reducer.Insert args)
        {
            if (OnInsert == null)
            {
                if (InternalOnUnhandledReducerError != null)
                {
                    switch (ctx.Event.Status)
                    {
                        case Status.Failed(var reason): InternalOnUnhandledReducerError(ctx, new Exception(reason)); break;
                        case Status.OutOfEnergy(var _): InternalOnUnhandledReducerError(ctx, new Exception("out of energy")); break;
                    }
                }
                return false;
            }
            OnInsert(
                ctx,
                args.Id
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class Insert : Reducer, IReducerArgs
        {
            [DataMember(Name = "id")]
            public uint Id;

            public Insert(uint Id)
            {
                this.Id = Id;
            }

            public Insert()
            {
            }

            string IReducerArgs.ReducerName => "Insert";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags InsertFlags;
        public void Insert(CallReducerFlags flags) => InsertFlags = flags;
    }
}
