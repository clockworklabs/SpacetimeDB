// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#include "ModuleBindings/Tables/UniqueU64Table.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UUniqueU64Table::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FUniqueU64Type>>();

    TSharedPtr<FTableCache<FUniqueU64Type>> UniqueU64Table = Data->GetOrAdd(TableName);
    UniqueU64Table->AddUniqueConstraint<uint64>("n", [](const FUniqueU64Type& Row) -> const uint64& {
        return Row.N; });

    N = NewObject<UUniqueU64NUniqueIndex>(this);
    N->SetCache(UniqueU64Table);

    /***/
}

FTableAppliedDiff<FUniqueU64Type> UUniqueU64Table::Update(TArray<FWithBsatn<FUniqueU64Type>> InsertsRef, TArray<FWithBsatn<FUniqueU64Type>> DeletesRef)
{
    FTableAppliedDiff<FUniqueU64Type> Diff = BaseUpdate<FUniqueU64Type>(InsertsRef, DeletesRef, Data, TableName);

    return Diff;
}

int32 UUniqueU64Table::Count() const
{
    return GetRowCountFromTable<FUniqueU64Type>(Data, TableName);
}

TArray<FUniqueU64Type> UUniqueU64Table::Iter() const
{
    return GetAllRowsFromTable<FUniqueU64Type>(Data, TableName);
}
