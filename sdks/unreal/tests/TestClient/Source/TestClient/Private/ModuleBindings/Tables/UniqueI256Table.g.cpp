// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#include "ModuleBindings/Tables/UniqueI256Table.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UUniqueI256Table::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FUniqueI256Type>>();

    TSharedPtr<FTableCache<FUniqueI256Type>> UniqueI256Table = Data->GetOrAdd(TableName);
    UniqueI256Table->AddUniqueConstraint<FSpacetimeDBInt256>("n", [](const FUniqueI256Type& Row) -> const FSpacetimeDBInt256& {
        return Row.N; });

    N = NewObject<UUniqueI256NUniqueIndex>(this);
    N->SetCache(UniqueI256Table);

    /***/
}

FTableAppliedDiff<FUniqueI256Type> UUniqueI256Table::Update(TArray<FWithBsatn<FUniqueI256Type>> InsertsRef, TArray<FWithBsatn<FUniqueI256Type>> DeletesRef)
{
    FTableAppliedDiff<FUniqueI256Type> Diff = BaseUpdate<FUniqueI256Type>(InsertsRef, DeletesRef, Data, TableName);

    return Diff;
}

int32 UUniqueI256Table::Count() const
{
    return GetRowCountFromTable<FUniqueI256Type>(Data, TableName);
}

TArray<FUniqueI256Type> UUniqueI256Table::Iter() const
{
    return GetAllRowsFromTable<FUniqueI256Type>(Data, TableName);
}
