// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#include "ModuleBindings/Tables/PkU32TwoTable.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UPkU32TwoTable::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FPkU32TwoType>>();

    TSharedPtr<FTableCache<FPkU32TwoType>> PkU32TwoTable = Data->GetOrAdd(TableName);
    PkU32TwoTable->AddUniqueConstraint<uint32>("n", [](const FPkU32TwoType& Row) -> const uint32& {
        return Row.N; });

    N = NewObject<UPkU32TwoNUniqueIndex>(this);
    N->SetCache(PkU32TwoTable);

    /***/
}

FTableAppliedDiff<FPkU32TwoType> UPkU32TwoTable::Update(TArray<FWithBsatn<FPkU32TwoType>> InsertsRef, TArray<FWithBsatn<FPkU32TwoType>> DeletesRef)
{
    FTableAppliedDiff<FPkU32TwoType> Diff = BaseUpdate<FPkU32TwoType>(InsertsRef, DeletesRef, Data, TableName);

    Diff.DeriveUpdatesByPrimaryKey<uint32>(
        [](const FPkU32TwoType& Row) 
        {
            return Row.N; 
        }
    );

    return Diff;
}

int32 UPkU32TwoTable::Count() const
{
    return GetRowCountFromTable<FPkU32TwoType>(Data, TableName);
}

TArray<FPkU32TwoType> UPkU32TwoTable::Iter() const
{
    return GetAllRowsFromTable<FPkU32TwoType>(Data, TableName);
}
