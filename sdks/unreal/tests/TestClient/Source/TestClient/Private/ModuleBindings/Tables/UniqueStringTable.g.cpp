// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#include "ModuleBindings/Tables/UniqueStringTable.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UUniqueStringTable::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FUniqueStringType>>();

    TSharedPtr<FTableCache<FUniqueStringType>> UniqueStringTable = Data->GetOrAdd(TableName);
    UniqueStringTable->AddUniqueConstraint<FString>("s", [](const FUniqueStringType& Row) -> const FString& {
        return Row.S; });

    S = NewObject<UUniqueStringSUniqueIndex>(this);
    S->SetCache(UniqueStringTable);

    /***/
}

FTableAppliedDiff<FUniqueStringType> UUniqueStringTable::Update(TArray<FWithBsatn<FUniqueStringType>> InsertsRef, TArray<FWithBsatn<FUniqueStringType>> DeletesRef)
{
    FTableAppliedDiff<FUniqueStringType> Diff = BaseUpdate<FUniqueStringType>(InsertsRef, DeletesRef, Data, TableName);

    return Diff;
}

int32 UUniqueStringTable::Count() const
{
    return GetRowCountFromTable<FUniqueStringType>(Data, TableName);
}

TArray<FUniqueStringType> UUniqueStringTable::Iter() const
{
    return GetAllRowsFromTable<FUniqueStringType>(Data, TableName);
}
