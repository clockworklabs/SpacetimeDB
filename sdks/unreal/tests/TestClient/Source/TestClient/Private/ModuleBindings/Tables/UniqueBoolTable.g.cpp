// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#include "ModuleBindings/Tables/UniqueBoolTable.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UUniqueBoolTable::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FUniqueBoolType>>();

    TSharedPtr<FTableCache<FUniqueBoolType>> UniqueBoolTable = Data->GetOrAdd(TableName);
    UniqueBoolTable->AddUniqueConstraint<bool>("b", [](const FUniqueBoolType& Row) -> const bool& {
        return Row.B; });

    B = NewObject<UUniqueBoolBUniqueIndex>(this);
    B->SetCache(UniqueBoolTable);

    /***/
}

FTableAppliedDiff<FUniqueBoolType> UUniqueBoolTable::Update(TArray<FWithBsatn<FUniqueBoolType>> InsertsRef, TArray<FWithBsatn<FUniqueBoolType>> DeletesRef)
{
    FTableAppliedDiff<FUniqueBoolType> Diff = BaseUpdate<FUniqueBoolType>(InsertsRef, DeletesRef, Data, TableName);

    return Diff;
}

int32 UUniqueBoolTable::Count() const
{
    return GetRowCountFromTable<FUniqueBoolType>(Data, TableName);
}

TArray<FUniqueBoolType> UUniqueBoolTable::Iter() const
{
    return GetAllRowsFromTable<FUniqueBoolType>(Data, TableName);
}
