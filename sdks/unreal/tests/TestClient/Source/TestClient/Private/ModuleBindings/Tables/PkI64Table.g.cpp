// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#include "ModuleBindings/Tables/PkI64Table.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UPkI64Table::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FPkI64Type>>();

    TSharedPtr<FTableCache<FPkI64Type>> PkI64Table = Data->GetOrAdd(TableName);
    PkI64Table->AddUniqueConstraint<int64>("n", [](const FPkI64Type& Row) -> const int64& {
        return Row.N; });

    N = NewObject<UPkI64NUniqueIndex>(this);
    N->SetCache(PkI64Table);

    /***/
}

FTableAppliedDiff<FPkI64Type> UPkI64Table::Update(TArray<FWithBsatn<FPkI64Type>> InsertsRef, TArray<FWithBsatn<FPkI64Type>> DeletesRef)
{
    FTableAppliedDiff<FPkI64Type> Diff = BaseUpdate<FPkI64Type>(InsertsRef, DeletesRef, Data, TableName);

    Diff.DeriveUpdatesByPrimaryKey<int64>(
        [](const FPkI64Type& Row) 
        {
            return Row.N; 
        }
    );

    return Diff;
}

int32 UPkI64Table::Count() const
{
    return GetRowCountFromTable<FPkI64Type>(Data, TableName);
}

TArray<FPkI64Type> UPkI64Table::Iter() const
{
    return GetAllRowsFromTable<FPkI64Type>(Data, TableName);
}
