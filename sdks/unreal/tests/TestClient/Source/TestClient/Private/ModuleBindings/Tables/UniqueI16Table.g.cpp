// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#include "ModuleBindings/Tables/UniqueI16Table.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UUniqueI16Table::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FUniqueI16Type>>();

    TSharedPtr<FTableCache<FUniqueI16Type>> UniqueI16Table = Data->GetOrAdd(TableName);
    UniqueI16Table->AddUniqueConstraint<int16>("n", [](const FUniqueI16Type& Row) -> const int16& {
        return Row.N; });

    N = NewObject<UUniqueI16NUniqueIndex>(this);
    N->SetCache(UniqueI16Table);

    /***/
}

FTableAppliedDiff<FUniqueI16Type> UUniqueI16Table::Update(TArray<FWithBsatn<FUniqueI16Type>> InsertsRef, TArray<FWithBsatn<FUniqueI16Type>> DeletesRef)
{
    FTableAppliedDiff<FUniqueI16Type> Diff = BaseUpdate<FUniqueI16Type>(InsertsRef, DeletesRef, Data, TableName);

    return Diff;
}

int32 UUniqueI16Table::Count() const
{
    return GetRowCountFromTable<FUniqueI16Type>(Data, TableName);
}

TArray<FUniqueI16Type> UUniqueI16Table::Iter() const
{
    return GetAllRowsFromTable<FUniqueI16Type>(Data, TableName);
}
