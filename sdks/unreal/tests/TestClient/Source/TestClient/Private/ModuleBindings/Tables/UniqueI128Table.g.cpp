// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#include "ModuleBindings/Tables/UniqueI128Table.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UUniqueI128Table::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FUniqueI128Type>>();

    TSharedPtr<FTableCache<FUniqueI128Type>> UniqueI128Table = Data->GetOrAdd(TableName);
    UniqueI128Table->AddUniqueConstraint<FSpacetimeDBInt128>("n", [](const FUniqueI128Type& Row) -> const FSpacetimeDBInt128& {
        return Row.N; });

    N = NewObject<UUniqueI128NUniqueIndex>(this);
    N->SetCache(UniqueI128Table);

    /***/
}

FTableAppliedDiff<FUniqueI128Type> UUniqueI128Table::Update(TArray<FWithBsatn<FUniqueI128Type>> InsertsRef, TArray<FWithBsatn<FUniqueI128Type>> DeletesRef)
{
    FTableAppliedDiff<FUniqueI128Type> Diff = BaseUpdate<FUniqueI128Type>(InsertsRef, DeletesRef, Data, TableName);

    return Diff;
}

int32 UUniqueI128Table::Count() const
{
    return GetRowCountFromTable<FUniqueI128Type>(Data, TableName);
}

TArray<FUniqueI128Type> UUniqueI128Table::Iter() const
{
    return GetAllRowsFromTable<FUniqueI128Type>(Data, TableName);
}
