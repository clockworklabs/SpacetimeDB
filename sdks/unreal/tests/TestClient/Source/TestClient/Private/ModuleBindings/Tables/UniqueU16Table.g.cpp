// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#include "ModuleBindings/Tables/UniqueU16Table.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UUniqueU16Table::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FUniqueU16Type>>();

    TSharedPtr<FTableCache<FUniqueU16Type>> UniqueU16Table = Data->GetOrAdd(TableName);
    UniqueU16Table->AddUniqueConstraint<uint16>("n", [](const FUniqueU16Type& Row) -> const uint16& {
        return Row.N; });

    N = NewObject<UUniqueU16NUniqueIndex>(this);
    N->SetCache(UniqueU16Table);

    /***/
}

FTableAppliedDiff<FUniqueU16Type> UUniqueU16Table::Update(TArray<FWithBsatn<FUniqueU16Type>> InsertsRef, TArray<FWithBsatn<FUniqueU16Type>> DeletesRef)
{
    FTableAppliedDiff<FUniqueU16Type> Diff = BaseUpdate<FUniqueU16Type>(InsertsRef, DeletesRef, Data, TableName);

    return Diff;
}

int32 UUniqueU16Table::Count() const
{
    return GetRowCountFromTable<FUniqueU16Type>(Data, TableName);
}

TArray<FUniqueU16Type> UUniqueU16Table::Iter() const
{
    return GetAllRowsFromTable<FUniqueU16Type>(Data, TableName);
}
