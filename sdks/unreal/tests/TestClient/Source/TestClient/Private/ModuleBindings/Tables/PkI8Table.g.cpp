// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#include "ModuleBindings/Tables/PkI8Table.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UPkI8Table::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FPkI8Type>>();

    TSharedPtr<FTableCache<FPkI8Type>> PkI8Table = Data->GetOrAdd(TableName);
    PkI8Table->AddUniqueConstraint<int8>("n", [](const FPkI8Type& Row) -> const int8& {
        return Row.N; });

    N = NewObject<UPkI8NUniqueIndex>(this);
    N->SetCache(PkI8Table);

    /***/
}

FTableAppliedDiff<FPkI8Type> UPkI8Table::Update(TArray<FWithBsatn<FPkI8Type>> InsertsRef, TArray<FWithBsatn<FPkI8Type>> DeletesRef)
{
    FTableAppliedDiff<FPkI8Type> Diff = BaseUpdate<FPkI8Type>(InsertsRef, DeletesRef, Data, TableName);

    Diff.DeriveUpdatesByPrimaryKey<int8>(
        [](const FPkI8Type& Row) 
        {
            return Row.N; 
        }
    );

    return Diff;
}

int32 UPkI8Table::Count() const
{
    return GetRowCountFromTable<FPkI8Type>(Data, TableName);
}

TArray<FPkI8Type> UPkI8Table::Iter() const
{
    return GetAllRowsFromTable<FPkI8Type>(Data, TableName);
}
