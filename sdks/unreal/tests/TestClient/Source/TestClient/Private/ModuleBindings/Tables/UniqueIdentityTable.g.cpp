// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#include "ModuleBindings/Tables/UniqueIdentityTable.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UUniqueIdentityTable::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FUniqueIdentityType>>();

    TSharedPtr<FTableCache<FUniqueIdentityType>> UniqueIdentityTable = Data->GetOrAdd(TableName);
    UniqueIdentityTable->AddUniqueConstraint<FSpacetimeDBIdentity>("i", [](const FUniqueIdentityType& Row) -> const FSpacetimeDBIdentity& {
        return Row.I; });

    I = NewObject<UUniqueIdentityIUniqueIndex>(this);
    I->SetCache(UniqueIdentityTable);

    /***/
}

FTableAppliedDiff<FUniqueIdentityType> UUniqueIdentityTable::Update(TArray<FWithBsatn<FUniqueIdentityType>> InsertsRef, TArray<FWithBsatn<FUniqueIdentityType>> DeletesRef)
{
    FTableAppliedDiff<FUniqueIdentityType> Diff = BaseUpdate<FUniqueIdentityType>(InsertsRef, DeletesRef, Data, TableName);

    return Diff;
}

int32 UUniqueIdentityTable::Count() const
{
    return GetRowCountFromTable<FUniqueIdentityType>(Data, TableName);
}

TArray<FUniqueIdentityType> UUniqueIdentityTable::Iter() const
{
    return GetAllRowsFromTable<FUniqueIdentityType>(Data, TableName);
}
