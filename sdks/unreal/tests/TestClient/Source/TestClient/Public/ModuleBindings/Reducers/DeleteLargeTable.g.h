// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#pragma once
#include "CoreMinimal.h"
#include "BSATN/UESpacetimeDB.h"
#include "ModuleBindings/ReducerBase.g.h"
#include "ModuleBindings/Types/ByteStructType.g.h"
#include "ModuleBindings/Types/EnumWithPayloadType.g.h"
#include "ModuleBindings/Types/EveryPrimitiveStructType.g.h"
#include "ModuleBindings/Types/EveryVecStructType.g.h"
#include "ModuleBindings/Types/SimpleEnumType.g.h"
#include "ModuleBindings/Types/UnitStructType.g.h"
#include "Types/Builtins.h"
#include "DeleteLargeTable.g.generated.h"

// Reducer arguments struct for DeleteLargeTable
USTRUCT(BlueprintType)
struct TESTCLIENT_API FDeleteLargeTableArgs
{
    GENERATED_BODY()

    UPROPERTY(BlueprintReadWrite, Category="SpacetimeDB")
    uint8 A;

    // NOTE: uint16 field not exposed to Blueprint due to non-blueprintable elements
    uint16 B;

    // NOTE: uint32 field not exposed to Blueprint due to non-blueprintable elements
    uint32 C;

    // NOTE: uint64 field not exposed to Blueprint due to non-blueprintable elements
    uint64 D;

    UPROPERTY(BlueprintReadWrite, Category="SpacetimeDB")
    FSpacetimeDBUInt128 E;

    UPROPERTY(BlueprintReadWrite, Category="SpacetimeDB")
    FSpacetimeDBUInt256 F;

    // NOTE: int8 field not exposed to Blueprint due to non-blueprintable elements
    int8 G;

    // NOTE: int16 field not exposed to Blueprint due to non-blueprintable elements
    int16 H;

    UPROPERTY(BlueprintReadWrite, Category="SpacetimeDB")
    int32 I;

    UPROPERTY(BlueprintReadWrite, Category="SpacetimeDB")
    int64 J;

    UPROPERTY(BlueprintReadWrite, Category="SpacetimeDB")
    FSpacetimeDBInt128 K;

    UPROPERTY(BlueprintReadWrite, Category="SpacetimeDB")
    FSpacetimeDBInt256 L;

    UPROPERTY(BlueprintReadWrite, Category="SpacetimeDB")
    bool M;

    UPROPERTY(BlueprintReadWrite, Category="SpacetimeDB")
    float N;

    UPROPERTY(BlueprintReadWrite, Category="SpacetimeDB")
    double O;

    UPROPERTY(BlueprintReadWrite, Category="SpacetimeDB")
    FString P;

    UPROPERTY(BlueprintReadWrite, Category="SpacetimeDB")
    ESimpleEnumType Q;

    UPROPERTY(BlueprintReadWrite, Category="SpacetimeDB")
    FEnumWithPayloadType R;

    UPROPERTY(BlueprintReadWrite, Category="SpacetimeDB")
    FUnitStructType S;

    UPROPERTY(BlueprintReadWrite, Category="SpacetimeDB")
    FByteStructType T;

    UPROPERTY(BlueprintReadWrite, Category="SpacetimeDB")
    FEveryPrimitiveStructType U;

    UPROPERTY(BlueprintReadWrite, Category="SpacetimeDB")
    FEveryVecStructType V;

    FDeleteLargeTableArgs() = default;

    FDeleteLargeTableArgs(const uint8& InA, const uint16& InB, const uint32& InC, const uint64& InD, const FSpacetimeDBUInt128& InE, const FSpacetimeDBUInt256& InF, const int8& InG, const int16& InH, const int32& InI, const int64& InJ, const FSpacetimeDBInt128& InK, const FSpacetimeDBInt256& InL, const bool& InM, const float& InN, const double& InO, const FString& InP, const ESimpleEnumType& InQ, const FEnumWithPayloadType& InR, const FUnitStructType& InS, const FByteStructType& InT, const FEveryPrimitiveStructType& InU, const FEveryVecStructType& InV)
        : A(InA), B(InB), C(InC), D(InD), E(InE), F(InF), G(InG), H(InH), I(InI), J(InJ), K(InK), L(InL), M(InM), N(InN), O(InO), P(InP), Q(InQ), R(InR), S(InS), T(InT), U(InU), V(InV)
    {}


    FORCEINLINE bool operator==(const FDeleteLargeTableArgs& Other) const
    {
        return A == Other.A && B == Other.B && C == Other.C && D == Other.D && E == Other.E && F == Other.F && G == Other.G && H == Other.H && I == Other.I && J == Other.J && K == Other.K && L == Other.L && M == Other.M && N == Other.N && O == Other.O && P == Other.P && Q == Other.Q && R == Other.R && S == Other.S && T == Other.T && U == Other.U && V == Other.V;
    }
    FORCEINLINE bool operator!=(const FDeleteLargeTableArgs& Other) const
    {
        return !(*this == Other);
    }
};

namespace UE::SpacetimeDB
{
    UE_SPACETIMEDB_STRUCT(FDeleteLargeTableArgs, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V);
}

// Reducer class for internal dispatching
UCLASS(BlueprintType)
class TESTCLIENT_API UDeleteLargeTableReducer : public UReducerBase
{
    GENERATED_BODY()

public:
    UPROPERTY(BlueprintReadOnly, Category="SpacetimeDB")
    uint8 A;
    // NOTE: uint16 field not exposed to Blueprint due to non-blueprintable elements
    uint16 B;
    // NOTE: uint32 field not exposed to Blueprint due to non-blueprintable elements
    uint32 C;
    // NOTE: uint64 field not exposed to Blueprint due to non-blueprintable elements
    uint64 D;
    UPROPERTY(BlueprintReadOnly, Category="SpacetimeDB")
    FSpacetimeDBUInt128 E;
    UPROPERTY(BlueprintReadOnly, Category="SpacetimeDB")
    FSpacetimeDBUInt256 F;
    // NOTE: int8 field not exposed to Blueprint due to non-blueprintable elements
    int8 G;
    // NOTE: int16 field not exposed to Blueprint due to non-blueprintable elements
    int16 H;
    UPROPERTY(BlueprintReadOnly, Category="SpacetimeDB")
    int32 I;
    UPROPERTY(BlueprintReadOnly, Category="SpacetimeDB")
    int64 J;
    UPROPERTY(BlueprintReadOnly, Category="SpacetimeDB")
    FSpacetimeDBInt128 K;
    UPROPERTY(BlueprintReadOnly, Category="SpacetimeDB")
    FSpacetimeDBInt256 L;
    UPROPERTY(BlueprintReadOnly, Category="SpacetimeDB")
    bool M;
    UPROPERTY(BlueprintReadOnly, Category="SpacetimeDB")
    float N;
    UPROPERTY(BlueprintReadOnly, Category="SpacetimeDB")
    double O;
    UPROPERTY(BlueprintReadOnly, Category="SpacetimeDB")
    FString P;
    UPROPERTY(BlueprintReadOnly, Category="SpacetimeDB")
    ESimpleEnumType Q;
    UPROPERTY(BlueprintReadOnly, Category="SpacetimeDB")
    FEnumWithPayloadType R;
    UPROPERTY(BlueprintReadOnly, Category="SpacetimeDB")
    FUnitStructType S;
    UPROPERTY(BlueprintReadOnly, Category="SpacetimeDB")
    FByteStructType T;
    UPROPERTY(BlueprintReadOnly, Category="SpacetimeDB")
    FEveryPrimitiveStructType U;
    UPROPERTY(BlueprintReadOnly, Category="SpacetimeDB")
    FEveryVecStructType V;

};


