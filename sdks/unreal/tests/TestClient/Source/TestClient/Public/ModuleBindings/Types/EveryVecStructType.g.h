// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#pragma once
#include "CoreMinimal.h"
#include "BSATN/UESpacetimeDB.h"
#include "Types/Builtins.h"
#include "EveryVecStructType.g.generated.h"

USTRUCT(BlueprintType)
struct TESTCLIENT_API FEveryVecStructType
{
    GENERATED_BODY()

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    TArray<uint8> A;

    // NOTE: TArray<uint16> field not exposed to Blueprint due to non-blueprintable elements
    TArray<uint16> B;

    // NOTE: TArray<uint32> field not exposed to Blueprint due to non-blueprintable elements
    TArray<uint32> C;

    // NOTE: TArray<uint64> field not exposed to Blueprint due to non-blueprintable elements
    TArray<uint64> D;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    TArray<FSpacetimeDBUInt128> E;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    TArray<FSpacetimeDBUInt256> F;

    // NOTE: TArray<int8> field not exposed to Blueprint due to non-blueprintable elements
    TArray<int8> G;

    // NOTE: TArray<int16> field not exposed to Blueprint due to non-blueprintable elements
    TArray<int16> H;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    TArray<int32> I;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    TArray<int64> J;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    TArray<FSpacetimeDBInt128> K;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    TArray<FSpacetimeDBInt256> L;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    TArray<bool> M;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    TArray<float> N;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    TArray<double> O;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    TArray<FString> P;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    TArray<FSpacetimeDBIdentity> Q;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    TArray<FSpacetimeDBConnectionId> R;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    TArray<FSpacetimeDBTimestamp> S;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    TArray<FSpacetimeDBTimeDuration> T;

    FORCEINLINE bool operator==(const FEveryVecStructType& Other) const
    {
        return A == Other.A && B == Other.B && C == Other.C && D == Other.D && E == Other.E && F == Other.F && G == Other.G && H == Other.H && I == Other.I && J == Other.J && K == Other.K && L == Other.L && M == Other.M && N == Other.N && O == Other.O && P == Other.P && Q == Other.Q && R == Other.R && S == Other.S && T == Other.T;
    }

    FORCEINLINE bool operator!=(const FEveryVecStructType& Other) const
    {
        return !(*this == Other);
    }
};

/**
 * Custom hash function for FEveryVecStructType.
 * Combines the hashes of all fields that are compared in operator==.
 * @param EveryVecStructType The FEveryVecStructType instance to hash.
 * @return The combined hash value.
 */
FORCEINLINE uint32 GetTypeHash(const FEveryVecStructType& EveryVecStructType)
{
    uint32 Hash = GetTypeHash(EveryVecStructType.A);
    Hash = HashCombine(Hash, GetTypeHash(EveryVecStructType.B));
    Hash = HashCombine(Hash, GetTypeHash(EveryVecStructType.C));
    Hash = HashCombine(Hash, GetTypeHash(EveryVecStructType.D));
    Hash = HashCombine(Hash, GetTypeHash(EveryVecStructType.E));
    Hash = HashCombine(Hash, GetTypeHash(EveryVecStructType.F));
    Hash = HashCombine(Hash, GetTypeHash(EveryVecStructType.G));
    Hash = HashCombine(Hash, GetTypeHash(EveryVecStructType.H));
    Hash = HashCombine(Hash, GetTypeHash(EveryVecStructType.I));
    Hash = HashCombine(Hash, GetTypeHash(EveryVecStructType.J));
    Hash = HashCombine(Hash, GetTypeHash(EveryVecStructType.K));
    Hash = HashCombine(Hash, GetTypeHash(EveryVecStructType.L));
    Hash = HashCombine(Hash, GetTypeHash(EveryVecStructType.M));
    Hash = HashCombine(Hash, GetTypeHash(EveryVecStructType.N));
    Hash = HashCombine(Hash, GetTypeHash(EveryVecStructType.O));
    Hash = HashCombine(Hash, GetTypeHash(EveryVecStructType.P));
    Hash = HashCombine(Hash, GetTypeHash(EveryVecStructType.Q));
    Hash = HashCombine(Hash, GetTypeHash(EveryVecStructType.R));
    Hash = HashCombine(Hash, GetTypeHash(EveryVecStructType.S));
    Hash = HashCombine(Hash, GetTypeHash(EveryVecStructType.T));
    return Hash;
}

namespace UE::SpacetimeDB
{
    UE_SPACETIMEDB_ENABLE_TARRAY(FEveryVecStructType);

    UE_SPACETIMEDB_STRUCT(FEveryVecStructType, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T);
}
