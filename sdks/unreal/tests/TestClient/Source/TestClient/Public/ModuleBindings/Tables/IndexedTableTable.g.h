// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#pragma once
#include "CoreMinimal.h"
#include "BSATN/UESpacetimeDB.h"
#include "Types/Builtins.h"
#include "ModuleBindings/Types/IndexedTableType.g.h"
#include "Tables/RemoteTable.h"
#include "DBCache/WithBsatn.h"
#include "DBCache/TableHandle.h"
#include "DBCache/TableCache.h"
#include "IndexedTableTable.g.generated.h"

UCLASS(Blueprintable)
class UIndexedTablePlayerIdIndex : public UObject
{
    GENERATED_BODY()

public:
    TArray<FIndexedTableType> Filter(const uint32& PlayerId) const
    {
        TArray<FIndexedTableType> OutResults;

        LocalCache->FindByMultiKeyBTreeIndex<TTuple<uint32>>(
            OutResults,
            TEXT("player_id"),
            MakeTuple(PlayerId)
        );

        return OutResults;
    }

    void SetCache(TSharedPtr<FTableCache<FIndexedTableType>> InCache)
    {
        LocalCache = InCache;
    }

private:
    // NOTE: Not exposed to Blueprint because some parameter types are not Blueprint-compatible
    void FilterPlayerId(TArray<FIndexedTableType>& OutResults, const uint32& PlayerId)
    {
        OutResults = Filter(PlayerId);
    }

    TSharedPtr<FTableCache<FIndexedTableType>> LocalCache;
};

UCLASS(BlueprintType)
class TESTCLIENT_API UIndexedTableTable : public URemoteTable
{
    GENERATED_BODY()

public:
    UPROPERTY(BlueprintReadOnly)
    UIndexedTablePlayerIdIndex* PlayerId;

    void PostInitialize();

    /** Update function for indexed_table table*/
    FTableAppliedDiff<FIndexedTableType> Update(TArray<FWithBsatn<FIndexedTableType>> InsertsRef, TArray<FWithBsatn<FIndexedTableType>> DeletesRef);

    /** Number of subscribed rows currently in the cache */
    UFUNCTION(BlueprintCallable, Category = "SpacetimeDB")
    int32 Count() const;

    /** Return all subscribed rows in the cache */
    UFUNCTION(BlueprintCallable, Category = "SpacetimeDB")
    TArray<FIndexedTableType> Iter() const;

    // Table Events
    DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams( 
        FOnIndexedTableInsert,
        const FEventContext&, Context,
        const FIndexedTableType&, NewRow);

    DECLARE_DYNAMIC_MULTICAST_DELEGATE_ThreeParams( 
        FOnIndexedTableUpdate,
        const FEventContext&, Context,
        const FIndexedTableType&, OldRow,
        const FIndexedTableType&, NewRow);

    DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams( 
        FOnIndexedTableDelete,
        const FEventContext&, Context,
        const FIndexedTableType&, DeletedRow);

    UPROPERTY(BlueprintAssignable, Category = "SpacetimeDB Events")
    FOnIndexedTableInsert OnInsert;

    UPROPERTY(BlueprintAssignable, Category = "SpacetimeDB Events")
    FOnIndexedTableUpdate OnUpdate;

    UPROPERTY(BlueprintAssignable, Category = "SpacetimeDB Events")
    FOnIndexedTableDelete OnDelete;

private:
    const FString TableName = TEXT("indexed_table");

    TSharedPtr<UClientCache<FIndexedTableType>> Data;
};
