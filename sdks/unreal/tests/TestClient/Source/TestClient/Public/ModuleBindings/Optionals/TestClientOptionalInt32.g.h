// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#pragma once
#include "CoreMinimal.h"
#include "BSATN/UESpacetimeDB.h"
#include "TestClientOptionalInt32.g.generated.h"

USTRUCT(BlueprintType)
struct TESTCLIENT_API FTestClientOptionalInt32
{
    GENERATED_BODY()

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    bool bHasValue = false;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB", meta = (EditCondition = "bHasValue"))
    int32 Value;

    FTestClientOptionalInt32() = default;

    explicit FTestClientOptionalInt32(const int32& InValue)
        : bHasValue(true), Value(InValue) {}

    bool IsSet() const { return bHasValue; }
    void Reset() { bHasValue = false; }

    FORCEINLINE bool operator==(const FTestClientOptionalInt32& Other) const
    {
        if (bHasValue != Other.bHasValue) return false;
        return !bHasValue || Value == Other.Value;
    }

    FORCEINLINE bool operator!=(const FTestClientOptionalInt32& Other) const
    {
        return !(*this == Other);
    }
};

/**
 * Custom hash function for FTestClientOptionalInt32.
 * Hashes the HasValue flag and the Value if present.
 * @param Optional The FTestClientOptionalInt32 instance to hash.
 * @return The combined hash value.
 */
FORCEINLINE uint32 GetTypeHash(const FTestClientOptionalInt32& Optional)
{
    uint32 Hash = GetTypeHash(Optional.bHasValue);
    if (Optional.bHasValue)
    {
        Hash = HashCombine(Hash, GetTypeHash(Optional.Value));
    }
    return Hash;
}

namespace UE::SpacetimeDB
{
    UE_SPACETIMEDB_ENABLE_TARRAY(FTestClientOptionalInt32);

    UE_SPACETIMEDB_OPTIONAL(FTestClientOptionalInt32, bHasValue, Value);
}
