// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#pragma once
#include "CoreMinimal.h"
#include "BSATN/UESpacetimeDB.h"
#include "IndexedTable2Type.g.generated.h"

USTRUCT(BlueprintType)
struct TESTCLIENT_API FIndexedTable2Type
{
    GENERATED_BODY()

    // NOTE: uint32 field not exposed to Blueprint due to non-blueprintable elements
    uint32 PlayerId;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    float PlayerSnazz;

    FORCEINLINE bool operator==(const FIndexedTable2Type& Other) const
    {
        return PlayerId == Other.PlayerId && PlayerSnazz == Other.PlayerSnazz;
    }

    FORCEINLINE bool operator!=(const FIndexedTable2Type& Other) const
    {
        return !(*this == Other);
    }
};

/**
 * Custom hash function for FIndexedTable2Type.
 * Combines the hashes of all fields that are compared in operator==.
 * @param IndexedTable2Type The FIndexedTable2Type instance to hash.
 * @return The combined hash value.
 */
FORCEINLINE uint32 GetTypeHash(const FIndexedTable2Type& IndexedTable2Type)
{
    uint32 Hash = GetTypeHash(IndexedTable2Type.PlayerId);
    Hash = HashCombine(Hash, GetTypeHash(IndexedTable2Type.PlayerSnazz));
    return Hash;
}

namespace UE::SpacetimeDB
{
    UE_SPACETIMEDB_ENABLE_TARRAY(FIndexedTable2Type);

    UE_SPACETIMEDB_STRUCT(FIndexedTable2Type, PlayerId, PlayerSnazz);
}
