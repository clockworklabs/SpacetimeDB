// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#pragma once
#include "CoreMinimal.h"
#include "BSATN/UESpacetimeDB.h"
#include "ModuleBindings/Types/OneU8Type.g.h"
#include "ModuleBindings/Types/VecU8Type.g.h"
#include "TableHoldsTableType.g.generated.h"

USTRUCT(BlueprintType)
struct TESTCLIENT_API FTableHoldsTableType
{
    GENERATED_BODY()

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    FOneU8Type A;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    FVecU8Type B;

    FORCEINLINE bool operator==(const FTableHoldsTableType& Other) const
    {
        return A == Other.A && B == Other.B;
    }

    FORCEINLINE bool operator!=(const FTableHoldsTableType& Other) const
    {
        return !(*this == Other);
    }
};

/**
 * Custom hash function for FTableHoldsTableType.
 * Combines the hashes of all fields that are compared in operator==.
 * @param TableHoldsTableType The FTableHoldsTableType instance to hash.
 * @return The combined hash value.
 */
FORCEINLINE uint32 GetTypeHash(const FTableHoldsTableType& TableHoldsTableType)
{
    uint32 Hash = GetTypeHash(TableHoldsTableType.A);
    Hash = HashCombine(Hash, GetTypeHash(TableHoldsTableType.B));
    return Hash;
}

namespace UE::SpacetimeDB
{
    UE_SPACETIMEDB_ENABLE_TARRAY(FTableHoldsTableType);

    UE_SPACETIMEDB_STRUCT(FTableHoldsTableType, A, B);
}
