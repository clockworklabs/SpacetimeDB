// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#include "ModuleBindings/Tables/UserTable.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UUserTable::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FUserType>>();

    TSharedPtr<FTableCache<FUserType>> UserTable = Data->GetOrAdd(TableName);
    UserTable->AddUniqueConstraint<FSpacetimeDBIdentity>("identity", [](const FUserType& Row) -> const FSpacetimeDBIdentity& {
        return Row.Identity; });

    Identity = NewObject<UUserIdentityUniqueIndex>(this);
    Identity->SetCache(UserTable);

    /***/
}

FTableAppliedDiff<FUserType> UUserTable::Update(TArray<FWithBsatn<FUserType>> InsertsRef, TArray<FWithBsatn<FUserType>> DeletesRef)
{
    FTableAppliedDiff<FUserType> Diff = BaseUpdate<FUserType>(InsertsRef, DeletesRef, Data, TableName);

    Diff.DeriveUpdatesByPrimaryKey<FSpacetimeDBIdentity>(
        [](const FUserType& Row) 
        {
            return Row.Identity; 
        }
    );

    return Diff;
}

int32 UUserTable::Count() const
{
    return GetRowCountFromTable<FUserType>(Data, TableName);
}

TArray<FUserType> UUserTable::Iter() const
{
    return GetAllRowsFromTable<FUserType>(Data, TableName);
}
