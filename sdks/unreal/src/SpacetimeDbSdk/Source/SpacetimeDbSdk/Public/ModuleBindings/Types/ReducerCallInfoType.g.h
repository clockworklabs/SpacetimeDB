// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#pragma once
#include "CoreMinimal.h"
#include "BSATN/UESpacetimeDB.h"
#include "ReducerCallInfoType.g.generated.h"

USTRUCT(BlueprintType)
struct SPACETIMEDBSDK_API FReducerCallInfoType
{
    GENERATED_BODY()

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    FString ReducerName;

    // NOTE: uint32 field not exposed to Blueprint due to non-blueprintable elements
    uint32 ReducerId = 0;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    TArray<uint8> Args;

    // NOTE: uint32 field not exposed to Blueprint due to non-blueprintable elements
    uint32 RequestId = 0;

    FORCEINLINE bool operator==(const FReducerCallInfoType& Other) const
    {
        return ReducerName == Other.ReducerName && ReducerId == Other.ReducerId && Args == Other.Args && RequestId == Other.RequestId;
    }

    FORCEINLINE bool operator!=(const FReducerCallInfoType& Other) const
    {
        return !(*this == Other);
    }
};

/**
 * Custom hash function for FReducerCallInfoType.
 * Combines the hashes of all fields that are compared in operator==.
 * @param ReducerCallInfoType The FReducerCallInfoType instance to hash.
 * @return The combined hash value.
 */
FORCEINLINE uint32 GetTypeHash(const FReducerCallInfoType& ReducerCallInfoType)
{
    uint32 Hash = GetTypeHash(ReducerCallInfoType.ReducerName);
    Hash = HashCombine(Hash, GetTypeHash(ReducerCallInfoType.ReducerId));
    Hash = HashCombine(Hash, GetTypeHash(ReducerCallInfoType.Args));
    Hash = HashCombine(Hash, GetTypeHash(ReducerCallInfoType.RequestId));
    return Hash;
}

namespace UE::SpacetimeDB
{
    UE_SPACETIMEDB_ENABLE_TARRAY(FReducerCallInfoType);

    UE_SPACETIMEDB_STRUCT(FReducerCallInfoType, ReducerName, ReducerId, Args, RequestId);
}
