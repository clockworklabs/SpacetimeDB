// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#pragma once
#include "CoreMinimal.h"
#include "BSATN/UESpacetimeDB.h"
#include "ModuleBindings/Optionals/SpacetimeDbSdkOptionalUInt32.g.h"
#include "SubscriptionErrorType.g.generated.h"

USTRUCT(BlueprintType)
struct SPACETIMEDBSDK_API FSubscriptionErrorType
{
    GENERATED_BODY()

    // NOTE: uint64 field not exposed to Blueprint due to non-blueprintable elements
    uint64 TotalHostExecutionDurationMicros;

    // NOTE: FSpacetimeDbSdkOptionalUInt32 field not exposed to Blueprint due to non-blueprintable elements
    FSpacetimeDbSdkOptionalUInt32 RequestId;

    // NOTE: FSpacetimeDbSdkOptionalUInt32 field not exposed to Blueprint due to non-blueprintable elements
    FSpacetimeDbSdkOptionalUInt32 QueryId;

    // NOTE: FSpacetimeDbSdkOptionalUInt32 field not exposed to Blueprint due to non-blueprintable elements
    FSpacetimeDbSdkOptionalUInt32 TableId;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    FString Error;

    FORCEINLINE bool operator==(const FSubscriptionErrorType& Other) const
    {
        return TotalHostExecutionDurationMicros == Other.TotalHostExecutionDurationMicros && RequestId == Other.RequestId && QueryId == Other.QueryId && TableId == Other.TableId && Error == Other.Error;
    }

    FORCEINLINE bool operator!=(const FSubscriptionErrorType& Other) const
    {
        return !(*this == Other);
    }
};

/**
 * Custom hash function for FSubscriptionErrorType.
 * Combines the hashes of all fields that are compared in operator==.
 * @param SubscriptionErrorType The FSubscriptionErrorType instance to hash.
 * @return The combined hash value.
 */
FORCEINLINE uint32 GetTypeHash(const FSubscriptionErrorType& SubscriptionErrorType)
{
    uint32 Hash = GetTypeHash(SubscriptionErrorType.TotalHostExecutionDurationMicros);
    Hash = HashCombine(Hash, GetTypeHash(SubscriptionErrorType.RequestId));
    Hash = HashCombine(Hash, GetTypeHash(SubscriptionErrorType.QueryId));
    Hash = HashCombine(Hash, GetTypeHash(SubscriptionErrorType.TableId));
    Hash = HashCombine(Hash, GetTypeHash(SubscriptionErrorType.Error));
    return Hash;
}

namespace UE::SpacetimeDB
{
    UE_SPACETIMEDB_ENABLE_TARRAY(FSubscriptionErrorType);

    UE_SPACETIMEDB_STRUCT(FSubscriptionErrorType, TotalHostExecutionDurationMicros, RequestId, QueryId, TableId, Error);
}
