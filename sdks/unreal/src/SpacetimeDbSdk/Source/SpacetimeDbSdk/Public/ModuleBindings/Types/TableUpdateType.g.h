// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#pragma once
#include "CoreMinimal.h"
#include "BSATN/UESpacetimeDB.h"
#include "ModuleBindings/Types/CompressableQueryUpdateType.g.h"
#include "TableUpdateType.g.generated.h"

USTRUCT(BlueprintType)
struct SPACETIMEDBSDK_API FTableUpdateType
{
    GENERATED_BODY()

    // NOTE: uint32 field not exposed to Blueprint due to non-blueprintable elements
    uint32 TableId = 0;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    FString TableName;

    // NOTE: uint64 field not exposed to Blueprint due to non-blueprintable elements
    uint64 NumRows = 0;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    TArray<FCompressableQueryUpdateType> Updates;

    FORCEINLINE bool operator==(const FTableUpdateType& Other) const
    {
        return TableId == Other.TableId && TableName == Other.TableName && NumRows == Other.NumRows && Updates == Other.Updates;
    }

    FORCEINLINE bool operator!=(const FTableUpdateType& Other) const
    {
        return !(*this == Other);
    }
};

/**
 * Custom hash function for FTableUpdateType.
 * Combines the hashes of all fields that are compared in operator==.
 * @param TableUpdateType The FTableUpdateType instance to hash.
 * @return The combined hash value.
 */
FORCEINLINE uint32 GetTypeHash(const FTableUpdateType& TableUpdateType)
{
    uint32 Hash = GetTypeHash(TableUpdateType.TableId);
    Hash = HashCombine(Hash, GetTypeHash(TableUpdateType.TableName));
    Hash = HashCombine(Hash, GetTypeHash(TableUpdateType.NumRows));
    Hash = HashCombine(Hash, GetTypeHash(TableUpdateType.Updates));
    return Hash;
}

namespace UE::SpacetimeDB
{
    UE_SPACETIMEDB_ENABLE_TARRAY(FTableUpdateType);

    UE_SPACETIMEDB_STRUCT(FTableUpdateType, TableId, TableName, NumRows, Updates);
}
