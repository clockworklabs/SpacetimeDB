// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#pragma once
#include "CoreMinimal.h"
#include "BSATN/UESpacetimeDB.h"
#include "Types/Builtins.h"
#include "ConsumeEntityTimerType.g.generated.h"

USTRUCT(BlueprintType)
struct CLIENT_UNREAL_API FConsumeEntityTimerType
{
    GENERATED_BODY()

    // NOTE: uint64 field not exposed to Blueprint due to non-blueprintable elements
    uint64 ScheduledId = 0;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    FSpacetimeDBScheduleAt ScheduledAt;

    // NOTE: uint32 field not exposed to Blueprint due to non-blueprintable elements
    uint32 ConsumedEntityId = 0;

    // NOTE: uint32 field not exposed to Blueprint due to non-blueprintable elements
    uint32 ConsumerEntityId = 0;

    FORCEINLINE bool operator==(const FConsumeEntityTimerType& Other) const
    {
        return ScheduledId == Other.ScheduledId && ScheduledAt == Other.ScheduledAt && ConsumedEntityId == Other.ConsumedEntityId && ConsumerEntityId == Other.ConsumerEntityId;
    }

    FORCEINLINE bool operator!=(const FConsumeEntityTimerType& Other) const
    {
        return !(*this == Other);
    }
};

/**
 * Custom hash function for FConsumeEntityTimerType.
 * Combines the hashes of all fields that are compared in operator==.
 * @param ConsumeEntityTimerType The FConsumeEntityTimerType instance to hash.
 * @return The combined hash value.
 */
FORCEINLINE uint32 GetTypeHash(const FConsumeEntityTimerType& ConsumeEntityTimerType)
{
    uint32 Hash = GetTypeHash(ConsumeEntityTimerType.ScheduledId);
    Hash = HashCombine(Hash, GetTypeHash(ConsumeEntityTimerType.ScheduledAt));
    Hash = HashCombine(Hash, GetTypeHash(ConsumeEntityTimerType.ConsumedEntityId));
    Hash = HashCombine(Hash, GetTypeHash(ConsumeEntityTimerType.ConsumerEntityId));
    return Hash;
}

namespace UE::SpacetimeDB
{
    UE_SPACETIMEDB_ENABLE_TARRAY(FConsumeEntityTimerType);

    UE_SPACETIMEDB_STRUCT(FConsumeEntityTimerType, ScheduledId, ScheduledAt, ConsumedEntityId, ConsumerEntityId);
}
