// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#pragma once
#include "CoreMinimal.h"
#include "BSATN/UESpacetimeDB.h"
#include "Types/Builtins.h"
#include "CircleRecombineTimerType.g.generated.h"

USTRUCT(BlueprintType)
struct CLIENT_UNREAL_API FCircleRecombineTimerType
{
    GENERATED_BODY()

    // NOTE: uint64 field not exposed to Blueprint due to non-blueprintable elements
    uint64 ScheduledId = 0;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    FSpacetimeDBScheduleAt ScheduledAt;

    // NOTE: uint32 field not exposed to Blueprint due to non-blueprintable elements
    uint32 PlayerId = 0;

    FORCEINLINE bool operator==(const FCircleRecombineTimerType& Other) const
    {
        return ScheduledId == Other.ScheduledId && ScheduledAt == Other.ScheduledAt && PlayerId == Other.PlayerId;
    }

    FORCEINLINE bool operator!=(const FCircleRecombineTimerType& Other) const
    {
        return !(*this == Other);
    }
};

/**
 * Custom hash function for FCircleRecombineTimerType.
 * Combines the hashes of all fields that are compared in operator==.
 * @param CircleRecombineTimerType The FCircleRecombineTimerType instance to hash.
 * @return The combined hash value.
 */
FORCEINLINE uint32 GetTypeHash(const FCircleRecombineTimerType& CircleRecombineTimerType)
{
    uint32 Hash = GetTypeHash(CircleRecombineTimerType.ScheduledId);
    Hash = HashCombine(Hash, GetTypeHash(CircleRecombineTimerType.ScheduledAt));
    Hash = HashCombine(Hash, GetTypeHash(CircleRecombineTimerType.PlayerId));
    return Hash;
}

namespace UE::SpacetimeDB
{
    UE_SPACETIMEDB_ENABLE_TARRAY(FCircleRecombineTimerType);

    UE_SPACETIMEDB_STRUCT(FCircleRecombineTimerType, ScheduledId, ScheduledAt, PlayerId);
}
