// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#include "ModuleBindings/Tables/ConfigTable.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UConfigTable::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FConfigType>>();

    TSharedPtr<FTableCache<FConfigType>> ConfigTable = Data->GetOrAdd(TableName);
    ConfigTable->AddUniqueConstraint<uint32>("id", [](const FConfigType& Row) -> const uint32& {
        return Row.Id; });

    Id = NewObject<UConfigIdUniqueIndex>(this);
    Id->SetCache(ConfigTable);

    /***/
}

FTableAppliedDiff<FConfigType> UConfigTable::Update(TArray<FWithBsatn<FConfigType>> InsertsRef, TArray<FWithBsatn<FConfigType>> DeletesRef)
{
    FTableAppliedDiff<FConfigType> Diff = BaseUpdate<FConfigType>(InsertsRef, DeletesRef, Data, TableName);

    Diff.DeriveUpdatesByPrimaryKey<uint32>(
        [](const FConfigType& Row) 
        {
            return Row.Id; 
        }
    );

    return Diff;
}

int32 UConfigTable::Count() const
{
    return GetRowCountFromTable<FConfigType>(Data, TableName);
}

TArray<FConfigType> UConfigTable::Iter() const
{
    return GetAllRowsFromTable<FConfigType>(Data, TableName);
}
