// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#include "ModuleBindings/Tables/FoodTable.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UFoodTable::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FFoodType>>();

    TSharedPtr<FTableCache<FFoodType>> FoodTable = Data->GetOrAdd(TableName);
    FoodTable->AddUniqueConstraint<int32>("entity_id", [](const FFoodType& Row) -> const int32& {
        return Row.EntityId; });

    EntityId = NewObject<UFoodEntityIdUniqueIndex>(this);
    EntityId->SetCache(FoodTable);

    /***/
}

FTableAppliedDiff<FFoodType> UFoodTable::Update(TArray<FWithBsatn<FFoodType>> InsertsRef, TArray<FWithBsatn<FFoodType>> DeletesRef)
{
    FTableAppliedDiff<FFoodType> Diff = BaseUpdate<FFoodType>(InsertsRef, DeletesRef, Data, TableName);

    Diff.DeriveUpdatesByPrimaryKey<int32>(
        [](const FFoodType& Row) 
        {
            return Row.EntityId; 
        }
    );

    return Diff;
}

int32 UFoodTable::Count() const
{
    return GetRowCountFromTable<FFoodType>(Data, TableName);
}

TArray<FFoodType> UFoodTable::Iter() const
{
    return GetAllRowsFromTable<FFoodType>(Data, TableName);
}
