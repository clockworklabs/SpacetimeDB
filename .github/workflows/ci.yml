on:
  pull_request:
  push:
    branches:
      - master
  merge_group:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull Request Number'
        required: false
        default: ''

name: CI

jobs:
  docker_smoketests:
    name: Smoketests
    strategy:
      matrix:
        include:
          - { runner: windows-latest, smoketest_args: --no-build-cli }
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Find Git ref
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          PR_NUMBER="${{ github.event.inputs.pr_number || null }}"
          if test -n "${PR_NUMBER}"; then
            GIT_REF="$( gh pr view --repo clockworklabs/SpacetimeDB $PR_NUMBER --json headRefName --jq .headRefName )"
          else
            GIT_REF="${{ github.ref }}"
          fi
          echo "GIT_REF=${GIT_REF}" >>"$GITHUB_ENV"
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          ref: ${{ env.GIT_REF }}
      - uses: dsherret/rust-toolchain-file@v1
      - uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json
      - name: Install psql (Windows)
        if: runner.os == 'Windows'
        run: choco install psql -y --no-progress
        shell: powershell
      - name: Build and start database (Linux)
        if: runner.os == 'Linux'
        run: docker compose up -d
      - name: Build and start database (Windows)
        if: runner.os == 'Windows'
        run: |
          # Fail properly if any individual command fails
          $ErrorActionPreference = 'Stop'
          $PSNativeCommandUseErrorActionPreference = $true

          $env:RUSTFLAGS='-C link-arg=/VERBOSE:LIB -C link-arg=/INCREMENTAL:NO -C link-arg=/DEBUG:FASTLINK'
          # $env:RUSTFLAGS='-Clinker=lld-link -C debuginfo=1 -C link-arg=/DEBUG:FULL' + " -C link-arg=/PDB:`"$pdb`" -C link-arg=/PDBSTRIPPED:`"$pdb.stripped`""
          $env:RUSTFLAGS='-C link-arg=/INCREMENTAL:NO -C debuginfo=1 -C link-arg=/DEBUG:FULL'
          cargo build -p spacetimedb-standalone
          cd modules
          # the sdk-manifests on windows-latest are messed up, so we need to update them
          dotnet workload config --update-mode manifests
          dotnet workload update
