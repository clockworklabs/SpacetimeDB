//
// This function is used to manually specify a name for the check. In this case, its "Internal Tests".
// Source: https://stackoverflow.com/a/47162309
//
void setBuildStatus(String message, String state) {
  step([
      $class: "GitHubCommitStatusSetter",
	reposSource: [$class: "ManuallyEnteredRepositorySource", url: "https://github.com/clockworklabs/SpacetimeDB"],
      contextSource: [$class: "ManuallyEnteredCommitContextSource", context: "Internal Tests"],
      errorHandlers: [[$class: "ChangingBuildStatusErrorHandler", result: "UNSTABLE"]],
      statusResultSource: [ $class: "ConditionalStatusResultSource", results: [[$class: "AnyBuildResult", message: message, state: state]] ]
  ]);
}

pipeline {
    agent any
    
    stages {
	
	stage('Git Checkout') {
	    steps {
		setBuildStatus("Build pending", "PENDING")
		checkout scm
	    }
	}

	stage('Public-Private Tests') {
	    steps {
	    	script {
		    
		    def jobName = 'Internal Tests'
		    def branchName = 'master' // branch to trigger

		    // call the internal Jenkins job
		    build job: "/${jobName}/${branchName}", propagate: true, wait: true, parameters: [
			string(
			    name: 'SPACETIMEDB_PUBLIC_BRANCH',
			    value: "${env.BRANCH_NAME}"
			)
		    ]
		}
	    }
	}
    }

    post {
	success {
            setBuildStatus("Build succeeded", "SUCCESS");
	}
	failure {
            setBuildStatus("Build failed", "FAILURE");
	}
    }
}
    
